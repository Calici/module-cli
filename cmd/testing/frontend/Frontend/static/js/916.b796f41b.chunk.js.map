{"version":3,"file":"static/js/916.b796f41b.chunk.js","mappings":"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","sources":["API/base.ts","display/share/V1Table/Zoomable.tsx","libs/validator.js"],"sourcesContent":["import axios, {\n  AxiosHeaders,\n  AxiosRequestConfig,\n  AxiosRequestHeaders,\n  AxiosResponse,\n  Method\n} from 'axios'\nimport { Buffer } from 'buffer'\n\nabstract class TokenBase{\n  static storageKey : string = 'pharm-token'\n}\n\nexport class Token extends TokenBase{\n  refreshToken : string\n  jwtToken     : string\n  constructor(refreshToken : string = '', jwtToken : string = ''){\n    super()\n    this.refreshToken   = refreshToken\n    this.jwtToken       = jwtToken\n  }\n  clear(){\n    this.refreshToken   = ''\n    this.jwtToken       = ''\n  }\n  set(jwtToken : string = '', refreshToken : string = ''){\n    if(jwtToken !== '') this.jwtToken = jwtToken\n    if(refreshToken !== '') this.refreshToken = refreshToken\n    this.saveToken()\n  }\n  saveToken(){\n    const saveItem = {\n      refreshToken : this.refreshToken, jwtToken : this.jwtToken\n    }\n    const saveStr  = Buffer.from(JSON.stringify(saveItem)).toString('base64')\n    localStorage.setItem(Token.storageKey, saveStr)\n  }\n  loadToken(){\n    const load    = localStorage.getItem(Token.storageKey)\n    const loadStr = Buffer.from(load ? load : '', 'base64').toString('utf-8')\n    const loadItem= JSON.parse(loadStr)\n    this.refreshToken   = loadItem.refreshToken\n    this.jwtToken       = loadItem.jwtToken\n  }\n}\n\nabstract class BaseEndpoint{\n  url     : string\n  method  : Method\n  config  : AxiosRequestConfig\n  constructor(\n    method : Method, url : string, base_url : string = '',\n    config? : AxiosRequestConfig\n  ){\n    this.url = this._createUrl(base_url, url)\n    this.method = method\n    this.config = config ? config : {}\n  }\n  _createUrl(base_url : string, url : string){\n    const isUrl = /(http|https)(.*)/.test(url)\n    if (isUrl) return url\n    else if(base_url === '')\n      return `${process.env.REACT_APP_API_ENDPOINT}` + url\n    else\n      return base_url + url\n  }\n  abstract req() : Promise<AxiosResponse>\n}\n\nexport class Endpoint extends BaseEndpoint{\n  req(\n    data : Object = {},\n    headers : Partial<AxiosRequestHeaders> = {},\n    params : Object = {}\n  ){\n    return axios.request({\n      url     : this.url,\n      method  : this.method,\n      headers : headers as AxiosHeaders,\n      params  : params,\n      data    : data,\n      ...this.config\n    })\n  }\n}\n\nexport abstract class AuthEndpoint extends BaseEndpoint{\n  token               : Token\n  constructor(\n    method : Method,\n    url : string,\n    token : Token = new Token(),\n    base_url : string = '', config? : AxiosRequestConfig\n  ){\n    super(method, url, base_url, config)\n    this.token        = token\n  }\n  abstract _createHeader() : Object\n  abstract _createFallbackHeader() : Object\n  abstract fallbackRequest() : Promise<AxiosResponse>\n\n  // Common implementation\n  req(\n    data : Object = {},\n    headers : Partial<AxiosRequestHeaders> = {},\n    params : Object = {}\n  ){\n    return new Promise<AxiosResponse>((res, rej) => {\n      axios.request({\n        url : this.url,\n        method : this.method,\n        headers : {\n          ...this._createHeader(), ...headers\n        } as AxiosHeaders,\n        params,\n        data,\n        ...this.config\n      })\n      .then((resp) => res(resp))\n      .catch((err) => {\n        if(err.response && err.response.status === 403){\n          this.fallbackRequest()\n          .then(() => {\n            axios.request({\n              url : this.url,\n              method : this.method,\n              headers : {\n                ...this._createHeader(), ...headers\n              } as AxiosHeaders,\n              params,\n              data,\n              ...this.config\n            })\n            .then((resp) => res(resp))\n            .catch((err) => rej(err))\n          })\n          .catch((err) => rej(err))\n        }\n        else rej(err)\n      })\n    })\n  }\n}\n\nexport class TokenEndpoint extends AuthEndpoint{\n  _createHeader(){\n    return {Authorization : `Token ${this.token.jwtToken}`}\n  }\n  _createFallbackHeader(){\n    return {Authorization : `Token ${this.token.jwtToken} ${this.token.refreshToken}`}\n  }\n  fallbackRequest() : Promise<AxiosResponse>{\n    let endpoint  = new Endpoint('get', 'user/refresh-token/')\n    let header    = this._createFallbackHeader()\n    return new Promise((res, rej) => {\n      endpoint.req({}, header)\n      .then((resp) => {\n        UNIVERSAL_TOKEN.set(resp.data.jwt)\n        res(resp)\n      })\n      .catch((err) => rej(err))\n    })\n  }\n}\n\nexport var UNIVERSAL_TOKEN = new Token()\n\nexport abstract class APIObject{\n  abstract data : Object\n  abstract get() : Promise<AxiosResponse>\n  abstract update(payload : Object) : Promise<AxiosResponse>\n  abstract delete(payload? : Object) : Promise<AxiosResponse>\n}\n\nexport type APIWithDetailsT<\n  MinimalDataT,\n  DetailedDataT,\n  DetailedGetterT extends\n  Record<\n    string,\n    (...args : any[]) => Promise<APIWithDetailsT<\n      MinimalDataT,\n      DetailedDataT,\n      DetailedGetterT,\n      true\n    >>\n  >,\n  IsDetailed extends boolean\n> = {\n  detailed : IsDetailed\n  data : IsDetailed extends true ? DetailedDataT : MinimalDataT\n  clone : () => APIWithDetailsT<\n    MinimalDataT,\n    DetailedDataT,\n    DetailedGetterT,\n    IsDetailed\n  >,\n} &\nDetailedGetterT\n","import MessageBox from \"components/messagebox/messagebox\"\r\nimport React from \"react\"\r\nimport {\r\n  TableType_ZoomableSortableT\r\n} from \"interfaces/oneTableDisplay/v1\"\r\nimport {\r\n  FontAwesomeIcon\r\n} from \"@fortawesome/react-fontawesome\"\r\nimport {\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n  faDotCircle\r\n} from \"@fortawesome/free-solid-svg-icons\"\r\nimport Lister from \"components/lister/lister\"\r\nimport { TokenEndpoint, UNIVERSAL_TOKEN } from 'API/base';\r\nimport { isEmptyString } from 'libs/validator'\r\ninterface ZoomableP{\r\n  zoomable: TableType_ZoomableSortableT[\"zoomable\"],\r\n  noZoom: React.ReactNode,\r\n  zoom: React.ReactNode,\r\n  smile?: string,\r\n}\r\n\r\ntype ParsedAdmetData = {\r\n  name : string\r\n  data : {\r\n    Disposed : 'Accepted' | 'Rejected'\r\n    Parameter : string\r\n  }[]\r\n}[]\r\n\r\ntype AdmetItemItemP = {\r\n  data : ParsedAdmetData[number][\"data\"][number]\r\n  id : number\r\n}\r\n\r\nconst AdmetItemItem = ({data, id} : AdmetItemItemP) => {\r\n  const isAccepted = (data.Disposed === 'Accepted')\r\n  const isRejected = (data.Disposed === 'Rejected')\r\n  const mapToStyles = isAccepted ? 'accept' : isRejected ? 'reject' : ''\r\n  return (\r\n    <div className = 'admet-item-row'>\r\n      <div className = {'admet-item-parameter ' + mapToStyles}>\r\n        {\r\n          isAccepted ?\r\n          <FontAwesomeIcon icon={faCheckCircle}/> :\r\n          isRejected ?\r\n          <FontAwesomeIcon icon={faTimesCircle}/> :\r\n          <FontAwesomeIcon icon={faDotCircle}/>\r\n        }\r\n        {data.Parameter}\r\n      </div>\r\n      <div className = {`admet-item-value ` + mapToStyles}>\r\n        {data.Disposed}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ntype AdmetItemP = {\r\n  data : ParsedAdmetData[number]\r\n  id : number\r\n}\r\n\r\nconst AdmetItem = ({data, id} : AdmetItemP) => {\r\n  return (\r\n    <div className = 'admet-item-block'>\r\n      <div className = 'admet-item-title'>{data.name}</div>\r\n      <Lister\r\n        array = {data.data}\r\n        render = {AdmetItemItem}\r\n        props = {{}}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Zoomable = ({zoomable, noZoom, zoom, smile} : ZoomableP) => {\r\n  const [isZoomed, setIsZoomed] = React.useState(false)\r\n  const toggleZoom = React.useCallback(() => {\r\n    setIsZoomed((isZoomed) => !isZoomed)\r\n  }, [setIsZoomed])\r\n\r\n  const isSmile = (text:string) => {\r\n    return true\r\n    // const validSmileRegex = /^([^J][0-9BCOHNSOPrIFla@+\\-\\[\\]\\(\\)\\\\\\/%=#$,.~&!]{6,})$/\r\n    // return validSmileRegex.test(text)\r\n  }\r\n\r\n\r\n  const redirect = React.useCallback(() => {\r\n    // if (typeof zoom == 'object' && zoom?.hasOwnProperty('props')) {\r\n      if (smile!==undefined && !isEmptyString(smile) && isSmile(smile)){\r\n        const endpoint = new TokenEndpoint(\r\n          'get', 'api-library/direct/ligand-name-to-zinc', UNIVERSAL_TOKEN\r\n        )\r\n        endpoint.req({}, {}, {smile : smile})\r\n        .then((resp: any) => {\r\n          window.open(resp.data, '_blank')\r\n        })\r\n        .catch((err: any) => console.error(err))\r\n      }\r\n  }, [smile])\r\n\r\n  const content = React.useMemo(() => {\r\n    if (zoomable === 'normal')\r\n      return (\r\n        <React.Fragment>\r\n          <MessageBox\r\n            state={isZoomed}\r\n            className=\"message-box-normal-zoom\"\r\n          >\r\n            <div className='zoom-cell-content normal-zoom' onClick = {redirect}>\r\n              {zoom}\r\n            </div>\r\n            <div className='zoom-close-button'>\r\n              <button\r\n                onClick={toggleZoom}\r\n                className='popup-btn-close'\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </MessageBox>\r\n          <div\r\n            className='table-cell-content smiles'\r\n            onClick={toggleZoom}\r\n          >\r\n            {noZoom}\r\n          </div>\r\n        </React.Fragment>\r\n      )\r\n    else if (zoomable === 'none')\r\n      return (\r\n        <div className = 'table-cell-content'>\r\n          {noZoom}\r\n        </div>\r\n      )\r\n    else {\r\n      const admetData = JSON.parse(noZoom as string)\r\n      return (\r\n        <div className = 'admet-item'>\r\n          <React.Fragment>\r\n            <MessageBox\r\n              state={isZoomed}\r\n              className=\"message-box-admet-zoom\"\r\n            >\r\n              <div className='zoom-cell-content admet-zoom'>\r\n                <Lister\r\n                  render = {AdmetItem}\r\n                  props = {{}}\r\n                  array = {admetData.data}\r\n                />\r\n              </div>\r\n              <div className='zoom-close-button'>\r\n                <button\r\n                  onClick={toggleZoom}\r\n                  className='popup-btn-close'\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </MessageBox>\r\n            <div\r\n              className='table-cell-content zoomable admet-zoomable'\r\n              onClick={toggleZoom}\r\n            >\r\n              {admetData.title}\r\n            </div>\r\n          </React.Fragment>\r\n        </div>\r\n      )\r\n    }\r\n  }, [zoomable, zoom, noZoom, toggleZoom, isZoomed])\r\n  return (\r\n    <div className = 'zoomable-container'>\r\n      {content}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Zoomable;\r\n","/*!\r\n * Copyright (c) 2018 Chris O'Hara <cohara87@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * https://github.com/validatorjs/\r\n */\r\n(function (global, factory) {\r\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : (global.validator = factory());\r\n}(this, (function () {\r\n\t'use strict';\r\n\r\n\tfunction _typeof(obj) {\r\n\t\t\"@babel/helpers - typeof\";\r\n\r\n\t\tif (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\r\n\t\t\t_typeof = function (obj) {\r\n\t\t\t\treturn typeof obj;\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\t_typeof = function (obj) {\r\n\t\t\t\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn _typeof(obj);\r\n\t}\r\n\r\n\tfunction _slicedToArray(arr, i) {\r\n\t\treturn _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\r\n\t}\r\n\r\n\tfunction _toConsumableArray(arr) {\r\n\t\treturn _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\r\n\t}\r\n\r\n\tfunction _arrayWithoutHoles(arr) {\r\n\t\tif (Array.isArray(arr)) return _arrayLikeToArray(arr);\r\n\t}\r\n\r\n\tfunction _arrayWithHoles(arr) {\r\n\t\tif (Array.isArray(arr)) return arr;\r\n\t}\r\n\r\n\tfunction _iterableToArray(iter) {\r\n\t\tif (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\r\n\t}\r\n\r\n\tfunction _iterableToArrayLimit(arr, i) {\r\n\t\tif (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\r\n\t\tvar _arr = [];\r\n\t\tvar _n = true;\r\n\t\tvar _d = false;\r\n\t\tvar _e = undefined;\r\n\r\n\t\ttry {\r\n\t\t\tfor (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\r\n\t\t\t\t_arr.push(_s.value);\r\n\r\n\t\t\t\tif (i && _arr.length === i) break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t_d = true;\r\n\t\t\t_e = err;\r\n\t\t} finally {\r\n\t\t\ttry {\r\n\t\t\t\tif (!_n && _i[\"return\"] != null) _i[\"return\"]();\r\n\t\t\t} finally {\r\n\t\t\t\tif (_d) throw _e;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn _arr;\r\n\t}\r\n\r\n\tfunction _unsupportedIterableToArray(o, minLen) {\r\n\t\tif (!o) return;\r\n\t\tif (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n\t\tvar n = Object.prototype.toString.call(o).slice(8, -1);\r\n\t\tif (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n\t\tif (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n\t\tif (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\r\n\t}\r\n\r\n\tfunction _arrayLikeToArray(arr, len) {\r\n\t\tif (len == null || len > arr.length) len = arr.length;\r\n\r\n\t\tfor (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n\r\n\t\treturn arr2;\r\n\t}\r\n\r\n\tfunction _nonIterableSpread() {\r\n\t\tthrow new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n\t}\r\n\r\n\tfunction _nonIterableRest() {\r\n\t\tthrow new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n\t}\r\n\r\n\tfunction _createForOfIteratorHelper(o, allowArrayLike) {\r\n\t\tvar it;\r\n\r\n\t\tif (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\r\n\t\t\tif (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\r\n\t\t\t\tif (it) o = it;\r\n\t\t\t\tvar i = 0;\r\n\r\n\t\t\t\tvar F = function () { };\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\ts: F,\r\n\t\t\t\t\tn: function () {\r\n\t\t\t\t\t\tif (i >= o.length) return {\r\n\t\t\t\t\t\t\tdone: true\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdone: false,\r\n\t\t\t\t\t\t\tvalue: o[i++]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t},\r\n\t\t\t\t\te: function (e) {\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tf: F\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthrow new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n\t\t}\r\n\r\n\t\tvar normalCompletion = true,\r\n\t\t\tdidErr = false,\r\n\t\t\terr;\r\n\t\treturn {\r\n\t\t\ts: function () {\r\n\t\t\t\tit = o[Symbol.iterator]();\r\n\t\t\t},\r\n\t\t\tn: function () {\r\n\t\t\t\tvar step = it.next();\r\n\t\t\t\tnormalCompletion = step.done;\r\n\t\t\t\treturn step;\r\n\t\t\t},\r\n\t\t\te: function (e) {\r\n\t\t\t\tdidErr = true;\r\n\t\t\t\terr = e;\r\n\t\t\t},\r\n\t\t\tf: function () {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (!normalCompletion && it.return != null) it.return();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (didErr) throw err;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tfunction assertString(input) {\r\n\t\tvar isString = typeof input === 'string' || input instanceof String;\r\n\r\n\t\tif (!isString) {\r\n\t\t\tvar invalidType = _typeof(input);\r\n\r\n\t\t\tif (input === null) invalidType = 'null'; else if (invalidType === 'object') invalidType = input.constructor.name;\r\n\t\t\tthrow new TypeError(\"Expected a string but received a \".concat(invalidType));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction toDate(date) {\r\n\t\tassertString(date);\r\n\t\tdate = Date.parse(date);\r\n\t\treturn !isNaN(date) ? new Date(date) : null;\r\n\t}\r\n\r\n\tvar alpha = {\r\n\t\t'en-US': /^[A-Z]+$/i,\r\n\t\t'az-AZ': /^[A-VXYZÇƏĞİıÖŞÜ]+$/i,\r\n\t\t'bg-BG': /^[А-Я]+$/i,\r\n\t\t'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\r\n\t\t'da-DK': /^[A-ZÆØÅ]+$/i,\r\n\t\t'de-DE': /^[A-ZÄÖÜß]+$/i,\r\n\t\t'el-GR': /^[Α-ώ]+$/i,\r\n\t\t'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,\r\n\t\t'fa-IR': /^[ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی]+$/i,\r\n\t\t'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\r\n\t\t'it-IT': /^[A-ZÀÉÈÌÎÓÒÙ]+$/i,\r\n\t\t'nb-NO': /^[A-ZÆØÅ]+$/i,\r\n\t\t'nl-NL': /^[A-ZÁÉËÏÓÖÜÚ]+$/i,\r\n\t\t'nn-NO': /^[A-ZÆØÅ]+$/i,\r\n\t\t'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\r\n\t\t'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\r\n\t\t'pt-PT': /^[A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\r\n\t\t'ru-RU': /^[А-ЯЁ]+$/i,\r\n\t\t'sl-SI': /^[A-ZČĆĐŠŽ]+$/i,\r\n\t\t'sk-SK': /^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\r\n\t\t'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,\r\n\t\t'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,\r\n\t\t'sv-SE': /^[A-ZÅÄÖ]+$/i,\r\n\t\t'th-TH': /^[ก-๐\\s]+$/i,\r\n\t\t'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,\r\n\t\t'uk-UA': /^[А-ЩЬЮЯЄIЇҐі]+$/i,\r\n\t\t'vi-VN': /^[A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\r\n\t\t'ku-IQ': /^[ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\r\n\t\tar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\r\n\t\the: /^[א-ת]+$/,\r\n\t\tfa: /^['آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی']+$/i\r\n\t};\r\n\tvar alphanumeric = {\r\n\t\t'en-US': /^[0-9A-Z]+$/i,\r\n\t\t'az-AZ': /^[0-9A-VXYZÇƏĞİıÖŞÜ]+$/i,\r\n\t\t'bg-BG': /^[0-9А-Я]+$/i,\r\n\t\t'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\r\n\t\t'da-DK': /^[0-9A-ZÆØÅ]+$/i,\r\n\t\t'de-DE': /^[0-9A-ZÄÖÜß]+$/i,\r\n\t\t'el-GR': /^[0-9Α-ω]+$/i,\r\n\t\t'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\r\n\t\t'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\r\n\t\t'it-IT': /^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,\r\n\t\t'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\r\n\t\t'nb-NO': /^[0-9A-ZÆØÅ]+$/i,\r\n\t\t'nl-NL': /^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,\r\n\t\t'nn-NO': /^[0-9A-ZÆØÅ]+$/i,\r\n\t\t'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\r\n\t\t'pt-PT': /^[0-9A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\r\n\t\t'ru-RU': /^[0-9А-ЯЁ]+$/i,\r\n\t\t'sl-SI': /^[0-9A-ZČĆĐŠŽ]+$/i,\r\n\t\t'sk-SK': /^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\r\n\t\t'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,\r\n\t\t'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\r\n\t\t'sv-SE': /^[0-9A-ZÅÄÖ]+$/i,\r\n\t\t'th-TH': /^[ก-๙\\s]+$/i,\r\n\t\t'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,\r\n\t\t'uk-UA': /^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,\r\n\t\t'ku-IQ': /^[٠١٢٣٤٥٦٧٨٩0-9ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\r\n\t\t'vi-VN': /^[0-9A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\r\n\t\tar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\r\n\t\the: /^[0-9א-ת]+$/,\r\n\t\tfa: /^['0-9آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی۱۲۳۴۵۶۷۸۹۰']+$/i\r\n\t};\r\n\tvar decimal = {\r\n\t\t'en-US': '.',\r\n\t\tar: '٫'\r\n\t};\r\n\tvar englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];\r\n\r\n\tfor (var locale, i = 0; i < englishLocales.length; i++) {\r\n\t\tlocale = \"en-\".concat(englishLocales[i]);\r\n\t\talpha[locale] = alpha['en-US'];\r\n\t\talphanumeric[locale] = alphanumeric['en-US'];\r\n\t\tdecimal[locale] = decimal['en-US'];\r\n\t} // Source: http://www.localeplanet.com/java/\r\n\r\n\r\n\tvar arabicLocales = ['AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY', 'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE'];\r\n\r\n\tfor (var _locale, _i = 0; _i < arabicLocales.length; _i++) {\r\n\t\t_locale = \"ar-\".concat(arabicLocales[_i]);\r\n\t\talpha[_locale] = alpha.ar;\r\n\t\talphanumeric[_locale] = alphanumeric.ar;\r\n\t\tdecimal[_locale] = decimal.ar;\r\n\t}\r\n\r\n\tvar farsiLocales = ['IR', 'AF'];\r\n\r\n\tfor (var _locale2, _i2 = 0; _i2 < farsiLocales.length; _i2++) {\r\n\t\t_locale2 = \"fa-\".concat(farsiLocales[_i2]);\r\n\t\talphanumeric[_locale2] = alphanumeric.fa;\r\n\t\tdecimal[_locale2] = decimal.ar;\r\n\t} // Source: https://en.wikipedia.org/wiki/Decimal_mark\r\n\r\n\r\n\tvar dotDecimal = ['ar-EG', 'ar-LB', 'ar-LY'];\r\n\tvar commaDecimal = ['bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-ZM', 'es-ES', 'fr-CA', 'fr-FR', 'id-ID', 'it-IT', 'ku-IQ', 'hu-HU', 'nb-NO', 'nn-NO', 'nl-NL', 'pl-PL', 'pt-PT', 'ru-RU', 'sl-SI', 'sr-RS@latin', 'sr-RS', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN'];\r\n\r\n\tfor (var _i3 = 0; _i3 < dotDecimal.length; _i3++) {\r\n\t\tdecimal[dotDecimal[_i3]] = decimal['en-US'];\r\n\t}\r\n\r\n\tfor (var _i4 = 0; _i4 < commaDecimal.length; _i4++) {\r\n\t\tdecimal[commaDecimal[_i4]] = ',';\r\n\t}\r\n\r\n\talpha['fr-CA'] = alpha['fr-FR'];\r\n\talphanumeric['fr-CA'] = alphanumeric['fr-FR'];\r\n\talpha['pt-BR'] = alpha['pt-PT'];\r\n\talphanumeric['pt-BR'] = alphanumeric['pt-PT'];\r\n\tdecimal['pt-BR'] = decimal['pt-PT']; // see #862\r\n\r\n\talpha['pl-Pl'] = alpha['pl-PL'];\r\n\talphanumeric['pl-Pl'] = alphanumeric['pl-PL'];\r\n\tdecimal['pl-Pl'] = decimal['pl-PL']; // see #1455\r\n\r\n\talpha['fa-AF'] = alpha.fa;\r\n\r\n\tfunction isFloat(str, options) {\r\n\t\tassertString(str);\r\n\t\toptions = options || {};\r\n\r\n\t\tvar _float = new RegExp(\"^(?:[-+])?(?:[0-9]+)?(?:\\\\\".concat(options.locale ? decimal[options.locale] : '.', \"[0-9]*)?(?:[eE][\\\\+\\\\-]?(?:[0-9]+))?$\"));\r\n\r\n\t\tif (str === '' || str === '.' || str === '-' || str === '+') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar value = parseFloat(str.replace(',', '.'));\r\n\t\treturn _float.test(str) && (!options.hasOwnProperty('min') || value >= options.min) && (!options.hasOwnProperty('max') || value <= options.max) && (!options.hasOwnProperty('lt') || value < options.lt) && (!options.hasOwnProperty('gt') || value > options.gt);\r\n\t}\r\n\tvar locales = Object.keys(decimal);\r\n\r\n\tfunction toFloat(str) {\r\n\t\tif (!isFloat(str)) return NaN;\r\n\t\treturn parseFloat(str);\r\n\t}\r\n\r\n\tfunction toInt(str, radix) {\r\n\t\tassertString(str);\r\n\t\treturn parseInt(str, radix || 10);\r\n\t}\r\n\r\n\tfunction toBoolean(str, strict) {\r\n\t\tassertString(str);\r\n\r\n\t\tif (strict) {\r\n\t\t\treturn str === '1' || /^true$/i.test(str);\r\n\t\t}\r\n\r\n\t\treturn str !== '0' && !/^false$/i.test(str) && str !== '';\r\n\t}\r\n\r\n\tfunction equals(str, comparison) {\r\n\t\tassertString(str);\r\n\t\treturn str === comparison;\r\n\t}\r\n\r\n\tfunction toString$1(input) {\r\n\t\tif (_typeof(input) === 'object' && input !== null) {\r\n\t\t\tif (typeof input.toString === 'function') {\r\n\t\t\t\tinput = input.toString();\r\n\t\t\t} else {\r\n\t\t\t\tinput = '[object Object]';\r\n\t\t\t}\r\n\t\t} else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {\r\n\t\t\tinput = '';\r\n\t\t}\r\n\r\n\t\treturn String(input);\r\n\t}\r\n\r\n\tfunction merge() {\r\n\t\tvar obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\t\tvar defaults = arguments.length > 1 ? arguments[1] : undefined;\r\n\r\n\t\tfor (var key in defaults) {\r\n\t\t\tif (typeof obj[key] === 'undefined') {\r\n\t\t\t\tobj[key] = defaults[key];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tvar defaulContainsOptions = {\r\n\t\tignoreCase: false\r\n\t};\r\n\tfunction contains(str, elem, options) {\r\n\t\tassertString(str);\r\n\t\toptions = merge(options, defaulContainsOptions);\r\n\t\treturn options.ignoreCase ? str.toLowerCase().indexOf(toString$1(elem).toLowerCase()) >= 0 : str.indexOf(toString$1(elem)) >= 0;\r\n\t}\r\n\r\n\tfunction matches(str, pattern, modifiers) {\r\n\t\tassertString(str);\r\n\r\n\t\tif (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\r\n\t\t\tpattern = new RegExp(pattern, modifiers);\r\n\t\t}\r\n\r\n\t\treturn pattern.test(str);\r\n\t}\r\n\r\n\t/* eslint-disable prefer-rest-params */\r\n\r\n\tfunction isByteLength(str, options) {\r\n\t\tassertString(str);\r\n\t\tvar min;\r\n\t\tvar max;\r\n\r\n\t\tif (_typeof(options) === 'object') {\r\n\t\t\tmin = options.min || 0;\r\n\t\t\tmax = options.max;\r\n\t\t} else {\r\n\t\t\t// backwards compatibility: isByteLength(str, min [, max])\r\n\t\t\tmin = arguments[1];\r\n\t\t\tmax = arguments[2];\r\n\t\t}\r\n\r\n\t\tvar len = encodeURI(str).split(/%..|./).length - 1;\r\n\t\treturn len >= min && (typeof max === 'undefined' || len <= max);\r\n\t}\r\n\r\n\tvar default_fqdn_options = {\r\n\t\trequire_tld: true,\r\n\t\tallow_underscores: false,\r\n\t\tallow_trailing_dot: false,\r\n\t\tallow_numeric_tld: false\r\n\t};\r\n\tfunction isFQDN(str, options) {\r\n\t\tassertString(str);\r\n\t\toptions = merge(options, default_fqdn_options);\r\n\t\t/* Remove the optional trailing dot before checking validity */\r\n\r\n\t\tif (options.allow_trailing_dot && str[str.length - 1] === '.') {\r\n\t\t\tstr = str.substring(0, str.length - 1);\r\n\t\t}\r\n\r\n\t\tvar parts = str.split('.');\r\n\r\n\t\tfor (var i = 0; i < parts.length; i++) {\r\n\t\t\tif (parts[i].length > 63) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (options.require_tld) {\r\n\t\t\tvar tld = parts.pop();\r\n\r\n\t\t\tif (!parts.length || !/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\r\n\t\t\t\treturn false;\r\n\t\t\t} // disallow spaces && special characers\r\n\r\n\r\n\t\t\tif (/[\\s\\u2002-\\u200B\\u202F\\u205F\\u3000\\uFEFF\\uDB40\\uDC20\\u00A9\\uFFFD]/.test(tld)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var part, _i = 0; _i < parts.length; _i++) {\r\n\t\t\tpart = parts[_i];\r\n\r\n\t\t\tif (!options.allow_numeric_tld && _i === parts.length - 1 && /^\\d+$/.test(part)) {\r\n\t\t\t\treturn false; // reject numeric TLDs\r\n\t\t\t}\r\n\r\n\t\t\tif (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\r\n\t\t\t\treturn false;\r\n\t\t\t} // disallow full-width chars\r\n\r\n\r\n\t\t\tif (/[\\uff01-\\uff5e]/.test(part)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (part[0] === '-' || part[part.length - 1] === '-') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (!options.allow_underscores && /_/.test(part)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t11.3.  Examples\r\n\r\n\t\t The following addresses\r\n\r\n\t\t\t\t\t\t\t fe80::1234 (on the 1st link of the node)\r\n\t\t\t\t\t\t\t ff02::5678 (on the 5th link of the node)\r\n\t\t\t\t\t\t\t ff08::9abc (on the 10th organization of the node)\r\n\r\n\t\t would be represented as follows:\r\n\r\n\t\t\t\t\t\t\t fe80::1234%1\r\n\t\t\t\t\t\t\t ff02::5678%5\r\n\t\t\t\t\t\t\t ff08::9abc%10\r\n\r\n\t\t (Here we assume a natural translation from a zone index to the\r\n\t\t <zone_id> part, where the Nth zone of any scope is translated into\r\n\t\t \"N\".)\r\n\r\n\t\t If we use interface names as <zone_id>, those addresses could also be\r\n\t\t represented as follows:\r\n\r\n\t\t\t\t\t\t\tfe80::1234%ne0\r\n\t\t\t\t\t\t\tff02::5678%pvc1.3\r\n\t\t\t\t\t\t\tff08::9abc%interface10\r\n\r\n\t\t where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\r\n\t\t to the 5th link, and \"interface10\" belongs to the 10th organization.\r\n\t * * */\r\n\r\n\tvar ipv4Maybe = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\r\n\tvar ipv6Block = /^[0-9A-F]{1,4}$/i;\r\n\tfunction isIP(str) {\r\n\t\tvar version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\r\n\t\tassertString(str);\r\n\t\tversion = String(version);\r\n\r\n\t\tif (!version) {\r\n\t\t\treturn isIP(str, 4) || isIP(str, 6);\r\n\t\t} else if (version === '4') {\r\n\t\t\tif (!ipv4Maybe.test(str)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar parts = str.split('.').sort(function (a, b) {\r\n\t\t\t\treturn a - b;\r\n\t\t\t});\r\n\t\t\treturn parts[3] <= 255;\r\n\t\t} else if (version === '6') {\r\n\t\t\tvar addressAndZone = [str]; // ipv6 addresses could have scoped architecture\r\n\t\t\t// according to https://tools.ietf.org/html/rfc4007#section-11\r\n\r\n\t\t\tif (str.includes('%')) {\r\n\t\t\t\taddressAndZone = str.split('%');\r\n\r\n\t\t\t\tif (addressAndZone.length !== 2) {\r\n\t\t\t\t\t// it must be just two parts\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!addressAndZone[0].includes(':')) {\r\n\t\t\t\t\t// the first part must be the address\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (addressAndZone[1] === '') {\r\n\t\t\t\t\t// the second part must not be empty\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar blocks = addressAndZone[0].split(':');\r\n\t\t\tvar foundOmissionBlock = false; // marker to indicate ::\r\n\t\t\t// At least some OS accept the last 32 bits of an IPv6 address\r\n\t\t\t// (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says\r\n\t\t\t// that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,\r\n\t\t\t// and '::a.b.c.d' is deprecated, but also valid.\r\n\r\n\t\t\tvar foundIPv4TransitionBlock = isIP(blocks[blocks.length - 1], 4);\r\n\t\t\tvar expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;\r\n\r\n\t\t\tif (blocks.length > expectedNumberOfBlocks) {\r\n\t\t\t\treturn false;\r\n\t\t\t} // initial or final ::\r\n\r\n\r\n\t\t\tif (str === '::') {\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (str.substr(0, 2) === '::') {\r\n\t\t\t\tblocks.shift();\r\n\t\t\t\tblocks.shift();\r\n\t\t\t\tfoundOmissionBlock = true;\r\n\t\t\t} else if (str.substr(str.length - 2) === '::') {\r\n\t\t\t\tblocks.pop();\r\n\t\t\t\tblocks.pop();\r\n\t\t\t\tfoundOmissionBlock = true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < blocks.length; ++i) {\r\n\t\t\t\t// test for a :: which can not be at the string start/end\r\n\t\t\t\t// since those cases have been handled above\r\n\t\t\t\tif (blocks[i] === '' && i > 0 && i < blocks.length - 1) {\r\n\t\t\t\t\tif (foundOmissionBlock) {\r\n\t\t\t\t\t\treturn false; // multiple :: in address\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfoundOmissionBlock = true;\r\n\t\t\t\t} else if (foundIPv4TransitionBlock && i === blocks.length - 1) {// it has been checked before that the last\r\n\t\t\t\t\t// block is a valid IPv4 address\r\n\t\t\t\t} else if (!ipv6Block.test(blocks[i])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (foundOmissionBlock) {\r\n\t\t\t\treturn blocks.length >= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn blocks.length === expectedNumberOfBlocks;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar default_email_options = {\r\n\t\tallow_display_name: false,\r\n\t\trequire_display_name: false,\r\n\t\tallow_utf8_local_part: true,\r\n\t\trequire_tld: true,\r\n\t\tblacklisted_chars: '',\r\n\t\tignore_max_length: false\r\n\t};\r\n\t/* eslint-disable max-len */\r\n\r\n\t/* eslint-disable no-control-regex */\r\n\r\n\tvar splitNameAddress = /^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)<(.+)>$/i;\r\n\tvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\r\n\tvar gmailUserPart = /^[a-z\\d]+$/;\r\n\tvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\r\n\tvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\r\n\tvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\r\n\tvar defaultMaxEmailLength = 254;\r\n\t/* eslint-enable max-len */\r\n\r\n\t/* eslint-enable no-control-regex */\r\n\r\n\t/**\r\n\t * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2\r\n\t * @param {String} display_name\r\n\t */\r\n\r\n\tfunction validateDisplayName(display_name) {\r\n\t\tvar trim_quotes = display_name.match(/^\"(.+)\"$/i);\r\n\t\tvar display_name_without_quotes = trim_quotes ? trim_quotes[1] : display_name; // display name with only spaces is not valid\r\n\r\n\t\tif (!display_name_without_quotes.trim()) {\r\n\t\t\treturn false;\r\n\t\t} // check whether display name contains illegal character\r\n\r\n\r\n\t\tvar contains_illegal = /[\\.\";<>]/.test(display_name_without_quotes);\r\n\r\n\t\tif (contains_illegal) {\r\n\t\t\t// if contains illegal characters,\r\n\t\t\t// must to be enclosed in double-quotes, otherwise it's not a valid display name\r\n\t\t\tif (!trim_quotes) {\r\n\t\t\t\treturn false;\r\n\t\t\t} // the quotes in display name must start with character symbol \\\r\n\r\n\r\n\t\t\tvar all_start_with_back_slash = display_name_without_quotes.split('\"').length === display_name_without_quotes.split('\\\\\"').length;\r\n\r\n\t\t\tif (!all_start_with_back_slash) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction isEmail(str, options) {\r\n\t\tassertString(str);\r\n\t\toptions = merge(options, default_email_options);\r\n\r\n\t\tif (options.require_display_name || options.allow_display_name) {\r\n\t\t\tvar display_email = str.match(splitNameAddress);\r\n\r\n\t\t\tif (display_email) {\r\n\t\t\t\tvar display_name;\r\n\r\n\t\t\t\tvar _display_email = _slicedToArray(display_email, 3);\r\n\r\n\t\t\t\tdisplay_name = _display_email[1];\r\n\t\t\t\tstr = _display_email[2];\r\n\r\n\t\t\t\t// sometimes need to trim the last space to get the display name\r\n\t\t\t\t// because there may be a space between display name and email address\r\n\t\t\t\t// eg. myname <address@gmail.com>\r\n\t\t\t\t// the display name is `myname` instead of `myname `, so need to trim the last space\r\n\t\t\t\tif (display_name.endsWith(' ')) {\r\n\t\t\t\t\tdisplay_name = display_name.substr(0, display_name.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!validateDisplayName(display_name)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else if (options.require_display_name) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!options.ignore_max_length && str.length > defaultMaxEmailLength) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar parts = str.split('@');\r\n\t\tvar domain = parts.pop();\r\n\t\tvar user = parts.join('@');\r\n\t\tvar lower_domain = domain.toLowerCase();\r\n\r\n\t\tif (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {\r\n\t\t\t/*\r\n\t\t\t\tPreviously we removed dots for gmail addresses before validating.\r\n\t\t\t\tThis was removed because it allows `multiple..dots@gmail.com`\r\n\t\t\t\tto be reported as valid, but it is not.\r\n\t\t\t\tGmail only normalizes single dots, removing them from here is pointless,\r\n\t\t\t\tshould be done in normalizeEmail\r\n\t\t\t*/\r\n\t\t\tuser = user.toLowerCase(); // Removing sub-address from username before gmail validation\r\n\r\n\t\t\tvar username = user.split('+')[0]; // Dots are not included in gmail length restriction\r\n\r\n\t\t\tif (!isByteLength(username.replace('.', ''), {\r\n\t\t\t\tmin: 6,\r\n\t\t\t\tmax: 30\r\n\t\t\t})) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar _user_parts = username.split('.');\r\n\r\n\t\t\tfor (var i = 0; i < _user_parts.length; i++) {\r\n\t\t\t\tif (!gmailUserPart.test(_user_parts[i])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (options.ignore_max_length === false && (!isByteLength(user, {\r\n\t\t\tmax: 64\r\n\t\t}) || !isByteLength(domain, {\r\n\t\t\tmax: 254\r\n\t\t}))) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!isFQDN(domain, {\r\n\t\t\trequire_tld: options.require_tld\r\n\t\t})) {\r\n\t\t\tif (!options.allow_ip_domain) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (!isIP(domain)) {\r\n\t\t\t\tif (!domain.startsWith('[') || !domain.endsWith(']')) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar noBracketdomain = domain.substr(1, domain.length - 2);\r\n\r\n\t\t\t\tif (noBracketdomain.length === 0 || !isIP(noBracketdomain)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (user[0] === '\"') {\r\n\t\t\tuser = user.slice(1, user.length - 1);\r\n\t\t\treturn options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\r\n\t\t}\r\n\r\n\t\tvar pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\r\n\t\tvar user_parts = user.split('.');\r\n\r\n\t\tfor (var _i = 0; _i < user_parts.length; _i++) {\r\n\t\t\tif (!pattern.test(user_parts[_i])) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (options.blacklisted_chars) {\r\n\t\t\tif (user.search(new RegExp(\"[\".concat(options.blacklisted_chars, \"]+\"), 'g')) !== -1) return false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*\r\n\toptions for isURL method\r\n\r\n\trequire_protocol - if set as true isURL will return false if protocol is not present in the URL\r\n\trequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\r\n\tprotocols - valid protocols can be modified with this option\r\n\trequire_host - if set as false isURL will not check if host is present in the URL\r\n\trequire_port - if set as true isURL will check if port is present in the URL\r\n\tallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\r\n\tvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\r\n\r\n\t*/\r\n\r\n\tvar default_url_options = {\r\n\t\tprotocols: ['http', 'https', 'ftp'],\r\n\t\trequire_tld: true,\r\n\t\trequire_protocol: false,\r\n\t\trequire_host: true,\r\n\t\trequire_port: false,\r\n\t\trequire_valid_protocol: true,\r\n\t\tallow_underscores: false,\r\n\t\tallow_trailing_dot: false,\r\n\t\tallow_protocol_relative_urls: false,\r\n\t\tvalidate_length: true\r\n\t};\r\n\tvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\r\n\r\n\tfunction isRegExp(obj) {\r\n\t\treturn Object.prototype.toString.call(obj) === '[object RegExp]';\r\n\t}\r\n\r\n\tfunction checkHost(host, matches) {\r\n\t\tfor (var i = 0; i < matches.length; i++) {\r\n\t\t\tvar match = matches[i];\r\n\r\n\t\t\tif (host === match || isRegExp(match) && match.test(host)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction isURL(url, options) {\r\n\t\tassertString(url);\r\n\r\n\t\tif (!url || /[\\s<>]/.test(url)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (url.indexOf('mailto:') === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\toptions = merge(options, default_url_options);\r\n\r\n\t\tif (options.validate_length && url.length >= 2083) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar protocol, auth, host, hostname, port, port_str, split, ipv6;\r\n\t\tsplit = url.split('#');\r\n\t\turl = split.shift();\r\n\t\tsplit = url.split('?');\r\n\t\turl = split.shift();\r\n\t\tsplit = url.split('://');\r\n\r\n\t\tif (split.length > 1) {\r\n\t\t\tprotocol = split.shift().toLowerCase();\r\n\r\n\t\t\tif (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else if (options.require_protocol) {\r\n\t\t\treturn false;\r\n\t\t} else if (url.substr(0, 2) === '//') {\r\n\t\t\tif (!options.allow_protocol_relative_urls) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tsplit[0] = url.substr(2);\r\n\t\t}\r\n\r\n\t\turl = split.join('://');\r\n\r\n\t\tif (url === '') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tsplit = url.split('/');\r\n\t\turl = split.shift();\r\n\r\n\t\tif (url === '' && !options.require_host) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tsplit = url.split('@');\r\n\r\n\t\tif (split.length > 1) {\r\n\t\t\tif (options.disallow_auth) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tauth = split.shift();\r\n\r\n\t\t\tif (auth.indexOf(':') === -1 || auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\thostname = split.join('@');\r\n\t\tport_str = null;\r\n\t\tipv6 = null;\r\n\t\tvar ipv6_match = hostname.match(wrapped_ipv6);\r\n\r\n\t\tif (ipv6_match) {\r\n\t\t\thost = '';\r\n\t\t\tipv6 = ipv6_match[1];\r\n\t\t\tport_str = ipv6_match[2] || null;\r\n\t\t} else {\r\n\t\t\tsplit = hostname.split(':');\r\n\t\t\thost = split.shift();\r\n\r\n\t\t\tif (split.length) {\r\n\t\t\t\tport_str = split.join(':');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (port_str !== null) {\r\n\t\t\tport = parseInt(port_str, 10);\r\n\r\n\t\t\tif (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else if (options.require_port) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!isIP(host) && !isFQDN(host, options) && (!ipv6 || !isIP(ipv6, 6))) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\thost = host || ipv6;\r\n\r\n\t\tif (options.host_whitelist && !checkHost(host, options.host_whitelist)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (options.host_blacklist && checkHost(host, options.host_blacklist)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar macAddress = /^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;\r\n\tvar macAddressNoColons = /^([0-9a-fA-F]){12}$/;\r\n\tvar macAddressWithHyphen = /^([0-9a-fA-F][0-9a-fA-F]-){5}([0-9a-fA-F][0-9a-fA-F])$/;\r\n\tvar macAddressWithSpaces = /^([0-9a-fA-F][0-9a-fA-F]\\s){5}([0-9a-fA-F][0-9a-fA-F])$/;\r\n\tvar macAddressWithDots = /^([0-9a-fA-F]{4}).([0-9a-fA-F]{4}).([0-9a-fA-F]{4})$/;\r\n\tfunction isMACAddress(str, options) {\r\n\t\tassertString(str);\r\n\r\n\t\tif (options && options.no_colons) {\r\n\t\t\treturn macAddressNoColons.test(str);\r\n\t\t}\r\n\r\n\t\treturn macAddress.test(str) || macAddressWithHyphen.test(str) || macAddressWithSpaces.test(str) || macAddressWithDots.test(str);\r\n\t}\r\n\r\n\tvar subnetMaybe = /^\\d{1,2}$/;\r\n\tfunction isIPRange(str) {\r\n\t\tassertString(str);\r\n\t\tvar parts = str.split('/'); // parts[0] -> ip, parts[1] -> subnet\r\n\r\n\t\tif (parts.length !== 2) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!subnetMaybe.test(parts[1])) {\r\n\t\t\treturn false;\r\n\t\t} // Disallow preceding 0 i.e. 01, 02, ...\r\n\r\n\r\n\t\tif (parts[1].length > 1 && parts[1].startsWith('0')) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn isIP(parts[0], 4) && parts[1] <= 32 && parts[1] >= 0;\r\n\t}\r\n\r\n\tvar default_date_options = {\r\n\t\tformat: 'YYYY/MM/DD',\r\n\t\tdelimiters: ['/', '-'],\r\n\t\tstrictMode: false\r\n\t};\r\n\r\n\tfunction isValidFormat(format) {\r\n\t\treturn /(^(y{4}|y{2})[\\/-](m{1,2})[\\/-](d{1,2})$)|(^(m{1,2})[\\/-](d{1,2})[\\/-]((y{4}|y{2})$))|(^(d{1,2})[\\/-](m{1,2})[\\/-]((y{4}|y{2})$))/gi.test(format);\r\n\t}\r\n\r\n\tfunction zip(date, format) {\r\n\t\tvar zippedArr = [],\r\n\t\t\tlen = Math.min(date.length, format.length);\r\n\r\n\t\tfor (var i = 0; i < len; i++) {\r\n\t\t\tzippedArr.push([date[i], format[i]]);\r\n\t\t}\r\n\r\n\t\treturn zippedArr;\r\n\t}\r\n\r\n\tfunction isDate(input, options) {\r\n\t\tif (typeof options === 'string') {\r\n\t\t\t// Allow backward compatbility for old format isDate(input [, format])\r\n\t\t\toptions = merge({\r\n\t\t\t\tformat: options\r\n\t\t\t}, default_date_options);\r\n\t\t} else {\r\n\t\t\toptions = merge(options, default_date_options);\r\n\t\t}\r\n\r\n\t\tif (typeof input === 'string' && isValidFormat(options.format)) {\r\n\t\t\tvar formatDelimiter = options.delimiters.find(function (delimiter) {\r\n\t\t\t\treturn options.format.indexOf(delimiter) !== -1;\r\n\t\t\t});\r\n\t\t\tvar dateDelimiter = options.strictMode ? formatDelimiter : options.delimiters.find(function (delimiter) {\r\n\t\t\t\treturn input.indexOf(delimiter) !== -1;\r\n\t\t\t});\r\n\t\t\tvar dateAndFormat = zip(input.split(dateDelimiter), options.format.toLowerCase().split(formatDelimiter));\r\n\t\t\tvar dateObj = {};\r\n\r\n\t\t\tvar _iterator = _createForOfIteratorHelper(dateAndFormat),\r\n\t\t\t\t_step;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tfor (_iterator.s(); !(_step = _iterator.n()).done;) {\r\n\t\t\t\t\tvar _step$value = _slicedToArray(_step.value, 2),\r\n\t\t\t\t\t\tdateWord = _step$value[0],\r\n\t\t\t\t\t\tformatWord = _step$value[1];\r\n\r\n\t\t\t\t\tif (dateWord.length !== formatWord.length) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdateObj[formatWord.charAt(0)] = dateWord;\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t_iterator.e(err);\r\n\t\t\t} finally {\r\n\t\t\t\t_iterator.f();\r\n\t\t\t}\r\n\r\n\t\t\treturn new Date(\"\".concat(dateObj.m, \"/\").concat(dateObj.d, \"/\").concat(dateObj.y)).getDate() === +dateObj.d;\r\n\t\t}\r\n\r\n\t\tif (!options.strictMode) {\r\n\t\t\treturn Object.prototype.toString.call(input) === '[object Date]' && isFinite(input);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction isBoolean(str) {\r\n\t\tassertString(str);\r\n\t\treturn ['true', 'false', '1', '0'].indexOf(str) >= 0;\r\n\t}\r\n\r\n\tvar localeReg = /^[A-z]{2,4}([_-]([A-z]{4}|[\\d]{3}))?([_-]([A-z]{2}|[\\d]{3}))?$/;\r\n\tfunction isLocale(str) {\r\n\t\tassertString(str);\r\n\r\n\t\tif (str === 'en_US_POSIX' || str === 'ca_ES_VALENCIA') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn localeReg.test(str);\r\n\t}\r\n\r\n\tfunction isAlpha(_str) {\r\n\t\tvar locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\r\n\t\tvar options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n\t\tassertString(_str);\r\n\t\tvar str = _str;\r\n\t\tvar ignore = options.ignore;\r\n\r\n\t\tif (ignore) {\r\n\t\t\tif (ignore instanceof RegExp) {\r\n\t\t\t\tstr = str.replace(ignore, '');\r\n\t\t\t} else if (typeof ignore === 'string') {\r\n\t\t\t\tstr = str.replace(new RegExp(\"[\".concat(ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&'), \"]\"), 'g'), ''); // escape regex for ignore\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('ignore should be instance of a String or RegExp');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (locale in alpha) {\r\n\t\t\treturn alpha[locale].test(str);\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Invalid locale '\".concat(locale, \"'\"));\r\n\t}\r\n\tvar locales$1 = Object.keys(alpha);\r\n\r\n\tfunction isAlphanumeric(str) {\r\n\t\tvar locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\r\n\t\tassertString(str);\r\n\r\n\t\tif (locale in alphanumeric) {\r\n\t\t\treturn alphanumeric[locale].test(str);\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Invalid locale '\".concat(locale, \"'\"));\r\n\t}\r\n\tvar locales$2 = Object.keys(alphanumeric);\r\n\r\n\tvar numericNoSymbols = /^[0-9]+$/;\r\n\tfunction isNumeric(str, options) {\r\n\t\tassertString(str);\r\n\r\n\t\tif (options && options.no_symbols) {\r\n\t\t\treturn numericNoSymbols.test(str);\r\n\t\t}\r\n\r\n\t\treturn new RegExp(\"^[+-]?([0-9]*[\".concat((options || {}).locale ? decimal[options.locale] : '.', \"])?[0-9]+$\")).test(str);\r\n\t}\r\n\r\n\t/**\r\n\t * Reference:\r\n\t * https://en.wikipedia.org/ -- Wikipedia\r\n\t * https://docs.microsoft.com/en-us/microsoft-365/compliance/eu-passport-number -- EU Passport Number\r\n\t * https://countrycode.org/ -- Country Codes\r\n\t */\r\n\r\n\tvar passportRegexByCountryCode = {\r\n\t\tAM: /^[A-Z]{2}\\d{7}$/,\r\n\t\t// ARMENIA\r\n\t\tAR: /^[A-Z]{3}\\d{6}$/,\r\n\t\t// ARGENTINA\r\n\t\tAT: /^[A-Z]\\d{7}$/,\r\n\t\t// AUSTRIA\r\n\t\tAU: /^[A-Z]\\d{7}$/,\r\n\t\t// AUSTRALIA\r\n\t\tBE: /^[A-Z]{2}\\d{6}$/,\r\n\t\t// BELGIUM\r\n\t\tBG: /^\\d{9}$/,\r\n\t\t// BULGARIA\r\n\t\tBY: /^[A-Z]{2}\\d{7}$/,\r\n\t\t// BELARUS\r\n\t\tCA: /^[A-Z]{2}\\d{6}$/,\r\n\t\t// CANADA\r\n\t\tCH: /^[A-Z]\\d{7}$/,\r\n\t\t// SWITZERLAND\r\n\t\tCN: /^[GE]\\d{8}$/,\r\n\t\t// CHINA [G=Ordinary, E=Electronic] followed by 8-digits\r\n\t\tCY: /^[A-Z](\\d{6}|\\d{8})$/,\r\n\t\t// CYPRUS\r\n\t\tCZ: /^\\d{8}$/,\r\n\t\t// CZECH REPUBLIC\r\n\t\tDE: /^[CFGHJKLMNPRTVWXYZ0-9]{9}$/,\r\n\t\t// GERMANY\r\n\t\tDK: /^\\d{9}$/,\r\n\t\t// DENMARK\r\n\t\tDZ: /^\\d{9}$/,\r\n\t\t// ALGERIA\r\n\t\tEE: /^([A-Z]\\d{7}|[A-Z]{2}\\d{7})$/,\r\n\t\t// ESTONIA (K followed by 7-digits), e-passports have 2 UPPERCASE followed by 7 digits\r\n\t\tES: /^[A-Z0-9]{2}([A-Z0-9]?)\\d{6}$/,\r\n\t\t// SPAIN\r\n\t\tFI: /^[A-Z]{2}\\d{7}$/,\r\n\t\t// FINLAND\r\n\t\tFR: /^\\d{2}[A-Z]{2}\\d{5}$/,\r\n\t\t// FRANCE\r\n\t\tGB: /^\\d{9}$/,\r\n\t\t// UNITED KINGDOM\r\n\t\tGR: /^[A-Z]{2}\\d{7}$/,\r\n\t\t// GREECE\r\n\t\tHR: /^\\d{9}$/,\r\n\t\t// CROATIA\r\n\t\tHU: /^[A-Z]{2}(\\d{6}|\\d{7})$/,\r\n\t\t// HUNGARY\r\n\t\tIE: /^[A-Z0-9]{2}\\d{7}$/,\r\n\t\t// IRELAND\r\n\t\tIN: /^[A-Z]{1}-?\\d{7}$/,\r\n\t\t// INDIA\r\n\t\tIS: /^(A)\\d{7}$/,\r\n\t\t// ICELAND\r\n\t\tIT: /^[A-Z0-9]{2}\\d{7}$/,\r\n\t\t// ITALY\r\n\t\tJP: /^[A-Z]{2}\\d{7}$/,\r\n\t\t// JAPAN\r\n\t\tKR: /^[MS]\\d{8}$/,\r\n\t\t// SOUTH KOREA, REPUBLIC OF KOREA, [S=PS Passports, M=PM Passports]\r\n\t\tLT: /^[A-Z0-9]{8}$/,\r\n\t\t// LITHUANIA\r\n\t\tLU: /^[A-Z0-9]{8}$/,\r\n\t\t// LUXEMBURG\r\n\t\tLV: /^[A-Z0-9]{2}\\d{7}$/,\r\n\t\t// LATVIA\r\n\t\tMT: /^\\d{7}$/,\r\n\t\t// MALTA\r\n\t\tNL: /^[A-Z]{2}[A-Z0-9]{6}\\d$/,\r\n\t\t// NETHERLANDS\r\n\t\tPO: /^[A-Z]{2}\\d{7}$/,\r\n\t\t// POLAND\r\n\t\tPT: /^[A-Z]\\d{6}$/,\r\n\t\t// PORTUGAL\r\n\t\tRO: /^\\d{8,9}$/,\r\n\t\t// ROMANIA\r\n\t\tRU: /^\\d{2}\\d{2}\\d{6}$/,\r\n\t\t// RUSSIAN FEDERATION\r\n\t\tSE: /^\\d{8}$/,\r\n\t\t// SWEDEN\r\n\t\tSL: /^(P)[A-Z]\\d{7}$/,\r\n\t\t// SLOVANIA\r\n\t\tSK: /^[0-9A-Z]\\d{7}$/,\r\n\t\t// SLOVAKIA\r\n\t\tTR: /^[A-Z]\\d{8}$/,\r\n\t\t// TURKEY\r\n\t\tUA: /^[A-Z]{2}\\d{6}$/,\r\n\t\t// UKRAINE\r\n\t\tUS: /^\\d{9}$/ // UNITED STATES\r\n\r\n\t};\r\n\t/**\r\n\t * Check if str is a valid passport number\r\n\t * relative to provided ISO Country Code.\r\n\t *\r\n\t * @param {string} str\r\n\t * @param {string} countryCode\r\n\t * @return {boolean}\r\n\t */\r\n\r\n\tfunction isPassportNumber(str, countryCode) {\r\n\t\tassertString(str);\r\n\t\t/** Remove All Whitespaces, Convert to UPPERCASE */\r\n\r\n\t\tvar normalizedStr = str.replace(/\\s/g, '').toUpperCase();\r\n\t\treturn countryCode.toUpperCase() in passportRegexByCountryCode && passportRegexByCountryCode[countryCode].test(normalizedStr);\r\n\t}\r\n\r\n\tvar _int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;\r\n\tvar intLeadingZeroes = /^[-+]?[0-9]+$/;\r\n\tfunction isInt(str, options) {\r\n\t\tassertString(str);\r\n\t\toptions = options || {}; // Get the regex to use for testing, based on whether\r\n\t\t// leading zeroes are allowed or not.\r\n\r\n\t\tvar regex = options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ? _int : intLeadingZeroes; // Check min/max/lt/gt\r\n\r\n\t\tvar minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;\r\n\t\tvar maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;\r\n\t\tvar ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;\r\n\t\tvar gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;\r\n\t\treturn regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;\r\n\t}\r\n\r\n\tfunction isPort(str) {\r\n\t\treturn isInt(str, {\r\n\t\t\tmin: 0,\r\n\t\t\tmax: 65535\r\n\t\t});\r\n\t}\r\n\r\n\tfunction isLowercase(str) {\r\n\t\tassertString(str);\r\n\t\treturn str === str.toLowerCase();\r\n\t}\r\n\r\n\tfunction isUppercase(str) {\r\n\t\tassertString(str);\r\n\t\treturn str === str.toUpperCase();\r\n\t}\r\n\r\n\tvar imeiRegexWithoutHypens = /^[0-9]{15}$/;\r\n\tvar imeiRegexWithHypens = /^\\d{2}-\\d{6}-\\d{6}-\\d{1}$/;\r\n\tfunction isIMEI(str, options) {\r\n\t\tassertString(str);\r\n\t\toptions = options || {}; // default regex for checking imei is the one without hyphens\r\n\r\n\t\tvar imeiRegex = imeiRegexWithoutHypens;\r\n\r\n\t\tif (options.allow_hyphens) {\r\n\t\t\timeiRegex = imeiRegexWithHypens;\r\n\t\t}\r\n\r\n\t\tif (!imeiRegex.test(str)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tstr = str.replace(/-/g, '');\r\n\t\tvar sum = 0,\r\n\t\t\tmul = 2,\r\n\t\t\tl = 14;\r\n\r\n\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\tvar digit = str.substring(l - i - 1, l - i);\r\n\t\t\tvar tp = parseInt(digit, 10) * mul;\r\n\r\n\t\t\tif (tp >= 10) {\r\n\t\t\t\tsum += tp % 10 + 1;\r\n\t\t\t} else {\r\n\t\t\t\tsum += tp;\r\n\t\t\t}\r\n\r\n\t\t\tif (mul === 1) {\r\n\t\t\t\tmul += 1;\r\n\t\t\t} else {\r\n\t\t\t\tmul -= 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar chk = (10 - sum % 10) % 10;\r\n\r\n\t\tif (chk !== parseInt(str.substring(14, 15), 10)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/* eslint-disable no-control-regex */\r\n\r\n\tvar ascii = /^[\\x00-\\x7F]+$/;\r\n\t/* eslint-enable no-control-regex */\r\n\r\n\tfunction isAscii(str) {\r\n\t\tassertString(str);\r\n\t\treturn ascii.test(str);\r\n\t}\r\n\r\n\tvar fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\r\n\tfunction isFullWidth(str) {\r\n\t\tassertString(str);\r\n\t\treturn fullWidth.test(str);\r\n\t}\r\n\r\n\tvar halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\r\n\tfunction isHalfWidth(str) {\r\n\t\tassertString(str);\r\n\t\treturn halfWidth.test(str);\r\n\t}\r\n\r\n\tfunction isVariableWidth(str) {\r\n\t\tassertString(str);\r\n\t\treturn fullWidth.test(str) && halfWidth.test(str);\r\n\t}\r\n\r\n\t/* eslint-disable no-control-regex */\r\n\r\n\tvar multibyte = /[^\\x00-\\x7F]/;\r\n\t/* eslint-enable no-control-regex */\r\n\r\n\tfunction isMultibyte(str) {\r\n\t\tassertString(str);\r\n\t\treturn multibyte.test(str);\r\n\t}\r\n\r\n\t/**\r\n\t * Build RegExp object from an array\r\n\t * of multiple/multi-line regexp parts\r\n\t *\r\n\t * @param {string[]} parts\r\n\t * @param {string} flags\r\n\t * @return {object} - RegExp object\r\n\t */\r\n\tfunction multilineRegexp(parts, flags) {\r\n\t\tvar regexpAsStringLiteral = parts.join('');\r\n\t\treturn new RegExp(regexpAsStringLiteral, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Regular Expression to match\r\n\t * semantic versioning (SemVer)\r\n\t * built from multi-line, multi-parts regexp\r\n\t * Reference: https://semver.org/\r\n\t */\r\n\r\n\tvar semanticVersioningRegex = multilineRegexp(['^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)', '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))', '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$'], 'i');\r\n\tfunction isSemVer(str) {\r\n\t\tassertString(str);\r\n\t\treturn semanticVersioningRegex.test(str);\r\n\t}\r\n\r\n\tvar surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\r\n\tfunction isSurrogatePair(str) {\r\n\t\tassertString(str);\r\n\t\treturn surrogatePair.test(str);\r\n\t}\r\n\r\n\tvar includes = function includes(arr, val) {\r\n\t\treturn arr.some(function (arrVal) {\r\n\t\t\treturn val === arrVal;\r\n\t\t});\r\n\t};\r\n\r\n\tfunction decimalRegExp(options) {\r\n\t\tvar regExp = new RegExp(\"^[-+]?([0-9]+)?(\\\\\".concat(decimal[options.locale], \"[0-9]{\").concat(options.decimal_digits, \"})\").concat(options.force_decimal ? '' : '?', \"$\"));\r\n\t\treturn regExp;\r\n\t}\r\n\r\n\tvar default_decimal_options = {\r\n\t\tforce_decimal: false,\r\n\t\tdecimal_digits: '1,',\r\n\t\tlocale: 'en-US'\r\n\t};\r\n\tvar blacklist = ['', '-', '+'];\r\n\tfunction isDecimal(str, options) {\r\n\t\tassertString(str);\r\n\t\toptions = merge(options, default_decimal_options);\r\n\r\n\t\tif (options.locale in decimal) {\r\n\t\t\treturn !includes(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Invalid locale '\".concat(options.locale, \"'\"));\r\n\t}\r\n\r\n\tvar hexadecimal = /^(0x|0h)?[0-9A-F]+$/i;\r\n\tfunction isHexadecimal(str) {\r\n\t\tassertString(str);\r\n\t\treturn hexadecimal.test(str);\r\n\t}\r\n\r\n\tvar octal = /^(0o)?[0-7]+$/i;\r\n\tfunction isOctal(str) {\r\n\t\tassertString(str);\r\n\t\treturn octal.test(str);\r\n\t}\r\n\r\n\tfunction isDivisibleBy(str, num) {\r\n\t\tassertString(str);\r\n\t\treturn toFloat(str) % parseInt(num, 10) === 0;\r\n\t}\r\n\r\n\tvar hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$/i;\r\n\tfunction isHexColor(str) {\r\n\t\tassertString(str);\r\n\t\treturn hexcolor.test(str);\r\n\t}\r\n\r\n\tvar rgbColor = /^rgb\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){2}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\)$/;\r\n\tvar rgbaColor = /^rgba\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)$/;\r\n\tvar rgbColorPercent = /^rgb\\((([0-9]%|[1-9][0-9]%|100%),){2}([0-9]%|[1-9][0-9]%|100%)\\)/;\r\n\tvar rgbaColorPercent = /^rgba\\((([0-9]%|[1-9][0-9]%|100%),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)/;\r\n\tfunction isRgbColor(str) {\r\n\t\tvar includePercentValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\r\n\t\tassertString(str);\r\n\r\n\t\tif (!includePercentValues) {\r\n\t\t\treturn rgbColor.test(str) || rgbaColor.test(str);\r\n\t\t}\r\n\r\n\t\treturn rgbColor.test(str) || rgbaColor.test(str) || rgbColorPercent.test(str) || rgbaColorPercent.test(str);\r\n\t}\r\n\r\n\tvar hslcomma = /^(hsl)a?\\(\\s*((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn|\\s*)(\\s*,\\s*(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}\\s*(,\\s*((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?)\\s*)?\\)$/i;\r\n\tvar hslspace = /^(hsl)a?\\(\\s*((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn|\\s)(\\s*(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}\\s*(\\/\\s*((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?)\\s*)?\\)$/i;\r\n\tfunction isHSL(str) {\r\n\t\tassertString(str);\r\n\t\treturn hslcomma.test(str) || hslspace.test(str);\r\n\t}\r\n\r\n\tvar isrc = /^[A-Z]{2}[0-9A-Z]{3}\\d{2}\\d{5}$/;\r\n\tfunction isISRC(str) {\r\n\t\tassertString(str);\r\n\t\treturn isrc.test(str);\r\n\t}\r\n\r\n\t/**\r\n\t * List of country codes with\r\n\t * corresponding IBAN regular expression\r\n\t * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\r\n\t */\r\n\r\n\tvar ibanRegexThroughCountryCode = {\r\n\t\tAD: /^(AD[0-9]{2})\\d{8}[A-Z0-9]{12}$/,\r\n\t\tAE: /^(AE[0-9]{2})\\d{3}\\d{16}$/,\r\n\t\tAL: /^(AL[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\r\n\t\tAT: /^(AT[0-9]{2})\\d{16}$/,\r\n\t\tAZ: /^(AZ[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\r\n\t\tBA: /^(BA[0-9]{2})\\d{16}$/,\r\n\t\tBE: /^(BE[0-9]{2})\\d{12}$/,\r\n\t\tBG: /^(BG[0-9]{2})[A-Z]{4}\\d{6}[A-Z0-9]{8}$/,\r\n\t\tBH: /^(BH[0-9]{2})[A-Z]{4}[A-Z0-9]{14}$/,\r\n\t\tBR: /^(BR[0-9]{2})\\d{23}[A-Z]{1}[A-Z0-9]{1}$/,\r\n\t\tBY: /^(BY[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\r\n\t\tCH: /^(CH[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\r\n\t\tCR: /^(CR[0-9]{2})\\d{18}$/,\r\n\t\tCY: /^(CY[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\r\n\t\tCZ: /^(CZ[0-9]{2})\\d{20}$/,\r\n\t\tDE: /^(DE[0-9]{2})\\d{18}$/,\r\n\t\tDK: /^(DK[0-9]{2})\\d{14}$/,\r\n\t\tDO: /^(DO[0-9]{2})[A-Z]{4}\\d{20}$/,\r\n\t\tEE: /^(EE[0-9]{2})\\d{16}$/,\r\n\t\tEG: /^(EG[0-9]{2})\\d{25}$/,\r\n\t\tES: /^(ES[0-9]{2})\\d{20}$/,\r\n\t\tFI: /^(FI[0-9]{2})\\d{14}$/,\r\n\t\tFO: /^(FO[0-9]{2})\\d{14}$/,\r\n\t\tFR: /^(FR[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\r\n\t\tGB: /^(GB[0-9]{2})[A-Z]{4}\\d{14}$/,\r\n\t\tGE: /^(GE[0-9]{2})[A-Z0-9]{2}\\d{16}$/,\r\n\t\tGI: /^(GI[0-9]{2})[A-Z]{4}[A-Z0-9]{15}$/,\r\n\t\tGL: /^(GL[0-9]{2})\\d{14}$/,\r\n\t\tGR: /^(GR[0-9]{2})\\d{7}[A-Z0-9]{16}$/,\r\n\t\tGT: /^(GT[0-9]{2})[A-Z0-9]{4}[A-Z0-9]{20}$/,\r\n\t\tHR: /^(HR[0-9]{2})\\d{17}$/,\r\n\t\tHU: /^(HU[0-9]{2})\\d{24}$/,\r\n\t\tIE: /^(IE[0-9]{2})[A-Z0-9]{4}\\d{14}$/,\r\n\t\tIL: /^(IL[0-9]{2})\\d{19}$/,\r\n\t\tIQ: /^(IQ[0-9]{2})[A-Z]{4}\\d{15}$/,\r\n\t\tIR: /^(IR[0-9]{2})0\\d{2}0\\d{18}$/,\r\n\t\tIS: /^(IS[0-9]{2})\\d{22}$/,\r\n\t\tIT: /^(IT[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\r\n\t\tJO: /^(JO[0-9]{2})[A-Z]{4}\\d{22}$/,\r\n\t\tKW: /^(KW[0-9]{2})[A-Z]{4}[A-Z0-9]{22}$/,\r\n\t\tKZ: /^(KZ[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\r\n\t\tLB: /^(LB[0-9]{2})\\d{4}[A-Z0-9]{20}$/,\r\n\t\tLC: /^(LC[0-9]{2})[A-Z]{4}[A-Z0-9]{24}$/,\r\n\t\tLI: /^(LI[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\r\n\t\tLT: /^(LT[0-9]{2})\\d{16}$/,\r\n\t\tLU: /^(LU[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\r\n\t\tLV: /^(LV[0-9]{2})[A-Z]{4}[A-Z0-9]{13}$/,\r\n\t\tMC: /^(MC[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\r\n\t\tMD: /^(MD[0-9]{2})[A-Z0-9]{20}$/,\r\n\t\tME: /^(ME[0-9]{2})\\d{18}$/,\r\n\t\tMK: /^(MK[0-9]{2})\\d{3}[A-Z0-9]{10}\\d{2}$/,\r\n\t\tMR: /^(MR[0-9]{2})\\d{23}$/,\r\n\t\tMT: /^(MT[0-9]{2})[A-Z]{4}\\d{5}[A-Z0-9]{18}$/,\r\n\t\tMU: /^(MU[0-9]{2})[A-Z]{4}\\d{19}[A-Z]{3}$/,\r\n\t\tNL: /^(NL[0-9]{2})[A-Z]{4}\\d{10}$/,\r\n\t\tNO: /^(NO[0-9]{2})\\d{11}$/,\r\n\t\tPK: /^(PK[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\r\n\t\tPL: /^(PL[0-9]{2})\\d{24}$/,\r\n\t\tPS: /^(PS[0-9]{2})[A-Z0-9]{4}\\d{21}$/,\r\n\t\tPT: /^(PT[0-9]{2})\\d{21}$/,\r\n\t\tQA: /^(QA[0-9]{2})[A-Z]{4}[A-Z0-9]{21}$/,\r\n\t\tRO: /^(RO[0-9]{2})[A-Z]{4}[A-Z0-9]{16}$/,\r\n\t\tRS: /^(RS[0-9]{2})\\d{18}$/,\r\n\t\tSA: /^(SA[0-9]{2})\\d{2}[A-Z0-9]{18}$/,\r\n\t\tSC: /^(SC[0-9]{2})[A-Z]{4}\\d{20}[A-Z]{3}$/,\r\n\t\tSE: /^(SE[0-9]{2})\\d{20}$/,\r\n\t\tSI: /^(SI[0-9]{2})\\d{15}$/,\r\n\t\tSK: /^(SK[0-9]{2})\\d{20}$/,\r\n\t\tSM: /^(SM[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\r\n\t\tSV: /^(SV[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\r\n\t\tTL: /^(TL[0-9]{2})\\d{19}$/,\r\n\t\tTN: /^(TN[0-9]{2})\\d{20}$/,\r\n\t\tTR: /^(TR[0-9]{2})\\d{5}[A-Z0-9]{17}$/,\r\n\t\tUA: /^(UA[0-9]{2})\\d{6}[A-Z0-9]{19}$/,\r\n\t\tVA: /^(VA[0-9]{2})\\d{18}$/,\r\n\t\tVG: /^(VG[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\r\n\t\tXK: /^(XK[0-9]{2})\\d{16}$/\r\n\t};\r\n\t/**\r\n\t * Check whether string has correct universal IBAN format\r\n\t * The IBAN consists of up to 34 alphanumeric characters, as follows:\r\n\t * Country Code using ISO 3166-1 alpha-2, two letters\r\n\t * check digits, two digits and\r\n\t * Basic Bank Account Number (BBAN), up to 30 alphanumeric characters.\r\n\t * NOTE: Permitted IBAN characters are: digits [0-9] and the 26 latin alphabetic [A-Z]\r\n\t *\r\n\t * @param {string} str - string under validation\r\n\t * @return {boolean}\r\n\t */\r\n\r\n\tfunction hasValidIbanFormat(str) {\r\n\t\t// Strip white spaces and hyphens\r\n\t\tvar strippedStr = str.replace(/[\\s\\-]+/gi, '').toUpperCase();\r\n\t\tvar isoCountryCode = strippedStr.slice(0, 2).toUpperCase();\r\n\t\treturn isoCountryCode in ibanRegexThroughCountryCode && ibanRegexThroughCountryCode[isoCountryCode].test(strippedStr);\r\n\t}\r\n\t/**\r\n\t\t * Check whether string has valid IBAN Checksum\r\n\t\t * by performing basic mod-97 operation and\r\n\t\t * the remainder should equal 1\r\n\t\t * -- Start by rearranging the IBAN by moving the four initial characters to the end of the string\r\n\t\t * -- Replace each letter in the string with two digits, A -> 10, B = 11, Z = 35\r\n\t\t * -- Interpret the string as a decimal integer and\r\n\t\t * -- compute the remainder on division by 97 (mod 97)\r\n\t\t * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\r\n\t\t *\r\n\t\t * @param {string} str\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\r\n\r\n\tfunction hasValidIbanChecksum(str) {\r\n\t\tvar strippedStr = str.replace(/[^A-Z0-9]+/gi, '').toUpperCase(); // Keep only digits and A-Z latin alphabetic\r\n\r\n\t\tvar rearranged = strippedStr.slice(4) + strippedStr.slice(0, 4);\r\n\t\tvar alphaCapsReplacedWithDigits = rearranged.replace(/[A-Z]/g, function (_char) {\r\n\t\t\treturn _char.charCodeAt(0) - 55;\r\n\t\t});\r\n\t\tvar remainder = alphaCapsReplacedWithDigits.match(/\\d{1,7}/g).reduce(function (acc, value) {\r\n\t\t\treturn Number(acc + value) % 97;\r\n\t\t}, '');\r\n\t\treturn remainder === 1;\r\n\t}\r\n\r\n\tfunction isIBAN(str) {\r\n\t\tassertString(str);\r\n\t\treturn hasValidIbanFormat(str) && hasValidIbanChecksum(str);\r\n\t}\r\n\r\n\tvar isBICReg = /^[A-z]{4}[A-z]{2}\\w{2}(\\w{3})?$/;\r\n\tfunction isBIC(str) {\r\n\t\tassertString(str);\r\n\t\treturn isBICReg.test(str);\r\n\t}\r\n\r\n\tvar md5 = /^[a-f0-9]{32}$/;\r\n\tfunction isMD5(str) {\r\n\t\tassertString(str);\r\n\t\treturn md5.test(str);\r\n\t}\r\n\r\n\tvar lengths = {\r\n\t\tmd5: 32,\r\n\t\tmd4: 32,\r\n\t\tsha1: 40,\r\n\t\tsha256: 64,\r\n\t\tsha384: 96,\r\n\t\tsha512: 128,\r\n\t\tripemd128: 32,\r\n\t\tripemd160: 40,\r\n\t\ttiger128: 32,\r\n\t\ttiger160: 40,\r\n\t\ttiger192: 48,\r\n\t\tcrc32: 8,\r\n\t\tcrc32b: 8\r\n\t};\r\n\tfunction isHash(str, algorithm) {\r\n\t\tassertString(str);\r\n\t\tvar hash = new RegExp(\"^[a-fA-F0-9]{\".concat(lengths[algorithm], \"}$\"));\r\n\t\treturn hash.test(str);\r\n\t}\r\n\r\n\tvar notBase64 = /[^A-Z0-9+\\/=]/i;\r\n\tvar urlSafeBase64 = /^[A-Z0-9_\\-]*$/i;\r\n\tvar defaultBase64Options = {\r\n\t\turlSafe: false\r\n\t};\r\n\tfunction isBase64(str, options) {\r\n\t\tassertString(str);\r\n\t\toptions = merge(options, defaultBase64Options);\r\n\t\tvar len = str.length;\r\n\r\n\t\tif (options.urlSafe) {\r\n\t\t\treturn urlSafeBase64.test(str);\r\n\t\t}\r\n\r\n\t\tif (len % 4 !== 0 || notBase64.test(str)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar firstPaddingChar = str.indexOf('=');\r\n\t\treturn firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';\r\n\t}\r\n\r\n\tfunction isJWT(str) {\r\n\t\tassertString(str);\r\n\t\tvar dotSplit = str.split('.');\r\n\t\tvar len = dotSplit.length;\r\n\r\n\t\tif (len > 3 || len < 2) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn dotSplit.reduce(function (acc, currElem) {\r\n\t\t\treturn acc && isBase64(currElem, {\r\n\t\t\t\turlSafe: true\r\n\t\t\t});\r\n\t\t}, true);\r\n\t}\r\n\r\n\tvar default_json_options = {\r\n\t\tallow_primitives: false\r\n\t};\r\n\tfunction isJSON(str, options) {\r\n\t\tassertString(str);\r\n\r\n\t\ttry {\r\n\t\t\toptions = merge(options, default_json_options);\r\n\t\t\tvar primitives = [];\r\n\r\n\t\t\tif (options.allow_primitives) {\r\n\t\t\t\tprimitives = [null, false, true];\r\n\t\t\t}\r\n\r\n\t\t\tvar obj = JSON.parse(str);\r\n\t\t\treturn primitives.includes(obj) || !!obj && _typeof(obj) === 'object';\r\n\t\t} catch (e) {\r\n\t\t\t/* ignore */\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar default_is_empty_options = {\r\n\t\tignore_whitespace: false\r\n\t};\r\n\tfunction isEmptyString(str, options) {\r\n\t\tassertString(str);\r\n\t\toptions = merge(options, default_is_empty_options);\r\n\t\treturn (options.ignore_whitespace ? str.trim().length : str.length) === 0;\r\n\t}\r\n\r\n\tfunction isNullOrUndefined(variable) {\r\n\t\treturn ((!variable && typeof variable === \"object\") || variable === undefined);\r\n\t}\r\n\r\n\tfunction isEmpty(value) {\r\n\t\treturn (typeof value == 'string' && !value.trim())\r\n\t\t\t|| typeof value == 'undefined'\r\n\t\t\t|| value === null\r\n\t\t\t|| isEmptyObject(value);\r\n\t}\r\n\r\n\tfunction isEmptyObject(a) {\r\n\t\tvar b;\r\n\t\tfor (b in a)\r\n\t\t\treturn !1;\r\n\t\treturn !0\r\n\t}\r\n\t/* eslint-disable prefer-rest-params */\r\n\r\n\tfunction isLength(str, options) {\r\n\t\tassertString(str);\r\n\t\tvar min;\r\n\t\tvar max;\r\n\r\n\t\tif (_typeof(options) === 'object') {\r\n\t\t\tmin = options.min || 0;\r\n\t\t\tmax = options.max;\r\n\t\t} else {\r\n\t\t\t// backwards compatibility: isLength(str, min [, max])\r\n\t\t\tmin = arguments[1] || 0;\r\n\t\t\tmax = arguments[2];\r\n\t\t}\r\n\r\n\t\tvar surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\r\n\t\tvar len = str.length - surrogatePairs.length;\r\n\t\treturn len >= min && (typeof max === 'undefined' || len <= max);\r\n\t}\r\n\r\n\tvar uuid = {\r\n\t\t3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\r\n\t\t4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\r\n\t\t5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\r\n\t\tall: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\r\n\t};\r\n\tfunction isUUID(str) {\r\n\t\tvar version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';\r\n\t\tassertString(str);\r\n\t\tvar pattern = uuid[version];\r\n\t\treturn pattern && pattern.test(str);\r\n\t}\r\n\r\n\tfunction isMongoId(str) {\r\n\t\tassertString(str);\r\n\t\treturn isHexadecimal(str) && str.length === 24;\r\n\t}\r\n\r\n\tfunction isAfter(str) {\r\n\t\tvar date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());\r\n\t\tassertString(str);\r\n\t\tvar comparison = toDate(date);\r\n\t\tvar original = toDate(str);\r\n\t\treturn !!(original && comparison && original > comparison);\r\n\t}\r\n\r\n\tfunction isBefore(str) {\r\n\t\tvar date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());\r\n\t\tassertString(str);\r\n\t\tvar comparison = toDate(date);\r\n\t\tvar original = toDate(str);\r\n\t\treturn !!(original && comparison && original < comparison);\r\n\t}\r\n\r\n\tfunction isIn(str, options) {\r\n\t\tassertString(str);\r\n\t\tvar i;\r\n\r\n\t\tif (Object.prototype.toString.call(options) === '[object Array]') {\r\n\t\t\tvar array = [];\r\n\r\n\t\t\tfor (i in options) {\r\n\t\t\t\t// https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\r\n\t\t\t\t// istanbul ignore else\r\n\t\t\t\tif ({}.hasOwnProperty.call(options, i)) {\r\n\t\t\t\t\tarray[i] = toString$1(options[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn array.indexOf(str) >= 0;\r\n\t\t} else if (_typeof(options) === 'object') {\r\n\t\t\treturn options.hasOwnProperty(str);\r\n\t\t} else if (options && typeof options.indexOf === 'function') {\r\n\t\t\treturn options.indexOf(str) >= 0;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/* eslint-disable max-len */\r\n\r\n\tvar creditCard = /^(?:4[0-9]{12}(?:[0-9]{3,6})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12,15}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|6[27][0-9]{14})$/;\r\n\t/* eslint-enable max-len */\r\n\r\n\tfunction isCreditCard(str) {\r\n\t\tassertString(str);\r\n\t\tvar sanitized = str.replace(/[- ]+/g, '');\r\n\r\n\t\tif (!creditCard.test(sanitized)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar sum = 0;\r\n\t\tvar digit;\r\n\t\tvar tmpNum;\r\n\t\tvar shouldDouble;\r\n\r\n\t\tfor (var i = sanitized.length - 1; i >= 0; i--) {\r\n\t\t\tdigit = sanitized.substring(i, i + 1);\r\n\t\t\ttmpNum = parseInt(digit, 10);\r\n\r\n\t\t\tif (shouldDouble) {\r\n\t\t\t\ttmpNum *= 2;\r\n\r\n\t\t\t\tif (tmpNum >= 10) {\r\n\t\t\t\t\tsum += tmpNum % 10 + 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsum += tmpNum;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsum += tmpNum;\r\n\t\t\t}\r\n\r\n\t\t\tshouldDouble = !shouldDouble;\r\n\t\t}\r\n\r\n\t\treturn !!(sum % 10 === 0 ? sanitized : false);\r\n\t}\r\n\r\n\tvar validators = {\r\n\t\tES: function ES(str) {\r\n\t\t\tassertString(str);\r\n\t\t\tvar DNI = /^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;\r\n\t\t\tvar charsValue = {\r\n\t\t\t\tX: 0,\r\n\t\t\t\tY: 1,\r\n\t\t\t\tZ: 2\r\n\t\t\t};\r\n\t\t\tvar controlDigits = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E']; // sanitize user input\r\n\r\n\t\t\tvar sanitized = str.trim().toUpperCase(); // validate the data structure\r\n\r\n\t\t\tif (!DNI.test(sanitized)) {\r\n\t\t\t\treturn false;\r\n\t\t\t} // validate the control digit\r\n\r\n\r\n\t\t\tvar number = sanitized.slice(0, -1).replace(/[X,Y,Z]/g, function (_char) {\r\n\t\t\t\treturn charsValue[_char];\r\n\t\t\t});\r\n\t\t\treturn sanitized.endsWith(controlDigits[number % 23]);\r\n\t\t},\r\n\t\tIN: function IN(str) {\r\n\t\t\tvar DNI = /^[1-9]\\d{3}\\s?\\d{4}\\s?\\d{4}$/; // multiplication table\r\n\r\n\t\t\tvar d = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]]; // permutation table\r\n\r\n\t\t\tvar p = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]]; // sanitize user input\r\n\r\n\t\t\tvar sanitized = str.trim(); // validate the data structure\r\n\r\n\t\t\tif (!DNI.test(sanitized)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar c = 0;\r\n\t\t\tvar invertedArray = sanitized.replace(/\\s/g, '').split('').map(Number).reverse();\r\n\t\t\tinvertedArray.forEach(function (val, i) {\r\n\t\t\t\tc = d[c][p[i % 8][val]];\r\n\t\t\t});\r\n\t\t\treturn c === 0;\r\n\t\t},\r\n\t\tIT: function IT(str) {\r\n\t\t\tif (str.length !== 9) return false;\r\n\t\t\tif (str === 'CA00000AA') return false; // https://it.wikipedia.org/wiki/Carta_d%27identit%C3%A0_elettronica_italiana\r\n\r\n\t\t\treturn str.search(/C[A-Z][0-9]{5}[A-Z]{2}/i) > -1;\r\n\t\t},\r\n\t\tNO: function NO(str) {\r\n\t\t\tvar sanitized = str.trim();\r\n\t\t\tif (isNaN(Number(sanitized))) return false;\r\n\t\t\tif (sanitized.length !== 11) return false;\r\n\t\t\tif (sanitized === '00000000000') return false; // https://no.wikipedia.org/wiki/F%C3%B8dselsnummer\r\n\r\n\t\t\tvar f = sanitized.split('').map(Number);\r\n\t\t\tvar k1 = (11 - (3 * f[0] + 7 * f[1] + 6 * f[2] + 1 * f[3] + 8 * f[4] + 9 * f[5] + 4 * f[6] + 5 * f[7] + 2 * f[8]) % 11) % 11;\r\n\t\t\tvar k2 = (11 - (5 * f[0] + 4 * f[1] + 3 * f[2] + 2 * f[3] + 7 * f[4] + 6 * f[5] + 5 * f[6] + 4 * f[7] + 3 * f[8] + 2 * k1) % 11) % 11;\r\n\t\t\tif (k1 !== f[9] || k2 !== f[10]) return false;\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t'he-IL': function heIL(str) {\r\n\t\t\tvar DNI = /^\\d{9}$/; // sanitize user input\r\n\r\n\t\t\tvar sanitized = str.trim(); // validate the data structure\r\n\r\n\t\t\tif (!DNI.test(sanitized)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar id = sanitized;\r\n\t\t\tvar sum = 0,\r\n\t\t\t\tincNum;\r\n\r\n\t\t\tfor (var i = 0; i < id.length; i++) {\r\n\t\t\t\tincNum = Number(id[i]) * (i % 2 + 1); // Multiply number by 1 or 2\r\n\r\n\t\t\t\tsum += incNum > 9 ? incNum - 9 : incNum; // Sum the digits up and add to total\r\n\t\t\t}\r\n\r\n\t\t\treturn sum % 10 === 0;\r\n\t\t},\r\n\t\t'ar-TN': function arTN(str) {\r\n\t\t\tvar DNI = /^\\d{8}$/; // sanitize user input\r\n\r\n\t\t\tvar sanitized = str.trim(); // validate the data structure\r\n\r\n\t\t\tif (!DNI.test(sanitized)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t'zh-CN': function zhCN(str) {\r\n\t\t\tvar provincesAndCities = ['11', // 北京\r\n\t\t\t\t'12', // 天津\r\n\t\t\t\t'13', // 河北\r\n\t\t\t\t'14', // 山西\r\n\t\t\t\t'15', // 内蒙古\r\n\t\t\t\t'21', // 辽宁\r\n\t\t\t\t'22', // 吉林\r\n\t\t\t\t'23', // 黑龙江\r\n\t\t\t\t'31', // 上海\r\n\t\t\t\t'32', // 江苏\r\n\t\t\t\t'33', // 浙江\r\n\t\t\t\t'34', // 安徽\r\n\t\t\t\t'35', // 福建\r\n\t\t\t\t'36', // 江西\r\n\t\t\t\t'37', // 山东\r\n\t\t\t\t'41', // 河南\r\n\t\t\t\t'42', // 湖北\r\n\t\t\t\t'43', // 湖南\r\n\t\t\t\t'44', // 广东\r\n\t\t\t\t'45', // 广西\r\n\t\t\t\t'46', // 海南\r\n\t\t\t\t'50', // 重庆\r\n\t\t\t\t'51', // 四川\r\n\t\t\t\t'52', // 贵州\r\n\t\t\t\t'53', // 云南\r\n\t\t\t\t'54', // 西藏\r\n\t\t\t\t'61', // 陕西\r\n\t\t\t\t'62', // 甘肃\r\n\t\t\t\t'63', // 青海\r\n\t\t\t\t'64', // 宁夏\r\n\t\t\t\t'65', // 新疆\r\n\t\t\t\t'71', // 台湾\r\n\t\t\t\t'81', // 香港\r\n\t\t\t\t'82', // 澳门\r\n\t\t\t\t'91' // 国外\r\n\t\t\t];\r\n\t\t\tvar powers = ['7', '9', '10', '5', '8', '4', '2', '1', '6', '3', '7', '9', '10', '5', '8', '4', '2'];\r\n\t\t\tvar parityBit = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\r\n\r\n\t\t\tvar checkAddressCode = function checkAddressCode(addressCode) {\r\n\t\t\t\treturn provincesAndCities.includes(addressCode);\r\n\t\t\t};\r\n\r\n\t\t\tvar checkBirthDayCode = function checkBirthDayCode(birDayCode) {\r\n\t\t\t\tvar yyyy = parseInt(birDayCode.substring(0, 4), 10);\r\n\t\t\t\tvar mm = parseInt(birDayCode.substring(4, 6), 10);\r\n\t\t\t\tvar dd = parseInt(birDayCode.substring(6), 10);\r\n\t\t\t\tvar xdata = new Date(yyyy, mm - 1, dd);\r\n\r\n\t\t\t\tif (xdata > new Date()) {\r\n\t\t\t\t\treturn false; // eslint-disable-next-line max-len\r\n\t\t\t\t} else if (xdata.getFullYear() === yyyy && xdata.getMonth() === mm - 1 && xdata.getDate() === dd) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\r\n\t\t\tvar getParityBit = function getParityBit(idCardNo) {\r\n\t\t\t\tvar id17 = idCardNo.substring(0, 17);\r\n\t\t\t\tvar power = 0;\r\n\r\n\t\t\t\tfor (var i = 0; i < 17; i++) {\r\n\t\t\t\t\tpower += parseInt(id17.charAt(i), 10) * parseInt(powers[i], 10);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar mod = power % 11;\r\n\t\t\t\treturn parityBit[mod];\r\n\t\t\t};\r\n\r\n\t\t\tvar checkParityBit = function checkParityBit(idCardNo) {\r\n\t\t\t\treturn getParityBit(idCardNo) === idCardNo.charAt(17).toUpperCase();\r\n\t\t\t};\r\n\r\n\t\t\tvar check15IdCardNo = function check15IdCardNo(idCardNo) {\r\n\t\t\t\tvar check = /^[1-9]\\d{7}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}$/.test(idCardNo);\r\n\t\t\t\tif (!check) return false;\r\n\t\t\t\tvar addressCode = idCardNo.substring(0, 2);\r\n\t\t\t\tcheck = checkAddressCode(addressCode);\r\n\t\t\t\tif (!check) return false;\r\n\t\t\t\tvar birDayCode = \"19\".concat(idCardNo.substring(6, 12));\r\n\t\t\t\tcheck = checkBirthDayCode(birDayCode);\r\n\t\t\t\tif (!check) return false;\r\n\t\t\t\treturn true;\r\n\t\t\t};\r\n\r\n\t\t\tvar check18IdCardNo = function check18IdCardNo(idCardNo) {\r\n\t\t\t\tvar check = /^[1-9]\\d{5}[1-9]\\d{3}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}(\\d|x|X)$/.test(idCardNo);\r\n\t\t\t\tif (!check) return false;\r\n\t\t\t\tvar addressCode = idCardNo.substring(0, 2);\r\n\t\t\t\tcheck = checkAddressCode(addressCode);\r\n\t\t\t\tif (!check) return false;\r\n\t\t\t\tvar birDayCode = idCardNo.substring(6, 14);\r\n\t\t\t\tcheck = checkBirthDayCode(birDayCode);\r\n\t\t\t\tif (!check) return false;\r\n\t\t\t\treturn checkParityBit(idCardNo);\r\n\t\t\t};\r\n\r\n\t\t\tvar checkIdCardNo = function checkIdCardNo(idCardNo) {\r\n\t\t\t\tvar check = /^\\d{15}|(\\d{17}(\\d|x|X))$/.test(idCardNo);\r\n\t\t\t\tif (!check) return false;\r\n\r\n\t\t\t\tif (idCardNo.length === 15) {\r\n\t\t\t\t\treturn check15IdCardNo(idCardNo);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn check18IdCardNo(idCardNo);\r\n\t\t\t};\r\n\r\n\t\t\treturn checkIdCardNo(str);\r\n\t\t},\r\n\t\t'zh-TW': function zhTW(str) {\r\n\t\t\tvar ALPHABET_CODES = {\r\n\t\t\t\tA: 10,\r\n\t\t\t\tB: 11,\r\n\t\t\t\tC: 12,\r\n\t\t\t\tD: 13,\r\n\t\t\t\tE: 14,\r\n\t\t\t\tF: 15,\r\n\t\t\t\tG: 16,\r\n\t\t\t\tH: 17,\r\n\t\t\t\tI: 34,\r\n\t\t\t\tJ: 18,\r\n\t\t\t\tK: 19,\r\n\t\t\t\tL: 20,\r\n\t\t\t\tM: 21,\r\n\t\t\t\tN: 22,\r\n\t\t\t\tO: 35,\r\n\t\t\t\tP: 23,\r\n\t\t\t\tQ: 24,\r\n\t\t\t\tR: 25,\r\n\t\t\t\tS: 26,\r\n\t\t\t\tT: 27,\r\n\t\t\t\tU: 28,\r\n\t\t\t\tV: 29,\r\n\t\t\t\tW: 32,\r\n\t\t\t\tX: 30,\r\n\t\t\t\tY: 31,\r\n\t\t\t\tZ: 33\r\n\t\t\t};\r\n\t\t\tvar sanitized = str.trim().toUpperCase();\r\n\t\t\tif (!/^[A-Z][0-9]{9}$/.test(sanitized)) return false;\r\n\t\t\treturn Array.from(sanitized).reduce(function (sum, number, index) {\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tvar code = ALPHABET_CODES[number];\r\n\t\t\t\t\treturn code % 10 * 9 + Math.floor(code / 10);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (index === 9) {\r\n\t\t\t\t\treturn (10 - sum % 10 - Number(number)) % 10 === 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn sum + Number(number) * (9 - index);\r\n\t\t\t}, 0);\r\n\t\t}\r\n\t};\r\n\tfunction isIdentityCard(str, locale) {\r\n\t\tassertString(str);\r\n\r\n\t\tif (locale in validators) {\r\n\t\t\treturn validators[locale](str);\r\n\t\t} else if (locale === 'any') {\r\n\t\t\tfor (var key in validators) {\r\n\t\t\t\t// https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\r\n\t\t\t\t// istanbul ignore else\r\n\t\t\t\tif (validators.hasOwnProperty(key)) {\r\n\t\t\t\t\tvar validator = validators[key];\r\n\r\n\t\t\t\t\tif (validator(str)) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Invalid locale '\".concat(locale, \"'\"));\r\n\t}\r\n\r\n\t/**\r\n\t * The most commonly used EAN standard is\r\n\t * the thirteen-digit EAN-13, while the\r\n\t * less commonly used 8-digit EAN-8 barcode was\r\n\t * introduced for use on small packages.\r\n\t * EAN consists of:\r\n\t * GS1 prefix, manufacturer code, product code and check digit\r\n\t * Reference: https://en.wikipedia.org/wiki/International_Article_Number\r\n\t */\r\n\t/**\r\n\t * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13\r\n\t * and Regular Expression for valid EANs (EAN-8, EAN-13),\r\n\t * with exact numberic matching of 8 or 13 digits [0-9]\r\n\t */\r\n\r\n\tvar LENGTH_EAN_8 = 8;\r\n\tvar validEanRegex = /^(\\d{8}|\\d{13})$/;\r\n\t/**\r\n\t * Get position weight given:\r\n\t * EAN length and digit index/position\r\n\t *\r\n\t * @param {number} length\r\n\t * @param {number} index\r\n\t * @return {number}\r\n\t */\r\n\r\n\tfunction getPositionWeightThroughLengthAndIndex(length, index) {\r\n\t\tif (length === LENGTH_EAN_8) {\r\n\t\t\treturn index % 2 === 0 ? 3 : 1;\r\n\t\t}\r\n\r\n\t\treturn index % 2 === 0 ? 1 : 3;\r\n\t}\r\n\t/**\r\n\t * Calculate EAN Check Digit\r\n\t * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\r\n\t *\r\n\t * @param {string} ean\r\n\t * @return {number}\r\n\t */\r\n\r\n\r\n\tfunction calculateCheckDigit(ean) {\r\n\t\tvar checksum = ean.slice(0, -1).split('').map(function (_char, index) {\r\n\t\t\treturn Number(_char) * getPositionWeightThroughLengthAndIndex(ean.length, index);\r\n\t\t}).reduce(function (acc, partialSum) {\r\n\t\t\treturn acc + partialSum;\r\n\t\t}, 0);\r\n\t\tvar remainder = 10 - checksum % 10;\r\n\t\treturn remainder < 10 ? remainder : 0;\r\n\t}\r\n\t/**\r\n\t * Check if string is valid EAN:\r\n\t * Matches EAN-8/EAN-13 regex\r\n\t * Has valid check digit.\r\n\t *\r\n\t * @param {string} str\r\n\t * @return {boolean}\r\n\t */\r\n\r\n\r\n\tfunction isEAN(str) {\r\n\t\tassertString(str);\r\n\t\tvar actualCheckDigit = Number(str.slice(-1));\r\n\t\treturn validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\r\n\t}\r\n\r\n\tvar isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\r\n\tfunction isISIN(str) {\r\n\t\tassertString(str);\r\n\r\n\t\tif (!isin.test(str)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar checksumStr = str.replace(/[A-Z]/g, function (character) {\r\n\t\t\treturn parseInt(character, 36);\r\n\t\t});\r\n\t\tvar sum = 0;\r\n\t\tvar digit;\r\n\t\tvar tmpNum;\r\n\t\tvar shouldDouble = true;\r\n\r\n\t\tfor (var i = checksumStr.length - 2; i >= 0; i--) {\r\n\t\t\tdigit = checksumStr.substring(i, i + 1);\r\n\t\t\ttmpNum = parseInt(digit, 10);\r\n\r\n\t\t\tif (shouldDouble) {\r\n\t\t\t\ttmpNum *= 2;\r\n\r\n\t\t\t\tif (tmpNum >= 10) {\r\n\t\t\t\t\tsum += tmpNum + 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsum += tmpNum;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsum += tmpNum;\r\n\t\t\t}\r\n\r\n\t\t\tshouldDouble = !shouldDouble;\r\n\t\t}\r\n\r\n\t\treturn parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;\r\n\t}\r\n\r\n\tvar isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/;\r\n\tvar isbn13Maybe = /^(?:[0-9]{13})$/;\r\n\tvar factor = [1, 3];\r\n\tfunction isISBN(str) {\r\n\t\tvar version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\r\n\t\tassertString(str);\r\n\t\tversion = String(version);\r\n\r\n\t\tif (!version) {\r\n\t\t\treturn isISBN(str, 10) || isISBN(str, 13);\r\n\t\t}\r\n\r\n\t\tvar sanitized = str.replace(/[\\s-]+/g, '');\r\n\t\tvar checksum = 0;\r\n\t\tvar i;\r\n\r\n\t\tif (version === '10') {\r\n\t\t\tif (!isbn10Maybe.test(sanitized)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < 9; i++) {\r\n\t\t\t\tchecksum += (i + 1) * sanitized.charAt(i);\r\n\t\t\t}\r\n\r\n\t\t\tif (sanitized.charAt(9) === 'X') {\r\n\t\t\t\tchecksum += 10 * 10;\r\n\t\t\t} else {\r\n\t\t\t\tchecksum += 10 * sanitized.charAt(9);\r\n\t\t\t}\r\n\r\n\t\t\tif (checksum % 11 === 0) {\r\n\t\t\t\treturn !!sanitized;\r\n\t\t\t}\r\n\t\t} else if (version === '13') {\r\n\t\t\tif (!isbn13Maybe.test(sanitized)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < 12; i++) {\r\n\t\t\t\tchecksum += factor[i % 2] * sanitized.charAt(i);\r\n\t\t\t}\r\n\r\n\t\t\tif (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) {\r\n\t\t\t\treturn !!sanitized;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar issn = '^\\\\d{4}-?\\\\d{3}[\\\\dX]$';\r\n\tfunction isISSN(str) {\r\n\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\t\tassertString(str);\r\n\t\tvar testIssn = issn;\r\n\t\ttestIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;\r\n\t\ttestIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');\r\n\r\n\t\tif (!testIssn.test(str)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar digits = str.replace('-', '').toUpperCase();\r\n\t\tvar checksum = 0;\r\n\r\n\t\tfor (var i = 0; i < digits.length; i++) {\r\n\t\t\tvar digit = digits[i];\r\n\t\t\tchecksum += (digit === 'X' ? 10 : +digit) * (8 - i);\r\n\t\t}\r\n\r\n\t\treturn checksum % 11 === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Algorithmic validation functions\r\n\t * May be used as is or implemented in the workflow of other validators.\r\n\t */\r\n\r\n\t/*\r\n\t * ISO 7064 validation function\r\n\t * Called with a string of numbers (incl. check digit)\r\n\t * to validate according to ISO 7064 (MOD 11, 10).\r\n\t */\r\n\tfunction iso7064Check(str) {\r\n\t\tvar checkvalue = 10;\r\n\r\n\t\tfor (var i = 0; i < str.length - 1; i++) {\r\n\t\t\tcheckvalue = (parseInt(str[i], 10) + checkvalue) % 10 === 0 ? 10 * 2 % 11 : (parseInt(str[i], 10) + checkvalue) % 10 * 2 % 11;\r\n\t\t}\r\n\r\n\t\tcheckvalue = checkvalue === 1 ? 0 : 11 - checkvalue;\r\n\t\treturn checkvalue === parseInt(str[10], 10);\r\n\t}\r\n\t/*\r\n\t * Luhn (mod 10) validation function\r\n\t * Called with a string of numbers (incl. check digit)\r\n\t * to validate according to the Luhn algorithm.\r\n\t */\r\n\r\n\tfunction luhnCheck(str) {\r\n\t\tvar checksum = 0;\r\n\t\tvar second = false;\r\n\r\n\t\tfor (var i = str.length - 1; i >= 0; i--) {\r\n\t\t\tif (second) {\r\n\t\t\t\tvar product = parseInt(str[i], 10) * 2;\r\n\r\n\t\t\t\tif (product > 9) {\r\n\t\t\t\t\t// sum digits of product and add to checksum\r\n\t\t\t\t\tchecksum += product.toString().split('').map(function (a) {\r\n\t\t\t\t\t\treturn parseInt(a, 10);\r\n\t\t\t\t\t}).reduce(function (a, b) {\r\n\t\t\t\t\t\treturn a + b;\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchecksum += product;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tchecksum += parseInt(str[i], 10);\r\n\t\t\t}\r\n\r\n\t\t\tsecond = !second;\r\n\t\t}\r\n\r\n\t\treturn checksum % 10 === 0;\r\n\t}\r\n\t/*\r\n\t * Reverse TIN multiplication and summation helper function\r\n\t * Called with an array of single-digit integers and a base multiplier\r\n\t * to calculate the sum of the digits multiplied in reverse.\r\n\t * Normally used in variations of MOD 11 algorithmic checks.\r\n\t */\r\n\r\n\tfunction reverseMultiplyAndSum(digits, base) {\r\n\t\tvar total = 0;\r\n\r\n\t\tfor (var i = 0; i < digits.length; i++) {\r\n\t\t\ttotal += digits[i] * (base - i);\r\n\t\t}\r\n\r\n\t\treturn total;\r\n\t}\r\n\t/*\r\n\t * Verhoeff validation helper function\r\n\t * Called with a string of numbers\r\n\t * to validate according to the Verhoeff algorithm.\r\n\t */\r\n\r\n\tfunction verhoeffCheck(str) {\r\n\t\tvar d_table = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]];\r\n\t\tvar p_table = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]]; // Copy (to prevent replacement) and reverse\r\n\r\n\t\tvar str_copy = str.split('').reverse().join('');\r\n\t\tvar checksum = 0;\r\n\r\n\t\tfor (var i = 0; i < str_copy.length; i++) {\r\n\t\t\tchecksum = d_table[checksum][p_table[i % 8][parseInt(str_copy[i], 10)]];\r\n\t\t}\r\n\r\n\t\treturn checksum === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * TIN Validation\r\n\t * Validates Tax Identification Numbers (TINs) from the US, EU member states and the United Kingdom.\r\n\t *\r\n\t * EU-UK:\r\n\t * National TIN validity is calculated using public algorithms as made available by DG TAXUD.\r\n\t *\r\n\t * See `https://ec.europa.eu/taxation_customs/tin/specs/FS-TIN%20Algorithms-Public.docx` for more information.\r\n\t *\r\n\t * US:\r\n\t * An Employer Identification Number (EIN), also known as a Federal Tax Identification Number,\r\n\t *  is used to identify a business entity.\r\n\t *\r\n\t * NOTES:\r\n\t *  - Prefix 47 is being reserved for future use\r\n\t *  - Prefixes 26, 27, 45, 46 and 47 were previously assigned by the Philadelphia campus.\r\n\t *\r\n\t * See `http://www.irs.gov/Businesses/Small-Businesses-&-Self-Employed/How-EINs-are-Assigned-and-Valid-EIN-Prefixes`\r\n\t * for more information.\r\n\t */\r\n\t// Locale functions\r\n\r\n\t/*\r\n\t * bg-BG validation function\r\n\t * (Edinen graždanski nomer (EGN/ЕГН), persons only)\r\n\t * Checks if birth date (first six digits) is valid and calculates check (last) digit\r\n\t */\r\n\r\n\tfunction bgBgCheck(tin) {\r\n\t\t// Extract full year, normalize month and check birth date validity\r\n\t\tvar century_year = tin.slice(0, 2);\r\n\t\tvar month = parseInt(tin.slice(2, 4), 10);\r\n\r\n\t\tif (month > 40) {\r\n\t\t\tmonth -= 40;\r\n\t\t\tcentury_year = \"20\".concat(century_year);\r\n\t\t} else if (month > 20) {\r\n\t\t\tmonth -= 20;\r\n\t\t\tcentury_year = \"18\".concat(century_year);\r\n\t\t} else {\r\n\t\t\tcentury_year = \"19\".concat(century_year);\r\n\t\t}\r\n\r\n\t\tif (month < 10) {\r\n\t\t\tmonth = \"0\".concat(month);\r\n\t\t}\r\n\r\n\t\tvar date = \"\".concat(century_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\r\n\r\n\t\tif (!isDate(date, 'YYYY/MM/DD')) {\r\n\t\t\treturn false;\r\n\t\t} // split digits into an array for further processing\r\n\r\n\r\n\t\tvar digits = tin.split('').map(function (a) {\r\n\t\t\treturn parseInt(a, 10);\r\n\t\t}); // Calculate checksum by multiplying digits with fixed values\r\n\r\n\t\tvar multip_lookup = [2, 4, 8, 5, 10, 9, 7, 3, 6];\r\n\t\tvar checksum = 0;\r\n\r\n\t\tfor (var i = 0; i < multip_lookup.length; i++) {\r\n\t\t\tchecksum += digits[i] * multip_lookup[i];\r\n\t\t}\r\n\r\n\t\tchecksum = checksum % 11 === 10 ? 0 : checksum % 11;\r\n\t\treturn checksum === digits[9];\r\n\t}\r\n\t/*\r\n\t * cs-CZ validation function\r\n\t * (Rodné číslo (RČ), persons only)\r\n\t * Checks if birth date (first six digits) is valid and divisibility by 11\r\n\t * Material not in DG TAXUD document sourced from:\r\n\t * -`https://lorenc.info/3MA381/overeni-spravnosti-rodneho-cisla.htm`\r\n\t * -`https://www.mvcr.cz/clanek/rady-a-sluzby-dokumenty-rodne-cislo.aspx`\r\n\t */\r\n\r\n\r\n\tfunction csCzCheck(tin) {\r\n\t\ttin = tin.replace(/\\W/, ''); // Extract full year from TIN length\r\n\r\n\t\tvar full_year = parseInt(tin.slice(0, 2), 10);\r\n\r\n\t\tif (tin.length === 10) {\r\n\t\t\tif (full_year < 54) {\r\n\t\t\t\tfull_year = \"20\".concat(full_year);\r\n\t\t\t} else {\r\n\t\t\t\tfull_year = \"19\".concat(full_year);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (tin.slice(6) === '000') {\r\n\t\t\t\treturn false;\r\n\t\t\t} // Three-zero serial not assigned before 1954\r\n\r\n\r\n\t\t\tif (full_year < 54) {\r\n\t\t\t\tfull_year = \"19\".concat(full_year);\r\n\t\t\t} else {\r\n\t\t\t\treturn false; // No 18XX years seen in any of the resources\r\n\t\t\t}\r\n\t\t} // Add missing zero if needed\r\n\r\n\r\n\t\tif (full_year.length === 3) {\r\n\t\t\tfull_year = [full_year.slice(0, 2), '0', full_year.slice(2)].join('');\r\n\t\t} // Extract month from TIN and normalize\r\n\r\n\r\n\t\tvar month = parseInt(tin.slice(2, 4), 10);\r\n\r\n\t\tif (month > 50) {\r\n\t\t\tmonth -= 50;\r\n\t\t}\r\n\r\n\t\tif (month > 20) {\r\n\t\t\t// Month-plus-twenty was only introduced in 2004\r\n\t\t\tif (parseInt(full_year, 10) < 2004) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tmonth -= 20;\r\n\t\t}\r\n\r\n\t\tif (month < 10) {\r\n\t\t\tmonth = \"0\".concat(month);\r\n\t\t} // Check date validity\r\n\r\n\r\n\t\tvar date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\r\n\r\n\t\tif (!isDate(date, 'YYYY/MM/DD')) {\r\n\t\t\treturn false;\r\n\t\t} // Verify divisibility by 11\r\n\r\n\r\n\t\tif (tin.length === 10) {\r\n\t\t\tif (parseInt(tin, 10) % 11 !== 0) {\r\n\t\t\t\t// Some numbers up to and including 1985 are still valid if\r\n\t\t\t\t// check (last) digit equals 0 and modulo of first 9 digits equals 10\r\n\t\t\t\tvar checkdigit = parseInt(tin.slice(0, 9), 10) % 11;\r\n\r\n\t\t\t\tif (parseInt(full_year, 10) < 1986 && checkdigit === 10) {\r\n\t\t\t\t\tif (parseInt(tin.slice(9), 10) !== 0) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * de-AT validation function\r\n\t * (Abgabenkontonummer, persons/entities)\r\n\t * Verify TIN validity by calling luhnCheck()\r\n\t */\r\n\r\n\r\n\tfunction deAtCheck(tin) {\r\n\t\treturn luhnCheck(tin);\r\n\t}\r\n\t/*\r\n\t * de-DE validation function\r\n\t * (Steueridentifikationsnummer (Steuer-IdNr.), persons only)\r\n\t * Tests for single duplicate/triplicate value, then calculates ISO 7064 check (last) digit\r\n\t * Partial implementation of spec (same result with both algorithms always)\r\n\t */\r\n\r\n\r\n\tfunction deDeCheck(tin) {\r\n\t\t// Split digits into an array for further processing\r\n\t\tvar digits = tin.split('').map(function (a) {\r\n\t\t\treturn parseInt(a, 10);\r\n\t\t}); // Fill array with strings of number positions\r\n\r\n\t\tvar occurences = [];\r\n\r\n\t\tfor (var i = 0; i < digits.length - 1; i++) {\r\n\t\t\toccurences.push('');\r\n\r\n\t\t\tfor (var j = 0; j < digits.length - 1; j++) {\r\n\t\t\t\tif (digits[i] === digits[j]) {\r\n\t\t\t\t\toccurences[i] += j;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} // Remove digits with one occurence and test for only one duplicate/triplicate\r\n\r\n\r\n\t\toccurences = occurences.filter(function (a) {\r\n\t\t\treturn a.length > 1;\r\n\t\t});\r\n\r\n\t\tif (occurences.length !== 2 && occurences.length !== 3) {\r\n\t\t\treturn false;\r\n\t\t} // In case of triplicate value only two digits are allowed next to each other\r\n\r\n\r\n\t\tif (occurences[0].length === 3) {\r\n\t\t\tvar trip_locations = occurences[0].split('').map(function (a) {\r\n\t\t\t\treturn parseInt(a, 10);\r\n\t\t\t});\r\n\t\t\tvar recurrent = 0; // Amount of neighbour occurences\r\n\r\n\t\t\tfor (var _i = 0; _i < trip_locations.length - 1; _i++) {\r\n\t\t\t\tif (trip_locations[_i] + 1 === trip_locations[_i + 1]) {\r\n\t\t\t\t\trecurrent += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (recurrent === 2) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn iso7064Check(tin);\r\n\t}\r\n\t/*\r\n\t * dk-DK validation function\r\n\t * (CPR-nummer (personnummer), persons only)\r\n\t * Checks if birth date (first six digits) is valid and assigned to century (seventh) digit,\r\n\t * and calculates check (last) digit\r\n\t */\r\n\r\n\r\n\tfunction dkDkCheck(tin) {\r\n\t\ttin = tin.replace(/\\W/, ''); // Extract year, check if valid for given century digit and add century\r\n\r\n\t\tvar year = parseInt(tin.slice(4, 6), 10);\r\n\t\tvar century_digit = tin.slice(6, 7);\r\n\r\n\t\tswitch (century_digit) {\r\n\t\t\tcase '0':\r\n\t\t\tcase '1':\r\n\t\t\tcase '2':\r\n\t\t\tcase '3':\r\n\t\t\t\tyear = \"19\".concat(year);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '4':\r\n\t\t\tcase '9':\r\n\t\t\t\tif (year < 37) {\r\n\t\t\t\t\tyear = \"20\".concat(year);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tyear = \"19\".concat(year);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif (year < 37) {\r\n\t\t\t\t\tyear = \"20\".concat(year);\r\n\t\t\t\t} else if (year > 58) {\r\n\t\t\t\t\tyear = \"18\".concat(year);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t} // Add missing zero if needed\r\n\r\n\r\n\t\tif (year.length === 3) {\r\n\t\t\tyear = [year.slice(0, 2), '0', year.slice(2)].join('');\r\n\t\t} // Check date validity\r\n\r\n\r\n\t\tvar date = \"\".concat(year, \"/\").concat(tin.slice(2, 4), \"/\").concat(tin.slice(0, 2));\r\n\r\n\t\tif (!isDate(date, 'YYYY/MM/DD')) {\r\n\t\t\treturn false;\r\n\t\t} // Split digits into an array for further processing\r\n\r\n\r\n\t\tvar digits = tin.split('').map(function (a) {\r\n\t\t\treturn parseInt(a, 10);\r\n\t\t});\r\n\t\tvar checksum = 0;\r\n\t\tvar weight = 4; // Multiply by weight and add to checksum\r\n\r\n\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\tchecksum += digits[i] * weight;\r\n\t\t\tweight -= 1;\r\n\r\n\t\t\tif (weight === 1) {\r\n\t\t\t\tweight = 7;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tchecksum %= 11;\r\n\r\n\t\tif (checksum === 1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn checksum === 0 ? digits[9] === 0 : digits[9] === 11 - checksum;\r\n\t}\r\n\t/*\r\n\t * el-CY validation function\r\n\t * (Arithmos Forologikou Mitroou (AFM/ΑΦΜ), persons only)\r\n\t * Verify TIN validity by calculating ASCII value of check (last) character\r\n\t */\r\n\r\n\r\n\tfunction elCyCheck(tin) {\r\n\t\t// split digits into an array for further processing\r\n\t\tvar digits = tin.slice(0, 8).split('').map(function (a) {\r\n\t\t\treturn parseInt(a, 10);\r\n\t\t});\r\n\t\tvar checksum = 0; // add digits in even places\r\n\r\n\t\tfor (var i = 1; i < digits.length; i += 2) {\r\n\t\t\tchecksum += digits[i];\r\n\t\t} // add digits in odd places\r\n\r\n\r\n\t\tfor (var _i2 = 0; _i2 < digits.length; _i2 += 2) {\r\n\t\t\tif (digits[_i2] < 2) {\r\n\t\t\t\tchecksum += 1 - digits[_i2];\r\n\t\t\t} else {\r\n\t\t\t\tchecksum += 2 * (digits[_i2] - 2) + 5;\r\n\r\n\t\t\t\tif (digits[_i2] > 4) {\r\n\t\t\t\t\tchecksum += 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn String.fromCharCode(checksum % 26 + 65) === tin.charAt(8);\r\n\t}\r\n\t/*\r\n\t * el-GR validation function\r\n\t * (Arithmos Forologikou Mitroou (AFM/ΑΦΜ), persons/entities)\r\n\t * Verify TIN validity by calculating check (last) digit\r\n\t * Algorithm not in DG TAXUD document- sourced from:\r\n\t * - `http://epixeirisi.gr/%CE%9A%CE%A1%CE%99%CE%A3%CE%99%CE%9C%CE%91-%CE%98%CE%95%CE%9C%CE%91%CE%A4%CE%91-%CE%A6%CE%9F%CE%A1%CE%9F%CE%9B%CE%9F%CE%93%CE%99%CE%91%CE%A3-%CE%9A%CE%91%CE%99-%CE%9B%CE%9F%CE%93%CE%99%CE%A3%CE%A4%CE%99%CE%9A%CE%97%CE%A3/23791/%CE%91%CF%81%CE%B9%CE%B8%CE%BC%CF%8C%CF%82-%CE%A6%CE%BF%CF%81%CE%BF%CE%BB%CE%BF%CE%B3%CE%B9%CE%BA%CE%BF%CF%8D-%CE%9C%CE%B7%CF%84%CF%81%CF%8E%CE%BF%CF%85`\r\n\t */\r\n\r\n\r\n\tfunction elGrCheck(tin) {\r\n\t\t// split digits into an array for further processing\r\n\t\tvar digits = tin.split('').map(function (a) {\r\n\t\t\treturn parseInt(a, 10);\r\n\t\t});\r\n\t\tvar checksum = 0;\r\n\r\n\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\tchecksum += digits[i] * Math.pow(2, 8 - i);\r\n\t\t}\r\n\r\n\t\treturn checksum % 11 === digits[8];\r\n\t}\r\n\t/*\r\n\t * en-GB validation function (should go here if needed)\r\n\t * (National Insurance Number (NINO) or Unique Taxpayer Reference (UTR),\r\n\t * persons/entities respectively)\r\n\t */\r\n\r\n\t/*\r\n\t * en-IE validation function\r\n\t * (Personal Public Service Number (PPS No), persons only)\r\n\t * Verify TIN validity by calculating check (second to last) character\r\n\t */\r\n\r\n\r\n\tfunction enIeCheck(tin) {\r\n\t\tvar checksum = reverseMultiplyAndSum(tin.split('').slice(0, 7).map(function (a) {\r\n\t\t\treturn parseInt(a, 10);\r\n\t\t}), 8);\r\n\r\n\t\tif (tin.length === 9 && tin[8] !== 'W') {\r\n\t\t\tchecksum += (tin[8].charCodeAt(0) - 64) * 9;\r\n\t\t}\r\n\r\n\t\tchecksum %= 23;\r\n\r\n\t\tif (checksum === 0) {\r\n\t\t\treturn tin[7].toUpperCase() === 'W';\r\n\t\t}\r\n\r\n\t\treturn tin[7].toUpperCase() === String.fromCharCode(64 + checksum);\r\n\t} // Valid US IRS campus prefixes\r\n\r\n\r\n\tvar enUsCampusPrefix = {\r\n\t\tandover: ['10', '12'],\r\n\t\tatlanta: ['60', '67'],\r\n\t\taustin: ['50', '53'],\r\n\t\tbrookhaven: ['01', '02', '03', '04', '05', '06', '11', '13', '14', '16', '21', '22', '23', '25', '34', '51', '52', '54', '55', '56', '57', '58', '59', '65'],\r\n\t\tcincinnati: ['30', '32', '35', '36', '37', '38', '61'],\r\n\t\tfresno: ['15', '24'],\r\n\t\tinternet: ['20', '26', '27', '45', '46', '47'],\r\n\t\tkansas: ['40', '44'],\r\n\t\tmemphis: ['94', '95'],\r\n\t\togden: ['80', '90'],\r\n\t\tphiladelphia: ['33', '39', '41', '42', '43', '46', '48', '62', '63', '64', '66', '68', '71', '72', '73', '74', '75', '76', '77', '81', '82', '83', '84', '85', '86', '87', '88', '91', '92', '93', '98', '99'],\r\n\t\tsba: ['31']\r\n\t}; // Return an array of all US IRS campus prefixes\r\n\r\n\tfunction enUsGetPrefixes() {\r\n\t\tvar prefixes = [];\r\n\r\n\t\tfor (var location in enUsCampusPrefix) {\r\n\t\t\t// https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\r\n\t\t\t// istanbul ignore else\r\n\t\t\tif (enUsCampusPrefix.hasOwnProperty(location)) {\r\n\t\t\t\tprefixes.push.apply(prefixes, _toConsumableArray(enUsCampusPrefix[location]));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn prefixes;\r\n\t}\r\n\t/*\r\n\t * en-US validation function\r\n\t * Verify that the TIN starts with a valid IRS campus prefix\r\n\t */\r\n\r\n\r\n\tfunction enUsCheck(tin) {\r\n\t\treturn enUsGetPrefixes().indexOf(tin.substr(0, 2)) !== -1;\r\n\t}\r\n\t/*\r\n\t * es-ES validation function\r\n\t * (Documento Nacional de Identidad (DNI)\r\n\t * or Número de Identificación de Extranjero (NIE), persons only)\r\n\t * Verify TIN validity by calculating check (last) character\r\n\t */\r\n\r\n\r\n\tfunction esEsCheck(tin) {\r\n\t\t// Split characters into an array for further processing\r\n\t\tvar chars = tin.toUpperCase().split(''); // Replace initial letter if needed\r\n\r\n\t\tif (isNaN(parseInt(chars[0], 10)) && chars.length > 1) {\r\n\t\t\tvar lead_replace = 0;\r\n\r\n\t\t\tswitch (chars[0]) {\r\n\t\t\t\tcase 'Y':\r\n\t\t\t\t\tlead_replace = 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Z':\r\n\t\t\t\t\tlead_replace = 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\r\n\t\t\tchars.splice(0, 1, lead_replace); // Fill with zeros if smaller than proper\r\n\t\t} else {\r\n\t\t\twhile (chars.length < 9) {\r\n\t\t\t\tchars.unshift(0);\r\n\t\t\t}\r\n\t\t} // Calculate checksum and check according to lookup\r\n\r\n\r\n\t\tvar lookup = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E'];\r\n\t\tchars = chars.join('');\r\n\t\tvar checksum = parseInt(chars.slice(0, 8), 10) % 23;\r\n\t\treturn chars[8] === lookup[checksum];\r\n\t}\r\n\t/*\r\n\t * et-EE validation function\r\n\t * (Isikukood (IK), persons only)\r\n\t * Checks if birth date (century digit and six following) is valid and calculates check (last) digit\r\n\t * Material not in DG TAXUD document sourced from:\r\n\t * - `https://www.oecd.org/tax/automatic-exchange/crs-implementation-and-assistance/tax-identification-numbers/Estonia-TIN.pdf`\r\n\t */\r\n\r\n\r\n\tfunction etEeCheck(tin) {\r\n\t\t// Extract year and add century\r\n\t\tvar full_year = tin.slice(1, 3);\r\n\t\tvar century_digit = tin.slice(0, 1);\r\n\r\n\t\tswitch (century_digit) {\r\n\t\t\tcase '1':\r\n\t\t\tcase '2':\r\n\t\t\t\tfull_year = \"18\".concat(full_year);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '3':\r\n\t\t\tcase '4':\r\n\t\t\t\tfull_year = \"19\".concat(full_year);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tfull_year = \"20\".concat(full_year);\r\n\t\t\t\tbreak;\r\n\t\t} // Check date validity\r\n\r\n\r\n\t\tvar date = \"\".concat(full_year, \"/\").concat(tin.slice(3, 5), \"/\").concat(tin.slice(5, 7));\r\n\r\n\t\tif (!isDate(date, 'YYYY/MM/DD')) {\r\n\t\t\treturn false;\r\n\t\t} // Split digits into an array for further processing\r\n\r\n\r\n\t\tvar digits = tin.split('').map(function (a) {\r\n\t\t\treturn parseInt(a, 10);\r\n\t\t});\r\n\t\tvar checksum = 0;\r\n\t\tvar weight = 1; // Multiply by weight and add to checksum\r\n\r\n\t\tfor (var i = 0; i < 10; i++) {\r\n\t\t\tchecksum += digits[i] * weight;\r\n\t\t\tweight += 1;\r\n\r\n\t\t\tif (weight === 10) {\r\n\t\t\t\tweight = 1;\r\n\t\t\t}\r\n\t\t} // Do again if modulo 11 of checksum is 10\r\n\r\n\r\n\t\tif (checksum % 11 === 10) {\r\n\t\t\tchecksum = 0;\r\n\t\t\tweight = 3;\r\n\r\n\t\t\tfor (var _i3 = 0; _i3 < 10; _i3++) {\r\n\t\t\t\tchecksum += digits[_i3] * weight;\r\n\t\t\t\tweight += 1;\r\n\r\n\t\t\t\tif (weight === 10) {\r\n\t\t\t\t\tweight = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (checksum % 11 === 10) {\r\n\t\t\t\treturn digits[10] === 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn checksum % 11 === digits[10];\r\n\t}\r\n\t/*\r\n\t * fi-FI validation function\r\n\t * (Henkilötunnus (HETU), persons only)\r\n\t * Checks if birth date (first six digits plus century symbol) is valid\r\n\t * and calculates check (last) digit\r\n\t */\r\n\r\n\r\n\tfunction fiFiCheck(tin) {\r\n\t\t// Extract year and add century\r\n\t\tvar full_year = tin.slice(4, 6);\r\n\t\tvar century_symbol = tin.slice(6, 7);\r\n\r\n\t\tswitch (century_symbol) {\r\n\t\t\tcase '+':\r\n\t\t\t\tfull_year = \"18\".concat(full_year);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '-':\r\n\t\t\t\tfull_year = \"19\".concat(full_year);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tfull_year = \"20\".concat(full_year);\r\n\t\t\t\tbreak;\r\n\t\t} // Check date validity\r\n\r\n\r\n\t\tvar date = \"\".concat(full_year, \"/\").concat(tin.slice(2, 4), \"/\").concat(tin.slice(0, 2));\r\n\r\n\t\tif (!isDate(date, 'YYYY/MM/DD')) {\r\n\t\t\treturn false;\r\n\t\t} // Calculate check character\r\n\r\n\r\n\t\tvar checksum = parseInt(tin.slice(0, 6) + tin.slice(7, 10), 10) % 31;\r\n\r\n\t\tif (checksum < 10) {\r\n\t\t\treturn checksum === parseInt(tin.slice(10), 10);\r\n\t\t}\r\n\r\n\t\tchecksum -= 10;\r\n\t\tvar letters_lookup = ['A', 'B', 'C', 'D', 'E', 'F', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y'];\r\n\t\treturn letters_lookup[checksum] === tin.slice(10);\r\n\t}\r\n\t/*\r\n\t * fr/nl-BE validation function\r\n\t * (Numéro national (N.N.), persons only)\r\n\t * Checks if birth date (first six digits) is valid and calculates check (last two) digits\r\n\t */\r\n\r\n\r\n\tfunction frBeCheck(tin) {\r\n\t\t// Zero month/day value is acceptable\r\n\t\tif (tin.slice(2, 4) !== '00' || tin.slice(4, 6) !== '00') {\r\n\t\t\t// Extract date from first six digits of TIN\r\n\t\t\tvar date = \"\".concat(tin.slice(0, 2), \"/\").concat(tin.slice(2, 4), \"/\").concat(tin.slice(4, 6));\r\n\r\n\t\t\tif (!isDate(date, 'YY/MM/DD')) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar checksum = 97 - parseInt(tin.slice(0, 9), 10) % 97;\r\n\t\tvar checkdigits = parseInt(tin.slice(9, 11), 10);\r\n\r\n\t\tif (checksum !== checkdigits) {\r\n\t\t\tchecksum = 97 - parseInt(\"2\".concat(tin.slice(0, 9)), 10) % 97;\r\n\r\n\t\t\tif (checksum !== checkdigits) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * fr-FR validation function\r\n\t * (Numéro fiscal de référence (numéro SPI), persons only)\r\n\t * Verify TIN validity by calculating check (last three) digits\r\n\t */\r\n\r\n\r\n\tfunction frFrCheck(tin) {\r\n\t\ttin = tin.replace(/\\s/g, '');\r\n\t\tvar checksum = parseInt(tin.slice(0, 10), 10) % 511;\r\n\t\tvar checkdigits = parseInt(tin.slice(10, 13), 10);\r\n\t\treturn checksum === checkdigits;\r\n\t}\r\n\t/*\r\n\t * fr/lb-LU validation function\r\n\t * (numéro d’identification personnelle, persons only)\r\n\t * Verify birth date validity and run Luhn and Verhoeff checks\r\n\t */\r\n\r\n\r\n\tfunction frLuCheck(tin) {\r\n\t\t// Extract date and check validity\r\n\t\tvar date = \"\".concat(tin.slice(0, 4), \"/\").concat(tin.slice(4, 6), \"/\").concat(tin.slice(6, 8));\r\n\r\n\t\tif (!isDate(date, 'YYYY/MM/DD')) {\r\n\t\t\treturn false;\r\n\t\t} // Run Luhn check\r\n\r\n\r\n\t\tif (!luhnCheck(tin.slice(0, 12))) {\r\n\t\t\treturn false;\r\n\t\t} // Remove Luhn check digit and run Verhoeff check\r\n\r\n\r\n\t\treturn verhoeffCheck(\"\".concat(tin.slice(0, 11)).concat(tin[12]));\r\n\t}\r\n\t/*\r\n\t * hr-HR validation function\r\n\t * (Osobni identifikacijski broj (OIB), persons/entities)\r\n\t * Verify TIN validity by calling iso7064Check(digits)\r\n\t */\r\n\r\n\r\n\tfunction hrHrCheck(tin) {\r\n\t\treturn iso7064Check(tin);\r\n\t}\r\n\t/*\r\n\t * hu-HU validation function\r\n\t * (Adóazonosító jel, persons only)\r\n\t * Verify TIN validity by calculating check (last) digit\r\n\t */\r\n\r\n\r\n\tfunction huHuCheck(tin) {\r\n\t\t// split digits into an array for further processing\r\n\t\tvar digits = tin.split('').map(function (a) {\r\n\t\t\treturn parseInt(a, 10);\r\n\t\t});\r\n\t\tvar checksum = 8;\r\n\r\n\t\tfor (var i = 1; i < 9; i++) {\r\n\t\t\tchecksum += digits[i] * (i + 1);\r\n\t\t}\r\n\r\n\t\treturn checksum % 11 === digits[9];\r\n\t}\r\n\t/*\r\n\t * lt-LT validation function (should go here if needed)\r\n\t * (Asmens kodas, persons/entities respectively)\r\n\t * Current validation check is alias of etEeCheck- same format applies\r\n\t */\r\n\r\n\t/*\r\n\t * it-IT first/last name validity check\r\n\t * Accepts it-IT TIN-encoded names as a three-element character array and checks their validity\r\n\t * Due to lack of clarity between resources (\"Are only Italian consonants used?\r\n\t * What happens if a person has X in their name?\" etc.) only two test conditions\r\n\t * have been implemented:\r\n\t * Vowels may only be followed by other vowels or an X character\r\n\t * and X characters after vowels may only be followed by other X characters.\r\n\t */\r\n\r\n\r\n\tfunction itItNameCheck(name) {\r\n\t\t// true at the first occurence of a vowel\r\n\t\tvar vowelflag = false; // true at the first occurence of an X AFTER vowel\r\n\t\t// (to properly handle last names with X as consonant)\r\n\r\n\t\tvar xflag = false;\r\n\r\n\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\tif (!vowelflag && /[AEIOU]/.test(name[i])) {\r\n\t\t\t\tvowelflag = true;\r\n\t\t\t} else if (!xflag && vowelflag && name[i] === 'X') {\r\n\t\t\t\txflag = true;\r\n\t\t\t} else if (i > 0) {\r\n\t\t\t\tif (vowelflag && !xflag) {\r\n\t\t\t\t\tif (!/[AEIOU]/.test(name[i])) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (xflag) {\r\n\t\t\t\t\tif (!/X/.test(name[i])) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * it-IT validation function\r\n\t * (Codice fiscale (TIN-IT), persons only)\r\n\t * Verify name, birth date and codice catastale validity\r\n\t * and calculate check character.\r\n\t * Material not in DG-TAXUD document sourced from:\r\n\t * `https://en.wikipedia.org/wiki/Italian_fiscal_code`\r\n\t */\r\n\r\n\r\n\tfunction itItCheck(tin) {\r\n\t\t// Capitalize and split characters into an array for further processing\r\n\t\tvar chars = tin.toUpperCase().split(''); // Check first and last name validity calling itItNameCheck()\r\n\r\n\t\tif (!itItNameCheck(chars.slice(0, 3))) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!itItNameCheck(chars.slice(3, 6))) {\r\n\t\t\treturn false;\r\n\t\t} // Convert letters in number spaces back to numbers if any\r\n\r\n\r\n\t\tvar number_locations = [6, 7, 9, 10, 12, 13, 14];\r\n\t\tvar number_replace = {\r\n\t\t\tL: '0',\r\n\t\t\tM: '1',\r\n\t\t\tN: '2',\r\n\t\t\tP: '3',\r\n\t\t\tQ: '4',\r\n\t\t\tR: '5',\r\n\t\t\tS: '6',\r\n\t\t\tT: '7',\r\n\t\t\tU: '8',\r\n\t\t\tV: '9'\r\n\t\t};\r\n\r\n\t\tfor (var _i4 = 0, _number_locations = number_locations; _i4 < _number_locations.length; _i4++) {\r\n\t\t\tvar i = _number_locations[_i4];\r\n\r\n\t\t\tif (chars[i] in number_replace) {\r\n\t\t\t\tchars.splice(i, 1, number_replace[chars[i]]);\r\n\t\t\t}\r\n\t\t} // Extract month and day, and check date validity\r\n\r\n\r\n\t\tvar month_replace = {\r\n\t\t\tA: '01',\r\n\t\t\tB: '02',\r\n\t\t\tC: '03',\r\n\t\t\tD: '04',\r\n\t\t\tE: '05',\r\n\t\t\tH: '06',\r\n\t\t\tL: '07',\r\n\t\t\tM: '08',\r\n\t\t\tP: '09',\r\n\t\t\tR: '10',\r\n\t\t\tS: '11',\r\n\t\t\tT: '12'\r\n\t\t};\r\n\t\tvar month = month_replace[chars[8]];\r\n\t\tvar day = parseInt(chars[9] + chars[10], 10);\r\n\r\n\t\tif (day > 40) {\r\n\t\t\tday -= 40;\r\n\t\t}\r\n\r\n\t\tif (day < 10) {\r\n\t\t\tday = \"0\".concat(day);\r\n\t\t}\r\n\r\n\t\tvar date = \"\".concat(chars[6]).concat(chars[7], \"/\").concat(month, \"/\").concat(day);\r\n\r\n\t\tif (!isDate(date, 'YY/MM/DD')) {\r\n\t\t\treturn false;\r\n\t\t} // Calculate check character by adding up even and odd characters as numbers\r\n\r\n\r\n\t\tvar checksum = 0;\r\n\r\n\t\tfor (var _i5 = 1; _i5 < chars.length - 1; _i5 += 2) {\r\n\t\t\tvar char_to_int = parseInt(chars[_i5], 10);\r\n\r\n\t\t\tif (isNaN(char_to_int)) {\r\n\t\t\t\tchar_to_int = chars[_i5].charCodeAt(0) - 65;\r\n\t\t\t}\r\n\r\n\t\t\tchecksum += char_to_int;\r\n\t\t}\r\n\r\n\t\tvar odd_convert = {\r\n\t\t\t// Maps of characters at odd places\r\n\t\t\tA: 1,\r\n\t\t\tB: 0,\r\n\t\t\tC: 5,\r\n\t\t\tD: 7,\r\n\t\t\tE: 9,\r\n\t\t\tF: 13,\r\n\t\t\tG: 15,\r\n\t\t\tH: 17,\r\n\t\t\tI: 19,\r\n\t\t\tJ: 21,\r\n\t\t\tK: 2,\r\n\t\t\tL: 4,\r\n\t\t\tM: 18,\r\n\t\t\tN: 20,\r\n\t\t\tO: 11,\r\n\t\t\tP: 3,\r\n\t\t\tQ: 6,\r\n\t\t\tR: 8,\r\n\t\t\tS: 12,\r\n\t\t\tT: 14,\r\n\t\t\tU: 16,\r\n\t\t\tV: 10,\r\n\t\t\tW: 22,\r\n\t\t\tX: 25,\r\n\t\t\tY: 24,\r\n\t\t\tZ: 23,\r\n\t\t\t0: 1,\r\n\t\t\t1: 0\r\n\t\t};\r\n\r\n\t\tfor (var _i6 = 0; _i6 < chars.length - 1; _i6 += 2) {\r\n\t\t\tvar _char_to_int = 0;\r\n\r\n\t\t\tif (chars[_i6] in odd_convert) {\r\n\t\t\t\t_char_to_int = odd_convert[chars[_i6]];\r\n\t\t\t} else {\r\n\t\t\t\tvar multiplier = parseInt(chars[_i6], 10);\r\n\t\t\t\t_char_to_int = 2 * multiplier + 1;\r\n\r\n\t\t\t\tif (multiplier > 4) {\r\n\t\t\t\t\t_char_to_int += 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tchecksum += _char_to_int;\r\n\t\t}\r\n\r\n\t\tif (String.fromCharCode(65 + checksum % 26) !== chars[15]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * lv-LV validation function\r\n\t * (Personas kods (PK), persons only)\r\n\t * Check validity of birth date and calculate check (last) digit\r\n\t * Support only for old format numbers (not starting with '32', issued before 2017/07/01)\r\n\t * Material not in DG TAXUD document sourced from:\r\n\t * `https://boot.ritakafija.lv/forums/index.php?/topic/88314-personas-koda-algoritms-%C4%8Deksumma/`\r\n\t */\r\n\r\n\r\n\tfunction lvLvCheck(tin) {\r\n\t\ttin = tin.replace(/\\W/, ''); // Extract date from TIN\r\n\r\n\t\tvar day = tin.slice(0, 2);\r\n\r\n\t\tif (day !== '32') {\r\n\t\t\t// No date/checksum check if new format\r\n\t\t\tvar month = tin.slice(2, 4);\r\n\r\n\t\t\tif (month !== '00') {\r\n\t\t\t\t// No date check if unknown month\r\n\t\t\t\tvar full_year = tin.slice(4, 6);\r\n\r\n\t\t\t\tswitch (tin[6]) {\r\n\t\t\t\t\tcase '0':\r\n\t\t\t\t\t\tfull_year = \"18\".concat(full_year);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase '1':\r\n\t\t\t\t\t\tfull_year = \"19\".concat(full_year);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tfull_year = \"20\".concat(full_year);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t} // Check date validity\r\n\r\n\r\n\t\t\t\tvar date = \"\".concat(full_year, \"/\").concat(tin.slice(2, 4), \"/\").concat(day);\r\n\r\n\t\t\t\tif (!isDate(date, 'YYYY/MM/DD')) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} // Calculate check digit\r\n\r\n\r\n\t\t\tvar checksum = 1101;\r\n\t\t\tvar multip_lookup = [1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\r\n\r\n\t\t\tfor (var i = 0; i < tin.length - 1; i++) {\r\n\t\t\t\tchecksum -= parseInt(tin[i], 10) * multip_lookup[i];\r\n\t\t\t}\r\n\r\n\t\t\treturn parseInt(tin[10], 10) === checksum % 11;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * mt-MT validation function\r\n\t * (Identity Card Number or Unique Taxpayer Reference, persons/entities)\r\n\t * Verify Identity Card Number structure (no other tests found)\r\n\t */\r\n\r\n\r\n\tfunction mtMtCheck(tin) {\r\n\t\tif (tin.length !== 9) {\r\n\t\t\t// No tests for UTR\r\n\t\t\tvar chars = tin.toUpperCase().split(''); // Fill with zeros if smaller than proper\r\n\r\n\t\t\twhile (chars.length < 8) {\r\n\t\t\t\tchars.unshift(0);\r\n\t\t\t} // Validate format according to last character\r\n\r\n\r\n\t\t\tswitch (tin[7]) {\r\n\t\t\t\tcase 'A':\r\n\t\t\t\tcase 'P':\r\n\t\t\t\t\tif (parseInt(chars[6], 10) === 0) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar first_part = parseInt(chars.join('').slice(0, 5), 10);\r\n\r\n\t\t\t\t\t\tif (first_part > 32000) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar second_part = parseInt(chars.join('').slice(5, 7), 10);\r\n\r\n\t\t\t\t\t\tif (first_part === second_part) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * nl-NL validation function\r\n\t * (Burgerservicenummer (BSN) or Rechtspersonen Samenwerkingsverbanden Informatie Nummer (RSIN),\r\n\t * persons/entities respectively)\r\n\t * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\r\n\t */\r\n\r\n\r\n\tfunction nlNlCheck(tin) {\r\n\t\treturn reverseMultiplyAndSum(tin.split('').slice(0, 8).map(function (a) {\r\n\t\t\treturn parseInt(a, 10);\r\n\t\t}), 9) % 11 === parseInt(tin[8], 10);\r\n\t}\r\n\t/*\r\n\t * pl-PL validation function\r\n\t * (Powszechny Elektroniczny System Ewidencji Ludności (PESEL)\r\n\t * or Numer identyfikacji podatkowej (NIP), persons/entities)\r\n\t * Verify TIN validity by validating birth date (PESEL) and calculating check (last) digit\r\n\t */\r\n\r\n\r\n\tfunction plPlCheck(tin) {\r\n\t\t// NIP\r\n\t\tif (tin.length === 10) {\r\n\t\t\t// Calculate last digit by multiplying with lookup\r\n\t\t\tvar lookup = [6, 5, 7, 2, 3, 4, 5, 6, 7];\r\n\t\t\tvar _checksum = 0;\r\n\r\n\t\t\tfor (var i = 0; i < lookup.length; i++) {\r\n\t\t\t\t_checksum += parseInt(tin[i], 10) * lookup[i];\r\n\t\t\t}\r\n\r\n\t\t\t_checksum %= 11;\r\n\r\n\t\t\tif (_checksum === 10) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn _checksum === parseInt(tin[9], 10);\r\n\t\t} // PESEL\r\n\t\t// Extract full year using month\r\n\r\n\r\n\t\tvar full_year = tin.slice(0, 2);\r\n\t\tvar month = parseInt(tin.slice(2, 4), 10);\r\n\r\n\t\tif (month > 80) {\r\n\t\t\tfull_year = \"18\".concat(full_year);\r\n\t\t\tmonth -= 80;\r\n\t\t} else if (month > 60) {\r\n\t\t\tfull_year = \"22\".concat(full_year);\r\n\t\t\tmonth -= 60;\r\n\t\t} else if (month > 40) {\r\n\t\t\tfull_year = \"21\".concat(full_year);\r\n\t\t\tmonth -= 40;\r\n\t\t} else if (month > 20) {\r\n\t\t\tfull_year = \"20\".concat(full_year);\r\n\t\t\tmonth -= 20;\r\n\t\t} else {\r\n\t\t\tfull_year = \"19\".concat(full_year);\r\n\t\t} // Add leading zero to month if needed\r\n\r\n\r\n\t\tif (month < 10) {\r\n\t\t\tmonth = \"0\".concat(month);\r\n\t\t} // Check date validity\r\n\r\n\r\n\t\tvar date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\r\n\r\n\t\tif (!isDate(date, 'YYYY/MM/DD')) {\r\n\t\t\treturn false;\r\n\t\t} // Calculate last digit by mulitplying with odd one-digit numbers except 5\r\n\r\n\r\n\t\tvar checksum = 0;\r\n\t\tvar multiplier = 1;\r\n\r\n\t\tfor (var _i7 = 0; _i7 < tin.length - 1; _i7++) {\r\n\t\t\tchecksum += parseInt(tin[_i7], 10) * multiplier % 10;\r\n\t\t\tmultiplier += 2;\r\n\r\n\t\t\tif (multiplier > 10) {\r\n\t\t\t\tmultiplier = 1;\r\n\t\t\t} else if (multiplier === 5) {\r\n\t\t\t\tmultiplier += 2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tchecksum = 10 - checksum % 10;\r\n\t\treturn checksum === parseInt(tin[10], 10);\r\n\t}\r\n\t/*\r\n\t * pt-PT validation function\r\n\t * (Número de identificação fiscal (NIF), persons/entities)\r\n\t * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\r\n\t */\r\n\r\n\r\n\tfunction ptPtCheck(tin) {\r\n\t\tvar checksum = 11 - reverseMultiplyAndSum(tin.split('').slice(0, 8).map(function (a) {\r\n\t\t\treturn parseInt(a, 10);\r\n\t\t}), 9) % 11;\r\n\r\n\t\tif (checksum > 9) {\r\n\t\t\treturn parseInt(tin[8], 10) === 0;\r\n\t\t}\r\n\r\n\t\treturn checksum === parseInt(tin[8], 10);\r\n\t}\r\n\t/*\r\n\t * ro-RO validation function\r\n\t * (Cod Numeric Personal (CNP) or Cod de înregistrare fiscală (CIF),\r\n\t * persons only)\r\n\t * Verify CNP validity by calculating check (last) digit (test not found for CIF)\r\n\t * Material not in DG TAXUD document sourced from:\r\n\t * `https://en.wikipedia.org/wiki/National_identification_number#Romania`\r\n\t */\r\n\r\n\r\n\tfunction roRoCheck(tin) {\r\n\t\tif (tin.slice(0, 4) !== '9000') {\r\n\t\t\t// No test found for this format\r\n\t\t\t// Extract full year using century digit if possible\r\n\t\t\tvar full_year = tin.slice(1, 3);\r\n\r\n\t\t\tswitch (tin[0]) {\r\n\t\t\t\tcase '1':\r\n\t\t\t\tcase '2':\r\n\t\t\t\t\tfull_year = \"19\".concat(full_year);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3':\r\n\t\t\t\tcase '4':\r\n\t\t\t\t\tfull_year = \"18\".concat(full_year);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '5':\r\n\t\t\t\tcase '6':\r\n\t\t\t\t\tfull_year = \"20\".concat(full_year);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t} // Check date validity\r\n\r\n\r\n\t\t\tvar date = \"\".concat(full_year, \"/\").concat(tin.slice(3, 5), \"/\").concat(tin.slice(5, 7));\r\n\r\n\t\t\tif (date.length === 8) {\r\n\t\t\t\tif (!isDate(date, 'YY/MM/DD')) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else if (!isDate(date, 'YYYY/MM/DD')) {\r\n\t\t\t\treturn false;\r\n\t\t\t} // Calculate check digit\r\n\r\n\r\n\t\t\tvar digits = tin.split('').map(function (a) {\r\n\t\t\t\treturn parseInt(a, 10);\r\n\t\t\t});\r\n\t\t\tvar multipliers = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9];\r\n\t\t\tvar checksum = 0;\r\n\r\n\t\t\tfor (var i = 0; i < multipliers.length; i++) {\r\n\t\t\t\tchecksum += digits[i] * multipliers[i];\r\n\t\t\t}\r\n\r\n\t\t\tif (checksum % 11 === 10) {\r\n\t\t\t\treturn digits[12] === 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn digits[12] === checksum % 11;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * sk-SK validation function\r\n\t * (Rodné číslo (RČ) or bezvýznamové identifikačné číslo (BIČ), persons only)\r\n\t * Checks validity of pre-1954 birth numbers (rodné číslo) only\r\n\t * Due to the introduction of the pseudo-random BIČ it is not possible to test\r\n\t * post-1954 birth numbers without knowing whether they are BIČ or RČ beforehand\r\n\t */\r\n\r\n\r\n\tfunction skSkCheck(tin) {\r\n\t\tif (tin.length === 9) {\r\n\t\t\ttin = tin.replace(/\\W/, '');\r\n\r\n\t\t\tif (tin.slice(6) === '000') {\r\n\t\t\t\treturn false;\r\n\t\t\t} // Three-zero serial not assigned before 1954\r\n\t\t\t// Extract full year from TIN length\r\n\r\n\r\n\t\t\tvar full_year = parseInt(tin.slice(0, 2), 10);\r\n\r\n\t\t\tif (full_year > 53) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (full_year < 10) {\r\n\t\t\t\tfull_year = \"190\".concat(full_year);\r\n\t\t\t} else {\r\n\t\t\t\tfull_year = \"19\".concat(full_year);\r\n\t\t\t} // Extract month from TIN and normalize\r\n\r\n\r\n\t\t\tvar month = parseInt(tin.slice(2, 4), 10);\r\n\r\n\t\t\tif (month > 50) {\r\n\t\t\t\tmonth -= 50;\r\n\t\t\t}\r\n\r\n\t\t\tif (month < 10) {\r\n\t\t\t\tmonth = \"0\".concat(month);\r\n\t\t\t} // Check date validity\r\n\r\n\r\n\t\t\tvar date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\r\n\r\n\t\t\tif (!isDate(date, 'YYYY/MM/DD')) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * sl-SI validation function\r\n\t * (Davčna številka, persons/entities)\r\n\t * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\r\n\t */\r\n\r\n\r\n\tfunction slSiCheck(tin) {\r\n\t\tvar checksum = 11 - reverseMultiplyAndSum(tin.split('').slice(0, 7).map(function (a) {\r\n\t\t\treturn parseInt(a, 10);\r\n\t\t}), 8) % 11;\r\n\r\n\t\tif (checksum === 10) {\r\n\t\t\treturn parseInt(tin[7], 10) === 0;\r\n\t\t}\r\n\r\n\t\treturn checksum === parseInt(tin[7], 10);\r\n\t}\r\n\t/*\r\n\t * sv-SE validation function\r\n\t * (Personnummer or samordningsnummer, persons only)\r\n\t * Checks validity of birth date and calls luhnCheck() to validate check (last) digit\r\n\t */\r\n\r\n\r\n\tfunction svSeCheck(tin) {\r\n\t\t// Make copy of TIN and normalize to two-digit year form\r\n\t\tvar tin_copy = tin.slice(0);\r\n\r\n\t\tif (tin.length > 11) {\r\n\t\t\ttin_copy = tin_copy.slice(2);\r\n\t\t} // Extract date of birth\r\n\r\n\r\n\t\tvar full_year = '';\r\n\t\tvar month = tin_copy.slice(2, 4);\r\n\t\tvar day = parseInt(tin_copy.slice(4, 6), 10);\r\n\r\n\t\tif (tin.length > 11) {\r\n\t\t\tfull_year = tin.slice(0, 4);\r\n\t\t} else {\r\n\t\t\tfull_year = tin.slice(0, 2);\r\n\r\n\t\t\tif (tin.length === 11 && day < 60) {\r\n\t\t\t\t// Extract full year from centenarian symbol\r\n\t\t\t\t// Should work just fine until year 10000 or so\r\n\t\t\t\tvar current_year = new Date().getFullYear().toString();\r\n\t\t\t\tvar current_century = parseInt(current_year.slice(0, 2), 10);\r\n\t\t\t\tcurrent_year = parseInt(current_year, 10);\r\n\r\n\t\t\t\tif (tin[6] === '-') {\r\n\t\t\t\t\tif (parseInt(\"\".concat(current_century).concat(full_year), 10) > current_year) {\r\n\t\t\t\t\t\tfull_year = \"\".concat(current_century - 1).concat(full_year);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfull_year = \"\".concat(current_century).concat(full_year);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfull_year = \"\".concat(current_century - 1).concat(full_year);\r\n\r\n\t\t\t\t\tif (current_year - parseInt(full_year, 10) < 100) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} // Normalize day and check date validity\r\n\r\n\r\n\t\tif (day > 60) {\r\n\t\t\tday -= 60;\r\n\t\t}\r\n\r\n\t\tif (day < 10) {\r\n\t\t\tday = \"0\".concat(day);\r\n\t\t}\r\n\r\n\t\tvar date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(day);\r\n\r\n\t\tif (date.length === 8) {\r\n\t\t\tif (!isDate(date, 'YY/MM/DD')) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else if (!isDate(date, 'YYYY/MM/DD')) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn luhnCheck(tin.replace(/\\W/, ''));\r\n\t} // Locale lookup objects\r\n\r\n\t/*\r\n\t * Tax id regex formats for various locales\r\n\t *\r\n\t * Where not explicitly specified in DG-TAXUD document both\r\n\t * uppercase and lowercase letters are acceptable.\r\n\t */\r\n\r\n\r\n\tvar taxIdFormat = {\r\n\t\t'bg-BG': /^\\d{10}$/,\r\n\t\t'cs-CZ': /^\\d{6}\\/{0,1}\\d{3,4}$/,\r\n\t\t'de-AT': /^\\d{9}$/,\r\n\t\t'de-DE': /^[1-9]\\d{10}$/,\r\n\t\t'dk-DK': /^\\d{6}-{0,1}\\d{4}$/,\r\n\t\t'el-CY': /^[09]\\d{7}[A-Z]$/,\r\n\t\t'el-GR': /^([0-4]|[7-9])\\d{8}$/,\r\n\t\t'en-GB': /^\\d{10}$|^(?!GB|NK|TN|ZZ)(?![DFIQUV])[A-Z](?![DFIQUVO])[A-Z]\\d{6}[ABCD ]$/i,\r\n\t\t'en-IE': /^\\d{7}[A-W][A-IW]{0,1}$/i,\r\n\t\t'en-US': /^\\d{2}[- ]{0,1}\\d{7}$/,\r\n\t\t'es-ES': /^(\\d{0,8}|[XYZKLM]\\d{7})[A-HJ-NP-TV-Z]$/i,\r\n\t\t'et-EE': /^[1-6]\\d{6}(00[1-9]|0[1-9][0-9]|[1-6][0-9]{2}|70[0-9]|710)\\d$/,\r\n\t\t'fi-FI': /^\\d{6}[-+A]\\d{3}[0-9A-FHJ-NPR-Y]$/i,\r\n\t\t'fr-BE': /^\\d{11}$/,\r\n\t\t'fr-FR': /^[0-3]\\d{12}$|^[0-3]\\d\\s\\d{2}(\\s\\d{3}){3}$/,\r\n\t\t// Conforms both to official spec and provided example\r\n\t\t'fr-LU': /^\\d{13}$/,\r\n\t\t'hr-HR': /^\\d{11}$/,\r\n\t\t'hu-HU': /^8\\d{9}$/,\r\n\t\t'it-IT': /^[A-Z]{6}[L-NP-V0-9]{2}[A-EHLMPRST][L-NP-V0-9]{2}[A-ILMZ][L-NP-V0-9]{3}[A-Z]$/i,\r\n\t\t'lv-LV': /^\\d{6}-{0,1}\\d{5}$/,\r\n\t\t// Conforms both to DG TAXUD spec and original research\r\n\t\t'mt-MT': /^\\d{3,7}[APMGLHBZ]$|^([1-8])\\1\\d{7}$/i,\r\n\t\t'nl-NL': /^\\d{9}$/,\r\n\t\t'pl-PL': /^\\d{10,11}$/,\r\n\t\t'pt-PT': /^\\d{9}$/,\r\n\t\t'ro-RO': /^\\d{13}$/,\r\n\t\t'sk-SK': /^\\d{6}\\/{0,1}\\d{3,4}$/,\r\n\t\t'sl-SI': /^[1-9]\\d{7}$/,\r\n\t\t'sv-SE': /^(\\d{6}[-+]{0,1}\\d{4}|(18|19|20)\\d{6}[-+]{0,1}\\d{4})$/\r\n\t}; // taxIdFormat locale aliases\r\n\r\n\ttaxIdFormat['lb-LU'] = taxIdFormat['fr-LU'];\r\n\ttaxIdFormat['lt-LT'] = taxIdFormat['et-EE'];\r\n\ttaxIdFormat['nl-BE'] = taxIdFormat['fr-BE']; // Algorithmic tax id check functions for various locales\r\n\r\n\tvar taxIdCheck = {\r\n\t\t'bg-BG': bgBgCheck,\r\n\t\t'cs-CZ': csCzCheck,\r\n\t\t'de-AT': deAtCheck,\r\n\t\t'de-DE': deDeCheck,\r\n\t\t'dk-DK': dkDkCheck,\r\n\t\t'el-CY': elCyCheck,\r\n\t\t'el-GR': elGrCheck,\r\n\t\t'en-IE': enIeCheck,\r\n\t\t'en-US': enUsCheck,\r\n\t\t'es-ES': esEsCheck,\r\n\t\t'et-EE': etEeCheck,\r\n\t\t'fi-FI': fiFiCheck,\r\n\t\t'fr-BE': frBeCheck,\r\n\t\t'fr-FR': frFrCheck,\r\n\t\t'fr-LU': frLuCheck,\r\n\t\t'hr-HR': hrHrCheck,\r\n\t\t'hu-HU': huHuCheck,\r\n\t\t'it-IT': itItCheck,\r\n\t\t'lv-LV': lvLvCheck,\r\n\t\t'mt-MT': mtMtCheck,\r\n\t\t'nl-NL': nlNlCheck,\r\n\t\t'pl-PL': plPlCheck,\r\n\t\t'pt-PT': ptPtCheck,\r\n\t\t'ro-RO': roRoCheck,\r\n\t\t'sk-SK': skSkCheck,\r\n\t\t'sl-SI': slSiCheck,\r\n\t\t'sv-SE': svSeCheck\r\n\t}; // taxIdCheck locale aliases\r\n\r\n\ttaxIdCheck['lb-LU'] = taxIdCheck['fr-LU'];\r\n\ttaxIdCheck['lt-LT'] = taxIdCheck['et-EE'];\r\n\ttaxIdCheck['nl-BE'] = taxIdCheck['fr-BE']; // Regexes for locales where characters should be omitted before checking format\r\n\r\n\tvar allsymbols = /[-\\\\\\/!@#$%\\^&\\*\\(\\)\\+\\=\\[\\]]+/g;\r\n\tvar sanitizeRegexes = {\r\n\t\t'de-AT': allsymbols,\r\n\t\t'de-DE': /[\\/\\\\]/g,\r\n\t\t'fr-BE': allsymbols\r\n\t}; // sanitizeRegexes locale aliases\r\n\r\n\tsanitizeRegexes['nl-BE'] = sanitizeRegexes['fr-BE'];\r\n\t/*\r\n\t * Validator function\r\n\t * Return true if the passed string is a valid tax identification number\r\n\t * for the specified locale.\r\n\t * Throw an error exception if the locale is not supported.\r\n\t */\r\n\r\n\tfunction isTaxID(str) {\r\n\t\tvar locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\r\n\t\tassertString(str); // Copy TIN to avoid replacement if sanitized\r\n\r\n\t\tvar strcopy = str.slice(0);\r\n\r\n\t\tif (locale in taxIdFormat) {\r\n\t\t\tif (locale in sanitizeRegexes) {\r\n\t\t\t\tstrcopy = strcopy.replace(sanitizeRegexes[locale], '');\r\n\t\t\t}\r\n\r\n\t\t\tif (!taxIdFormat[locale].test(strcopy)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (locale in taxIdCheck) {\r\n\t\t\t\treturn taxIdCheck[locale](strcopy);\r\n\t\t\t} // Fallthrough; not all locales have algorithmic checks\r\n\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Invalid locale '\".concat(locale, \"'\"));\r\n\t}\r\n\r\n\t/* eslint-disable max-len */\r\n\r\n\tvar phones = {\r\n\t\t'am-AM': /^(\\+?374|0)((10|[9|7][0-9])\\d{6}$|[2-4]\\d{7}$)/,\r\n\t\t'ar-AE': /^((\\+?971)|0)?5[024568]\\d{7}$/,\r\n\t\t'ar-BH': /^(\\+?973)?(3|6)\\d{7}$/,\r\n\t\t'ar-DZ': /^(\\+?213|0)(5|6|7)\\d{8}$/,\r\n\t\t'ar-LB': /^(\\+?961)?((3|81)\\d{6}|7\\d{7})$/,\r\n\t\t'ar-EG': /^((\\+?20)|0)?1[0125]\\d{8}$/,\r\n\t\t'ar-IQ': /^(\\+?964|0)?7[0-9]\\d{8}$/,\r\n\t\t'ar-JO': /^(\\+?962|0)?7[789]\\d{7}$/,\r\n\t\t'ar-KW': /^(\\+?965)[569]\\d{7}$/,\r\n\t\t'ar-LY': /^((\\+?218)|0)?(9[1-6]\\d{7}|[1-8]\\d{7,9})$/,\r\n\t\t'ar-MA': /^(?:(?:\\+|00)212|0)[5-7]\\d{8}$/,\r\n\t\t'ar-OM': /^((\\+|00)968)?(9[1-9])\\d{6}$/,\r\n\t\t'ar-SA': /^(!?(\\+?966)|0)?5\\d{8}$/,\r\n\t\t'ar-SY': /^(!?(\\+?963)|0)?9\\d{8}$/,\r\n\t\t'ar-TN': /^(\\+?216)?[2459]\\d{7}$/,\r\n\t\t'az-AZ': /^(\\+994|0)(5[015]|7[07]|99)\\d{7}$/,\r\n\t\t'bs-BA': /^((((\\+|00)3876)|06))((([0-3]|[5-6])\\d{6})|(4\\d{7}))$/,\r\n\t\t'be-BY': /^(\\+?375)?(24|25|29|33|44)\\d{7}$/,\r\n\t\t'bg-BG': /^(\\+?359|0)?8[789]\\d{7}$/,\r\n\t\t'bn-BD': /^(\\+?880|0)1[13456789][0-9]{8}$/,\r\n\t\t'ca-AD': /^(\\+376)?[346]\\d{5}$/,\r\n\t\t'cs-CZ': /^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\r\n\t\t'da-DK': /^(\\+?45)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\r\n\t\t'de-DE': /^(\\+49)?0?[1|3]([0|5][0-45-9]\\d|6([23]|0\\d?)|7([0-57-9]|6\\d))\\d{7}$/,\r\n\t\t'de-AT': /^(\\+43|0)\\d{1,4}\\d{3,12}$/,\r\n\t\t'de-CH': /^(\\+41|0)(7[5-9])\\d{1,7}$/,\r\n\t\t'de-LU': /^(\\+352)?((6\\d1)\\d{6})$/,\r\n\t\t'el-GR': /^(\\+?30|0)?(69\\d{8})$/,\r\n\t\t'en-AU': /^(\\+?61|0)4\\d{8}$/,\r\n\t\t'en-GB': /^(\\+?44|0)7\\d{9}$/,\r\n\t\t'en-GG': /^(\\+?44|0)1481\\d{6}$/,\r\n\t\t'en-GH': /^(\\+233|0)(20|50|24|54|27|57|26|56|23|28)\\d{7}$/,\r\n\t\t'en-HK': /^(\\+?852[-\\s]?)?[456789]\\d{3}[-\\s]?\\d{4}$/,\r\n\t\t'en-MO': /^(\\+?853[-\\s]?)?[6]\\d{3}[-\\s]?\\d{4}$/,\r\n\t\t'en-IE': /^(\\+?353|0)8[356789]\\d{7}$/,\r\n\t\t'en-IN': /^(\\+?91|0)?[6789]\\d{9}$/,\r\n\t\t'en-KE': /^(\\+?254|0)(7|1)\\d{8}$/,\r\n\t\t'en-MT': /^(\\+?356|0)?(99|79|77|21|27|22|25)[0-9]{6}$/,\r\n\t\t'en-MU': /^(\\+?230|0)?\\d{8}$/,\r\n\t\t'en-NG': /^(\\+?234|0)?[789]\\d{9}$/,\r\n\t\t'en-NZ': /^(\\+?64|0)[28]\\d{7,9}$/,\r\n\t\t'en-PK': /^((\\+92)|(0092))-{0,1}\\d{3}-{0,1}\\d{7}$|^\\d{11}$|^\\d{4}-\\d{7}$/,\r\n\t\t'en-PH': /^(09|\\+639)\\d{9}$/,\r\n\t\t'en-RW': /^(\\+?250|0)?[7]\\d{8}$/,\r\n\t\t'en-SG': /^(\\+65)?[689]\\d{7}$/,\r\n\t\t'en-SL': /^(?:0|94|\\+94)?(7(0|1|2|5|6|7|8)( |-)?\\d)\\d{6}$/,\r\n\t\t'en-TZ': /^(\\+?255|0)?[67]\\d{8}$/,\r\n\t\t'en-UG': /^(\\+?256|0)?[7]\\d{8}$/,\r\n\t\t'en-US': /^((\\+1|1)?( |-)?)?(\\([2-9][0-9]{2}\\)|[2-9][0-9]{2})( |-)?([2-9][0-9]{2}( |-)?[0-9]{4})$/,\r\n\t\t'en-ZA': /^(\\+?27|0)\\d{9}$/,\r\n\t\t'en-ZM': /^(\\+?26)?09[567]\\d{7}$/,\r\n\t\t'en-ZW': /^(\\+263)[0-9]{9}$/,\r\n\t\t'es-AR': /^\\+?549(11|[2368]\\d)\\d{8}$/,\r\n\t\t'es-BO': /^(\\+?591)?(6|7)\\d{7}$/,\r\n\t\t'es-CO': /^(\\+?57)?([1-8]{1}|3[0-9]{2})?[0-9]{1}\\d{6}$/,\r\n\t\t'es-CL': /^(\\+?56|0)[2-9]\\d{1}\\d{7}$/,\r\n\t\t'es-CR': /^(\\+506)?[2-8]\\d{7}$/,\r\n\t\t'es-DO': /^(\\+?1)?8[024]9\\d{7}$/,\r\n\t\t'es-HN': /^(\\+?504)?[9|8]\\d{7}$/,\r\n\t\t'es-EC': /^(\\+?593|0)([2-7]|9[2-9])\\d{7}$/,\r\n\t\t'es-ES': /^(\\+?34)?[6|7]\\d{8}$/,\r\n\t\t'es-PE': /^(\\+?51)?9\\d{8}$/,\r\n\t\t'es-MX': /^(\\+?52)?(1|01)?\\d{10,11}$/,\r\n\t\t'es-PA': /^(\\+?507)\\d{7,8}$/,\r\n\t\t'es-PY': /^(\\+?595|0)9[9876]\\d{7}$/,\r\n\t\t'es-UY': /^(\\+598|0)9[1-9][\\d]{6}$/,\r\n\t\t'et-EE': /^(\\+?372)?\\s?(5|8[1-4])\\s?([0-9]\\s?){6,7}$/,\r\n\t\t'fa-IR': /^(\\+?98[\\-\\s]?|0)9[0-39]\\d[\\-\\s]?\\d{3}[\\-\\s]?\\d{4}$/,\r\n\t\t'fi-FI': /^(\\+?358|0)\\s?(4(0|1|2|4|5|6)?|50)\\s?(\\d\\s?){4,8}\\d$/,\r\n\t\t'fj-FJ': /^(\\+?679)?\\s?\\d{3}\\s?\\d{4}$/,\r\n\t\t'fo-FO': /^(\\+?298)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\r\n\t\t'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\r\n\t\t'fr-GF': /^(\\+?594|0|00594)[67]\\d{8}$/,\r\n\t\t'fr-GP': /^(\\+?590|0|00590)[67]\\d{8}$/,\r\n\t\t'fr-MQ': /^(\\+?596|0|00596)[67]\\d{8}$/,\r\n\t\t'fr-RE': /^(\\+?262|0|00262)[67]\\d{8}$/,\r\n\t\t'he-IL': /^(\\+972|0)([23489]|5[012345689]|77)[1-9]\\d{6}$/,\r\n\t\t'hu-HU': /^(\\+?36)(20|30|70)\\d{7}$/,\r\n\t\t'id-ID': /^(\\+?62|0)8(1[123456789]|2[1238]|3[1238]|5[12356789]|7[78]|9[56789]|8[123456789])([\\s?|\\d]{5,11})$/,\r\n\t\t'it-IT': /^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\r\n\t\t'it-SM': /^((\\+378)|(0549)|(\\+390549)|(\\+3780549))?6\\d{5,9}$/,\r\n\t\t'ja-JP': /^(\\+81[ \\-]?(\\(0\\))?|0)[6789]0[ \\-]?\\d{4}[ \\-]?\\d{4}$/,\r\n\t\t'ka-GE': /^(\\+?995)?(5|79)\\d{7}$/,\r\n\t\t'kk-KZ': /^(\\+?7|8)?7\\d{9}$/,\r\n\t\t'kl-GL': /^(\\+?299)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\r\n\t\t'ko-KR': /^((\\+?82)[ \\-]?)?0?1([0|1|6|7|8|9]{1})[ \\-]?\\d{3,4}[ \\-]?\\d{4}$/,\r\n\t\t'lt-LT': /^(\\+370|8)\\d{8}$/,\r\n\t\t'ms-MY': /^(\\+?6?01){1}(([0145]{1}(\\-|\\s)?\\d{7,8})|([236789]{1}(\\s|\\-)?\\d{7}))$/,\r\n\t\t'nb-NO': /^(\\+?47)?[49]\\d{7}$/,\r\n\t\t'ne-NP': /^(\\+?977)?9[78]\\d{8}$/,\r\n\t\t'nl-BE': /^(\\+?32|0)4?\\d{8}$/,\r\n\t\t'nl-NL': /^(((\\+|00)?31\\(0\\))|((\\+|00)?31)|0)6{1}\\d{8}$/,\r\n\t\t'nn-NO': /^(\\+?47)?[49]\\d{7}$/,\r\n\t\t'pl-PL': /^(\\+?48)? ?[5-8]\\d ?\\d{3} ?\\d{2} ?\\d{2}$/,\r\n\t\t'pt-BR': /^((\\+?55\\ ?[1-9]{2}\\ ?)|(\\+?55\\ ?\\([1-9]{2}\\)\\ ?)|(0[1-9]{2}\\ ?)|(\\([1-9]{2}\\)\\ ?)|([1-9]{2}\\ ?))((\\d{4}\\-?\\d{4})|(9[2-9]{1}\\d{3}\\-?\\d{4}))$/,\r\n\t\t'pt-PT': /^(\\+?351)?9[1236]\\d{7}$/,\r\n\t\t'ro-RO': /^(\\+?4?0)\\s?7\\d{2}(\\/|\\s|\\.|\\-)?\\d{3}(\\s|\\.|\\-)?\\d{3}$/,\r\n\t\t'ru-RU': /^(\\+?7|8)?9\\d{9}$/,\r\n\t\t'sl-SI': /^(\\+386\\s?|0)(\\d{1}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}|\\d{2}\\s?\\d{3}\\s?\\d{3})$/,\r\n\t\t'sk-SK': /^(\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\r\n\t\t'sq-AL': /^(\\+355|0)6[789]\\d{6}$/,\r\n\t\t'sr-RS': /^(\\+3816|06)[- \\d]{5,9}$/,\r\n\t\t'sv-SE': /^(\\+?46|0)[\\s\\-]?7[\\s\\-]?[02369]([\\s\\-]?\\d){7}$/,\r\n\t\t'th-TH': /^(\\+66|66|0)\\d{9}$/,\r\n\t\t'tr-TR': /^(\\+?90|0)?5\\d{9}$/,\r\n\t\t'uk-UA': /^(\\+?38|8)?0\\d{9}$/,\r\n\t\t'uz-UZ': /^(\\+?998)?(6[125-79]|7[1-69]|88|9\\d)\\d{7}$/,\r\n\t\t'vi-VN': /^(\\+?84|0)((3([2-9]))|(5([2689]))|(7([0|6-9]))|(8([1-6|89]))|(9([0-9])))([0-9]{7})$/,\r\n\t\t'zh-CN': /^((\\+|00)86)?1([3568][0-9]|4[579]|6[67]|7[01235678]|9[012356789])[0-9]{8}$/,\r\n\t\t'zh-TW': /^(\\+?886\\-?|0)?9\\d{8}$/\r\n\t};\r\n\t/* eslint-enable max-len */\r\n\t// aliases\r\n\r\n\tphones['en-CA'] = phones['en-US'];\r\n\tphones['fr-CA'] = phones['en-CA'];\r\n\tphones['fr-BE'] = phones['nl-BE'];\r\n\tphones['zh-HK'] = phones['en-HK'];\r\n\tphones['zh-MO'] = phones['en-MO'];\r\n\tphones['ga-IE'] = phones['en-IE'];\r\n\tfunction isMobilePhone(str, locale, options) {\r\n\t\tassertString(str);\r\n\r\n\t\tif (options && options.strictMode && !str.startsWith('+')) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(locale)) {\r\n\t\t\treturn locale.some(function (key) {\r\n\t\t\t\t// https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\r\n\t\t\t\t// istanbul ignore else\r\n\t\t\t\tif (phones.hasOwnProperty(key)) {\r\n\t\t\t\t\tvar phone = phones[key];\r\n\r\n\t\t\t\t\tif (phone.test(str)) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t} else if (locale in phones) {\r\n\t\t\treturn phones[locale].test(str); // alias falsey locale as 'any'\r\n\t\t} else if (!locale || locale === 'any') {\r\n\t\t\tfor (var key in phones) {\r\n\t\t\t\t// istanbul ignore else\r\n\t\t\t\tif (phones.hasOwnProperty(key)) {\r\n\t\t\t\t\tvar phone = phones[key];\r\n\r\n\t\t\t\t\tif (phone.test(str)) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Invalid locale '\".concat(locale, \"'\"));\r\n\t}\r\n\tvar locales$3 = Object.keys(phones);\r\n\r\n\tvar eth = /^(0x)[0-9a-f]{40}$/i;\r\n\tfunction isEthereumAddress(str) {\r\n\t\tassertString(str);\r\n\t\treturn eth.test(str);\r\n\t}\r\n\r\n\tfunction currencyRegex(options) {\r\n\t\tvar decimal_digits = \"\\\\d{\".concat(options.digits_after_decimal[0], \"}\");\r\n\t\toptions.digits_after_decimal.forEach(function (digit, index) {\r\n\t\t\tif (index !== 0) decimal_digits = \"\".concat(decimal_digits, \"|\\\\d{\").concat(digit, \"}\");\r\n\t\t});\r\n\t\tvar symbol = \"(\".concat(options.symbol.replace(/\\W/, function (m) {\r\n\t\t\treturn \"\\\\\".concat(m);\r\n\t\t}), \")\").concat(options.require_symbol ? '' : '?'),\r\n\t\t\tnegative = '-?',\r\n\t\t\twhole_dollar_amount_without_sep = '[1-9]\\\\d*',\r\n\t\t\twhole_dollar_amount_with_sep = \"[1-9]\\\\d{0,2}(\\\\\".concat(options.thousands_separator, \"\\\\d{3})*\"),\r\n\t\t\tvalid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\r\n\t\t\twhole_dollar_amount = \"(\".concat(valid_whole_dollar_amounts.join('|'), \")?\"),\r\n\t\t\tdecimal_amount = \"(\\\\\".concat(options.decimal_separator, \"(\").concat(decimal_digits, \"))\").concat(options.require_decimal ? '' : '?');\r\n\t\tvar pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : ''); // default is negative sign before symbol, but there are two other options (besides parens)\r\n\r\n\t\tif (options.allow_negatives && !options.parens_for_negatives) {\r\n\t\t\tif (options.negative_sign_after_digits) {\r\n\t\t\t\tpattern += negative;\r\n\t\t\t} else if (options.negative_sign_before_digits) {\r\n\t\t\t\tpattern = negative + pattern;\r\n\t\t\t}\r\n\t\t} // South African Rand, for example, uses R 123 (space) and R-123 (no space)\r\n\r\n\r\n\t\tif (options.allow_negative_sign_placeholder) {\r\n\t\t\tpattern = \"( (?!\\\\-))?\".concat(pattern);\r\n\t\t} else if (options.allow_space_after_symbol) {\r\n\t\t\tpattern = \" ?\".concat(pattern);\r\n\t\t} else if (options.allow_space_after_digits) {\r\n\t\t\tpattern += '( (?!$))?';\r\n\t\t}\r\n\r\n\t\tif (options.symbol_after_digits) {\r\n\t\t\tpattern += symbol;\r\n\t\t} else {\r\n\t\t\tpattern = symbol + pattern;\r\n\t\t}\r\n\r\n\t\tif (options.allow_negatives) {\r\n\t\t\tif (options.parens_for_negatives) {\r\n\t\t\t\tpattern = \"(\\\\(\".concat(pattern, \"\\\\)|\").concat(pattern, \")\");\r\n\t\t\t} else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\r\n\t\t\t\tpattern = negative + pattern;\r\n\t\t\t}\r\n\t\t} // ensure there's a dollar and/or decimal amount, and that\r\n\t\t// it doesn't start with a space or a negative sign followed by a space\r\n\r\n\r\n\t\treturn new RegExp(\"^(?!-? )(?=.*\\\\d)\".concat(pattern, \"$\"));\r\n\t}\r\n\r\n\tvar default_currency_options = {\r\n\t\tsymbol: '$',\r\n\t\trequire_symbol: false,\r\n\t\tallow_space_after_symbol: false,\r\n\t\tsymbol_after_digits: false,\r\n\t\tallow_negatives: true,\r\n\t\tparens_for_negatives: false,\r\n\t\tnegative_sign_before_digits: false,\r\n\t\tnegative_sign_after_digits: false,\r\n\t\tallow_negative_sign_placeholder: false,\r\n\t\tthousands_separator: ',',\r\n\t\tdecimal_separator: '.',\r\n\t\tallow_decimal: true,\r\n\t\trequire_decimal: false,\r\n\t\tdigits_after_decimal: [2],\r\n\t\tallow_space_after_digits: false\r\n\t};\r\n\tfunction isCurrency(str, options) {\r\n\t\tassertString(str);\r\n\t\toptions = merge(options, default_currency_options);\r\n\t\treturn currencyRegex(options).test(str);\r\n\t}\r\n\r\n\tvar bech32 = /^(bc1)[a-z0-9]{25,39}$/;\r\n\tvar base58 = /^(1|3)[A-HJ-NP-Za-km-z1-9]{25,39}$/;\r\n\tfunction isBtcAddress(str) {\r\n\t\tassertString(str); // check for bech32\r\n\r\n\t\tif (str.startsWith('bc1')) {\r\n\t\t\tconsole.log({\r\n\t\t\t\tstr: str\r\n\t\t\t});\r\n\t\t\treturn bech32.test(str);\r\n\t\t}\r\n\r\n\t\treturn base58.test(str);\r\n\t}\r\n\r\n\t/* eslint-disable max-len */\r\n\t// from http://goo.gl/0ejHHW\r\n\r\n\tvar iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/; // same as above, except with a strict 'T' separator between date and time\r\n\r\n\tvar iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\r\n\t/* eslint-enable max-len */\r\n\r\n\tvar isValidDate = function isValidDate(str) {\r\n\t\t// str must have passed the ISO8601 check\r\n\t\t// this check is meant to catch invalid dates\r\n\t\t// like 2009-02-31\r\n\t\t// first check for ordinal dates\r\n\t\tvar ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\r\n\r\n\t\tif (ordinalMatch) {\r\n\t\t\tvar oYear = Number(ordinalMatch[1]);\r\n\t\t\tvar oDay = Number(ordinalMatch[2]); // if is leap year\r\n\r\n\t\t\tif (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;\r\n\t\t\treturn oDay <= 365;\r\n\t\t}\r\n\r\n\t\tvar match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\r\n\t\tvar year = match[1];\r\n\t\tvar month = match[2];\r\n\t\tvar day = match[3];\r\n\t\tvar monthString = month ? \"0\".concat(month).slice(-2) : month;\r\n\t\tvar dayString = day ? \"0\".concat(day).slice(-2) : day; // create a date object and compare\r\n\r\n\t\tvar d = new Date(\"\".concat(year, \"-\").concat(monthString || '01', \"-\").concat(dayString || '01'));\r\n\r\n\t\tif (month && day) {\r\n\t\t\treturn d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\tfunction isISO8601(str) {\r\n\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\t\tassertString(str);\r\n\t\tvar check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\r\n\t\tif (check && options.strict) return isValidDate(str);\r\n\t\treturn check;\r\n\t}\r\n\r\n\t/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */\r\n\r\n\tvar dateFullYear = /[0-9]{4}/;\r\n\tvar dateMonth = /(0[1-9]|1[0-2])/;\r\n\tvar dateMDay = /([12]\\d|0[1-9]|3[01])/;\r\n\tvar timeHour = /([01][0-9]|2[0-3])/;\r\n\tvar timeMinute = /[0-5][0-9]/;\r\n\tvar timeSecond = /([0-5][0-9]|60)/;\r\n\tvar timeSecFrac = /(\\.[0-9]+)?/;\r\n\tvar timeNumOffset = new RegExp(\"[-+]\".concat(timeHour.source, \":\").concat(timeMinute.source));\r\n\tvar timeOffset = new RegExp(\"([zZ]|\".concat(timeNumOffset.source, \")\"));\r\n\tvar partialTime = new RegExp(\"\".concat(timeHour.source, \":\").concat(timeMinute.source, \":\").concat(timeSecond.source).concat(timeSecFrac.source));\r\n\tvar fullDate = new RegExp(\"\".concat(dateFullYear.source, \"-\").concat(dateMonth.source, \"-\").concat(dateMDay.source));\r\n\tvar fullTime = new RegExp(\"\".concat(partialTime.source).concat(timeOffset.source));\r\n\tvar rfc3339 = new RegExp(\"\".concat(fullDate.source, \"[ tT]\").concat(fullTime.source));\r\n\tfunction isRFC3339(str) {\r\n\t\tassertString(str);\r\n\t\treturn rfc3339.test(str);\r\n\t}\r\n\r\n\tvar validISO31661Alpha2CountriesCodes = ['AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ', 'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ', 'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ', 'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET', 'FI', 'FJ', 'FK', 'FM', 'FO', 'FR', 'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY', 'HK', 'HM', 'HN', 'HR', 'HT', 'HU', 'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT', 'JE', 'JM', 'JO', 'JP', 'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ', 'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY', 'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ', 'OM', 'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY', 'QA', 'RE', 'RO', 'RS', 'RU', 'RW', 'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ', 'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ', 'UA', 'UG', 'UM', 'US', 'UY', 'UZ', 'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU', 'WF', 'WS', 'YE', 'YT', 'ZA', 'ZM', 'ZW'];\r\n\tfunction isISO31661Alpha2(str) {\r\n\t\tassertString(str);\r\n\t\treturn includes(validISO31661Alpha2CountriesCodes, str.toUpperCase());\r\n\t}\r\n\r\n\tvar validISO31661Alpha3CountriesCodes = ['AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE', 'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA', 'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK', 'COL', 'COM', 'COG', 'COD', 'COK', 'CRI', 'CIV', 'HRV', 'CUB', 'CUW', 'CYP', 'CZE', 'DNK', 'DJI', 'DMA', 'DOM', 'ECU', 'EGY', 'SLV', 'GNQ', 'ERI', 'EST', 'ETH', 'FLK', 'FRO', 'FJI', 'FIN', 'FRA', 'GUF', 'PYF', 'ATF', 'GAB', 'GMB', 'GEO', 'DEU', 'GHA', 'GIB', 'GRC', 'GRL', 'GRD', 'GLP', 'GUM', 'GTM', 'GGY', 'GIN', 'GNB', 'GUY', 'HTI', 'HMD', 'VAT', 'HND', 'HKG', 'HUN', 'ISL', 'IND', 'IDN', 'IRN', 'IRQ', 'IRL', 'IMN', 'ISR', 'ITA', 'JAM', 'JPN', 'JEY', 'JOR', 'KAZ', 'KEN', 'KIR', 'PRK', 'KOR', 'KWT', 'KGZ', 'LAO', 'LVA', 'LBN', 'LSO', 'LBR', 'LBY', 'LIE', 'LTU', 'LUX', 'MAC', 'MKD', 'MDG', 'MWI', 'MYS', 'MDV', 'MLI', 'MLT', 'MHL', 'MTQ', 'MRT', 'MUS', 'MYT', 'MEX', 'FSM', 'MDA', 'MCO', 'MNG', 'MNE', 'MSR', 'MAR', 'MOZ', 'MMR', 'NAM', 'NRU', 'NPL', 'NLD', 'NCL', 'NZL', 'NIC', 'NER', 'NGA', 'NIU', 'NFK', 'MNP', 'NOR', 'OMN', 'PAK', 'PLW', 'PSE', 'PAN', 'PNG', 'PRY', 'PER', 'PHL', 'PCN', 'POL', 'PRT', 'PRI', 'QAT', 'REU', 'ROU', 'RUS', 'RWA', 'BLM', 'SHN', 'KNA', 'LCA', 'MAF', 'SPM', 'VCT', 'WSM', 'SMR', 'STP', 'SAU', 'SEN', 'SRB', 'SYC', 'SLE', 'SGP', 'SXM', 'SVK', 'SVN', 'SLB', 'SOM', 'ZAF', 'SGS', 'SSD', 'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL', 'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT', 'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE'];\r\n\tfunction isISO31661Alpha3(str) {\r\n\t\tassertString(str);\r\n\t\treturn includes(validISO31661Alpha3CountriesCodes, str.toUpperCase());\r\n\t}\r\n\r\n\tvar base32 = /^[A-Z2-7]+=*$/;\r\n\tfunction isBase32(str) {\r\n\t\tassertString(str);\r\n\t\tvar len = str.length;\r\n\r\n\t\tif (len % 8 === 0 && base32.test(str)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar base58Reg = /^[A-HJ-NP-Za-km-z1-9]*$/;\r\n\tfunction isBase58(str) {\r\n\t\tassertString(str);\r\n\r\n\t\tif (base58Reg.test(str)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar validMediaType = /^[a-z]+\\/[a-z0-9\\-\\+]+$/i;\r\n\tvar validAttribute = /^[a-z\\-]+=[a-z0-9\\-]+$/i;\r\n\tvar validData = /^[a-z0-9!\\$&'\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*$/i;\r\n\tfunction isDataURI(str) {\r\n\t\tassertString(str);\r\n\t\tvar data = str.split(',');\r\n\r\n\t\tif (data.length < 2) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar attributes = data.shift().trim().split(';');\r\n\t\tvar schemeAndMediaType = attributes.shift();\r\n\r\n\t\tif (schemeAndMediaType.substr(0, 5) !== 'data:') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar mediaType = schemeAndMediaType.substr(5);\r\n\r\n\t\tif (mediaType !== '' && !validMediaType.test(mediaType)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < attributes.length; i++) {\r\n\t\t\tif (i === attributes.length - 1 && attributes[i].toLowerCase() === 'base64') {// ok\r\n\t\t\t} else if (!validAttribute.test(attributes[i])) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var _i = 0; _i < data.length; _i++) {\r\n\t\t\tif (!validData.test(data[_i])) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar magnetURI = /^magnet:\\?xt=urn:[a-z0-9]+:[a-z0-9]{32,40}&dn=.+&tr=.+$/i;\r\n\tfunction isMagnetURI(url) {\r\n\t\tassertString(url);\r\n\t\treturn magnetURI.test(url.trim());\r\n\t}\r\n\r\n\t/*\r\n\t\tChecks if the provided string matches to a correct Media type format (MIME type)\r\n\r\n\t\tThis function only checks is the string format follows the\r\n\t\tetablished rules by the according RFC specifications.\r\n\t\tThis function supports 'charset' in textual media types\r\n\t\t(https://tools.ietf.org/html/rfc6657).\r\n\r\n\t\tThis function does not check against all the media types listed\r\n\t\tby the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)\r\n\t\tbecause of lightness purposes : it would require to include\r\n\t\tall these MIME types in this librairy, which would weigh it\r\n\t\tsignificantly. This kind of effort maybe is not worth for the use that\r\n\t\tthis function has in this entire librairy.\r\n\r\n\t\tMore informations in the RFC specifications :\r\n\t\t- https://tools.ietf.org/html/rfc2045\r\n\t\t- https://tools.ietf.org/html/rfc2046\r\n\t\t- https://tools.ietf.org/html/rfc7231#section-3.1.1.1\r\n\t\t- https://tools.ietf.org/html/rfc7231#section-3.1.1.5\r\n\t*/\r\n\t// Match simple MIME types\r\n\t// NB :\r\n\t//   Subtype length must not exceed 100 characters.\r\n\t//   This rule does not comply to the RFC specs (what is the max length ?).\r\n\r\n\tvar mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+]{1,100}$/i; // eslint-disable-line max-len\r\n\t// Handle \"charset\" in \"text/*\"\r\n\r\n\tvar mimeTypeText = /^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i; // eslint-disable-line max-len\r\n\t// Handle \"boundary\" in \"multipart/*\"\r\n\r\n\tvar mimeTypeMultipart = /^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i; // eslint-disable-line max-len\r\n\r\n\tfunction isMimeType(str) {\r\n\t\tassertString(str);\r\n\t\treturn mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);\r\n\t}\r\n\r\n\tvar lat = /^\\(?[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)$/;\r\n\tvar _long = /^\\s?[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|\\d{1,2}(\\.\\d+)?)\\)?$/;\r\n\tvar latDMS = /^(([1-8]?\\d)\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|90\\D+0\\D+0)\\D+[NSns]?$/i;\r\n\tvar longDMS = /^\\s*([1-7]?\\d{1,2}\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|180\\D+0\\D+0)\\D+[EWew]?$/i;\r\n\tvar defaultLatLongOptions = {\r\n\t\tcheckDMS: false\r\n\t};\r\n\tfunction isLatLong(str, options) {\r\n\t\tassertString(str);\r\n\t\toptions = merge(options, defaultLatLongOptions);\r\n\t\tif (!str.includes(',')) return false;\r\n\t\tvar pair = str.split(',');\r\n\t\tif (pair[0].startsWith('(') && !pair[1].endsWith(')') || pair[1].endsWith(')') && !pair[0].startsWith('(')) return false;\r\n\r\n\t\tif (options.checkDMS) {\r\n\t\t\treturn latDMS.test(pair[0]) && longDMS.test(pair[1]);\r\n\t\t}\r\n\r\n\t\treturn lat.test(pair[0]) && _long.test(pair[1]);\r\n\t}\r\n\r\n\tvar threeDigit = /^\\d{3}$/;\r\n\tvar fourDigit = /^\\d{4}$/;\r\n\tvar fiveDigit = /^\\d{5}$/;\r\n\tvar sixDigit = /^\\d{6}$/;\r\n\tvar patterns = {\r\n\t\tAD: /^AD\\d{3}$/,\r\n\t\tAT: fourDigit,\r\n\t\tAU: fourDigit,\r\n\t\tAZ: /^AZ\\d{4}$/,\r\n\t\tBE: fourDigit,\r\n\t\tBG: fourDigit,\r\n\t\tBR: /^\\d{5}-\\d{3}$/,\r\n\t\tBY: /2[1-4]{1}\\d{4}$/,\r\n\t\tCA: /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][\\s\\-]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i,\r\n\t\tCH: fourDigit,\r\n\t\tCN: /^(0[1-7]|1[012356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[1-5]|8[1345]|9[09])\\d{4}$/,\r\n\t\tCZ: /^\\d{3}\\s?\\d{2}$/,\r\n\t\tDE: fiveDigit,\r\n\t\tDK: fourDigit,\r\n\t\tDO: fiveDigit,\r\n\t\tDZ: fiveDigit,\r\n\t\tEE: fiveDigit,\r\n\t\tES: /^(5[0-2]{1}|[0-4]{1}\\d{1})\\d{3}$/,\r\n\t\tFI: fiveDigit,\r\n\t\tFR: /^\\d{2}\\s?\\d{3}$/,\r\n\t\tGB: /^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$/i,\r\n\t\tGR: /^\\d{3}\\s?\\d{2}$/,\r\n\t\tHR: /^([1-5]\\d{4}$)/,\r\n\t\tHT: /^HT\\d{4}$/,\r\n\t\tHU: fourDigit,\r\n\t\tID: fiveDigit,\r\n\t\tIE: /^(?!.*(?:o))[A-z]\\d[\\dw]\\s\\w{4}$/i,\r\n\t\tIL: /^(\\d{5}|\\d{7})$/,\r\n\t\tIN: /^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$/,\r\n\t\tIR: /\\b(?!(\\d)\\1{3})[13-9]{4}[1346-9][013-9]{5}\\b/,\r\n\t\tIS: threeDigit,\r\n\t\tIT: fiveDigit,\r\n\t\tJP: /^\\d{3}\\-\\d{4}$/,\r\n\t\tKE: fiveDigit,\r\n\t\tLI: /^(948[5-9]|949[0-7])$/,\r\n\t\tLT: /^LT\\-\\d{5}$/,\r\n\t\tLU: fourDigit,\r\n\t\tLV: /^LV\\-\\d{4}$/,\r\n\t\tMX: fiveDigit,\r\n\t\tMT: /^[A-Za-z]{3}\\s{0,1}\\d{4}$/,\r\n\t\tMY: fiveDigit,\r\n\t\tNL: /^\\d{4}\\s?[a-z]{2}$/i,\r\n\t\tNO: fourDigit,\r\n\t\tNP: /^(10|21|22|32|33|34|44|45|56|57)\\d{3}$|^(977)$/i,\r\n\t\tNZ: fourDigit,\r\n\t\tPL: /^\\d{2}\\-\\d{3}$/,\r\n\t\tPR: /^00[679]\\d{2}([ -]\\d{4})?$/,\r\n\t\tPT: /^\\d{4}\\-\\d{3}?$/,\r\n\t\tRO: sixDigit,\r\n\t\tRU: sixDigit,\r\n\t\tSA: fiveDigit,\r\n\t\tSE: /^[1-9]\\d{2}\\s?\\d{2}$/,\r\n\t\tSG: sixDigit,\r\n\t\tSI: fourDigit,\r\n\t\tSK: /^\\d{3}\\s?\\d{2}$/,\r\n\t\tTH: fiveDigit,\r\n\t\tTN: fourDigit,\r\n\t\tTW: /^\\d{3}(\\d{2})?$/,\r\n\t\tUA: fiveDigit,\r\n\t\tUS: /^\\d{5}(-\\d{4})?$/,\r\n\t\tZA: fourDigit,\r\n\t\tZM: fiveDigit\r\n\t};\r\n\tvar locales$4 = Object.keys(patterns);\r\n\tfunction isPostalCode(str, locale) {\r\n\t\tassertString(str);\r\n\r\n\t\tif (locale in patterns) {\r\n\t\t\treturn patterns[locale].test(str);\r\n\t\t} else if (locale === 'any') {\r\n\t\t\tfor (var key in patterns) {\r\n\t\t\t\t// https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\r\n\t\t\t\t// istanbul ignore else\r\n\t\t\t\tif (patterns.hasOwnProperty(key)) {\r\n\t\t\t\t\tvar pattern = patterns[key];\r\n\r\n\t\t\t\t\tif (pattern.test(str)) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Invalid locale '\".concat(locale, \"'\"));\r\n\t}\r\n\r\n\tfunction ltrim(str, chars) {\r\n\t\tassertString(str); // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\r\n\r\n\t\tvar pattern = chars ? new RegExp(\"^[\".concat(chars.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"]+\"), 'g') : /^\\s+/g;\r\n\t\treturn str.replace(pattern, '');\r\n\t}\r\n\r\n\tfunction rtrim(str, chars) {\r\n\t\tassertString(str); // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\r\n\r\n\t\tvar pattern = chars ? new RegExp(\"[\".concat(chars.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"]+$\"), 'g') : /\\s+$/g;\r\n\t\treturn str.replace(pattern, '');\r\n\t}\r\n\r\n\tfunction trim(str, chars) {\r\n\t\treturn rtrim(ltrim(str, chars), chars);\r\n\t}\r\n\r\n\tfunction escape(str) {\r\n\t\tassertString(str);\r\n\t\treturn str.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\//g, '&#x2F;').replace(/\\\\/g, '&#x5C;').replace(/`/g, '&#96;');\r\n\t}\r\n\r\n\tfunction unescape(str) {\r\n\t\tassertString(str);\r\n\t\treturn str.replace(/&amp;/g, '&').replace(/&quot;/g, '\"').replace(/&#x27;/g, \"'\").replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&#x2F;/g, '/').replace(/&#x5C;/g, '\\\\').replace(/&#96;/g, '`');\r\n\t}\r\n\r\n\tfunction blacklist$1(str, chars) {\r\n\t\tassertString(str);\r\n\t\treturn str.replace(new RegExp(\"[\".concat(chars, \"]+\"), 'g'), '');\r\n\t}\r\n\r\n\tfunction stripLow(str, keep_new_lines) {\r\n\t\tassertString(str);\r\n\t\tvar chars = keep_new_lines ? '\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F' : '\\\\x00-\\\\x1F\\\\x7F';\r\n\t\treturn blacklist$1(str, chars);\r\n\t}\r\n\r\n\tfunction whitelist(str, chars) {\r\n\t\tassertString(str);\r\n\t\treturn str.replace(new RegExp(\"[^\".concat(chars, \"]+\"), 'g'), '');\r\n\t}\r\n\r\n\tfunction isWhitelisted(str, chars) {\r\n\t\tassertString(str);\r\n\r\n\t\tfor (var i = str.length - 1; i >= 0; i--) {\r\n\t\t\tif (chars.indexOf(str[i]) === -1) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar default_normalize_email_options = {\r\n\t\t// The following options apply to all email addresses\r\n\t\t// Lowercases the local part of the email address.\r\n\t\t// Please note this may violate RFC 5321 as per http://stackoverflow.com/a/9808332/192024).\r\n\t\t// The domain is always lowercased, as per RFC 1035\r\n\t\tall_lowercase: true,\r\n\t\t// The following conversions are specific to GMail\r\n\t\t// Lowercases the local part of the GMail address (known to be case-insensitive)\r\n\t\tgmail_lowercase: true,\r\n\t\t// Removes dots from the local part of the email address, as that's ignored by GMail\r\n\t\tgmail_remove_dots: true,\r\n\t\t// Removes the subaddress (e.g. \"+foo\") from the email address\r\n\t\tgmail_remove_subaddress: true,\r\n\t\t// Conversts the googlemail.com domain to gmail.com\r\n\t\tgmail_convert_googlemaildotcom: true,\r\n\t\t// The following conversions are specific to Outlook.com / Windows Live / Hotmail\r\n\t\t// Lowercases the local part of the Outlook.com address (known to be case-insensitive)\r\n\t\toutlookdotcom_lowercase: true,\r\n\t\t// Removes the subaddress (e.g. \"+foo\") from the email address\r\n\t\toutlookdotcom_remove_subaddress: true,\r\n\t\t// The following conversions are specific to Yahoo\r\n\t\t// Lowercases the local part of the Yahoo address (known to be case-insensitive)\r\n\t\tyahoo_lowercase: true,\r\n\t\t// Removes the subaddress (e.g. \"-foo\") from the email address\r\n\t\tyahoo_remove_subaddress: true,\r\n\t\t// The following conversions are specific to Yandex\r\n\t\t// Lowercases the local part of the Yandex address (known to be case-insensitive)\r\n\t\tyandex_lowercase: true,\r\n\t\t// The following conversions are specific to iCloud\r\n\t\t// Lowercases the local part of the iCloud address (known to be case-insensitive)\r\n\t\ticloud_lowercase: true,\r\n\t\t// Removes the subaddress (e.g. \"+foo\") from the email address\r\n\t\ticloud_remove_subaddress: true\r\n\t}; // List of domains used by iCloud\r\n\r\n\tvar icloud_domains = ['icloud.com', 'me.com']; // List of domains used by Outlook.com and its predecessors\r\n\t// This list is likely incomplete.\r\n\t// Partial reference:\r\n\t// https://blogs.office.com/2013/04/17/outlook-com-gets-two-step-verification-sign-in-by-alias-and-new-international-domains/\r\n\r\n\tvar outlookdotcom_domains = ['hotmail.at', 'hotmail.be', 'hotmail.ca', 'hotmail.cl', 'hotmail.co.il', 'hotmail.co.nz', 'hotmail.co.th', 'hotmail.co.uk', 'hotmail.com', 'hotmail.com.ar', 'hotmail.com.au', 'hotmail.com.br', 'hotmail.com.gr', 'hotmail.com.mx', 'hotmail.com.pe', 'hotmail.com.tr', 'hotmail.com.vn', 'hotmail.cz', 'hotmail.de', 'hotmail.dk', 'hotmail.es', 'hotmail.fr', 'hotmail.hu', 'hotmail.id', 'hotmail.ie', 'hotmail.in', 'hotmail.it', 'hotmail.jp', 'hotmail.kr', 'hotmail.lv', 'hotmail.my', 'hotmail.ph', 'hotmail.pt', 'hotmail.sa', 'hotmail.sg', 'hotmail.sk', 'live.be', 'live.co.uk', 'live.com', 'live.com.ar', 'live.com.mx', 'live.de', 'live.es', 'live.eu', 'live.fr', 'live.it', 'live.nl', 'msn.com', 'outlook.at', 'outlook.be', 'outlook.cl', 'outlook.co.il', 'outlook.co.nz', 'outlook.co.th', 'outlook.com', 'outlook.com.ar', 'outlook.com.au', 'outlook.com.br', 'outlook.com.gr', 'outlook.com.pe', 'outlook.com.tr', 'outlook.com.vn', 'outlook.cz', 'outlook.de', 'outlook.dk', 'outlook.es', 'outlook.fr', 'outlook.hu', 'outlook.id', 'outlook.ie', 'outlook.in', 'outlook.it', 'outlook.jp', 'outlook.kr', 'outlook.lv', 'outlook.my', 'outlook.ph', 'outlook.pt', 'outlook.sa', 'outlook.sg', 'outlook.sk', 'passport.com']; // List of domains used by Yahoo Mail\r\n\t// This list is likely incomplete\r\n\r\n\tvar yahoo_domains = ['rocketmail.com', 'yahoo.ca', 'yahoo.co.uk', 'yahoo.com', 'yahoo.de', 'yahoo.fr', 'yahoo.in', 'yahoo.it', 'ymail.com']; // List of domains used by yandex.ru\r\n\r\n\tvar yandex_domains = ['yandex.ru', 'yandex.ua', 'yandex.kz', 'yandex.com', 'yandex.by', 'ya.ru']; // replace single dots, but not multiple consecutive dots\r\n\r\n\tfunction dotsReplacer(match) {\r\n\t\tif (match.length > 1) {\r\n\t\t\treturn match;\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n\tfunction normalizeEmail(email, options) {\r\n\t\toptions = merge(options, default_normalize_email_options);\r\n\t\tvar raw_parts = email.split('@');\r\n\t\tvar domain = raw_parts.pop();\r\n\t\tvar user = raw_parts.join('@');\r\n\t\tvar parts = [user, domain]; // The domain is always lowercased, as it's case-insensitive per RFC 1035\r\n\r\n\t\tparts[1] = parts[1].toLowerCase();\r\n\r\n\t\tif (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {\r\n\t\t\t// Address is GMail\r\n\t\t\tif (options.gmail_remove_subaddress) {\r\n\t\t\t\tparts[0] = parts[0].split('+')[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (options.gmail_remove_dots) {\r\n\t\t\t\t// this does not replace consecutive dots like example..email@gmail.com\r\n\t\t\t\tparts[0] = parts[0].replace(/\\.+/g, dotsReplacer);\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0].length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (options.all_lowercase || options.gmail_lowercase) {\r\n\t\t\t\tparts[0] = parts[0].toLowerCase();\r\n\t\t\t}\r\n\r\n\t\t\tparts[1] = options.gmail_convert_googlemaildotcom ? 'gmail.com' : parts[1];\r\n\t\t} else if (icloud_domains.indexOf(parts[1]) >= 0) {\r\n\t\t\t// Address is iCloud\r\n\t\t\tif (options.icloud_remove_subaddress) {\r\n\t\t\t\tparts[0] = parts[0].split('+')[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0].length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (options.all_lowercase || options.icloud_lowercase) {\r\n\t\t\t\tparts[0] = parts[0].toLowerCase();\r\n\t\t\t}\r\n\t\t} else if (outlookdotcom_domains.indexOf(parts[1]) >= 0) {\r\n\t\t\t// Address is Outlook.com\r\n\t\t\tif (options.outlookdotcom_remove_subaddress) {\r\n\t\t\t\tparts[0] = parts[0].split('+')[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0].length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (options.all_lowercase || options.outlookdotcom_lowercase) {\r\n\t\t\t\tparts[0] = parts[0].toLowerCase();\r\n\t\t\t}\r\n\t\t} else if (yahoo_domains.indexOf(parts[1]) >= 0) {\r\n\t\t\t// Address is Yahoo\r\n\t\t\tif (options.yahoo_remove_subaddress) {\r\n\t\t\t\tvar components = parts[0].split('-');\r\n\t\t\t\tparts[0] = components.length > 1 ? components.slice(0, -1).join('-') : components[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0].length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (options.all_lowercase || options.yahoo_lowercase) {\r\n\t\t\t\tparts[0] = parts[0].toLowerCase();\r\n\t\t\t}\r\n\t\t} else if (yandex_domains.indexOf(parts[1]) >= 0) {\r\n\t\t\tif (options.all_lowercase || options.yandex_lowercase) {\r\n\t\t\t\tparts[0] = parts[0].toLowerCase();\r\n\t\t\t}\r\n\r\n\t\t\tparts[1] = 'yandex.ru'; // all yandex domains are equal, 1st preferred\r\n\t\t} else if (options.all_lowercase) {\r\n\t\t\t// Any other address\r\n\t\t\tparts[0] = parts[0].toLowerCase();\r\n\t\t}\r\n\r\n\t\treturn parts.join('@');\r\n\t}\r\n\r\n\tvar charsetRegex = /^[^\\s-_](?!.*?[-_]{2,})([a-z0-9-\\\\]{1,})[^\\s]*[^-_\\s]$/;\r\n\tfunction isSlug(str) {\r\n\t\tassertString(str);\r\n\t\treturn charsetRegex.test(str);\r\n\t}\r\n\r\n\tvar upperCaseRegex = /^[A-Z]$/;\r\n\tvar lowerCaseRegex = /^[a-z]$/;\r\n\tvar numberRegex = /^[0-9]$/;\r\n\tvar symbolRegex = /^[-#!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/ ]$/;\r\n\tvar defaultOptions = {\r\n\t\tminLength: 8,\r\n\t\tminLowercase: 1,\r\n\t\tminUppercase: 1,\r\n\t\tminNumbers: 1,\r\n\t\tminSymbols: 1,\r\n\t\treturnScore: false,\r\n\t\tpointsPerUnique: 1,\r\n\t\tpointsPerRepeat: 0.5,\r\n\t\tpointsForContainingLower: 10,\r\n\t\tpointsForContainingUpper: 10,\r\n\t\tpointsForContainingNumber: 10,\r\n\t\tpointsForContainingSymbol: 10\r\n\t};\r\n\t/* Counts number of occurrences of each char in a string\r\n\t * could be moved to util/ ?\r\n\t*/\r\n\r\n\tfunction countChars(str) {\r\n\t\tvar result = {};\r\n\t\tArray.from(str).forEach(function (_char) {\r\n\t\t\tvar curVal = result[_char];\r\n\r\n\t\t\tif (curVal) {\r\n\t\t\t\tresult[_char] += 1;\r\n\t\t\t} else {\r\n\t\t\t\tresult[_char] = 1;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t/* Return information about a password */\r\n\r\n\r\n\tfunction analyzePassword(password) {\r\n\t\tvar charMap = countChars(password);\r\n\t\tvar analysis = {\r\n\t\t\tlength: password.length,\r\n\t\t\tuniqueChars: Object.keys(charMap).length,\r\n\t\t\tuppercaseCount: 0,\r\n\t\t\tlowercaseCount: 0,\r\n\t\t\tnumberCount: 0,\r\n\t\t\tsymbolCount: 0\r\n\t\t};\r\n\t\tObject.keys(charMap).forEach(function (_char2) {\r\n\t\t\tif (upperCaseRegex.test(_char2)) {\r\n\t\t\t\tanalysis.uppercaseCount += charMap[_char2];\r\n\t\t\t} else if (lowerCaseRegex.test(_char2)) {\r\n\t\t\t\tanalysis.lowercaseCount += charMap[_char2];\r\n\t\t\t} else if (numberRegex.test(_char2)) {\r\n\t\t\t\tanalysis.numberCount += charMap[_char2];\r\n\t\t\t} else if (symbolRegex.test(_char2)) {\r\n\t\t\t\tanalysis.symbolCount += charMap[_char2];\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn analysis;\r\n\t}\r\n\r\n\tfunction scorePassword(analysis, scoringOptions) {\r\n\t\tvar points = 0;\r\n\t\tpoints += analysis.uniqueChars * scoringOptions.pointsPerUnique;\r\n\t\tpoints += (analysis.length - analysis.uniqueChars) * scoringOptions.pointsPerRepeat;\r\n\r\n\t\tif (analysis.lowercaseCount > 0) {\r\n\t\t\tpoints += scoringOptions.pointsForContainingLower;\r\n\t\t}\r\n\r\n\t\tif (analysis.uppercaseCount > 0) {\r\n\t\t\tpoints += scoringOptions.pointsForContainingUpper;\r\n\t\t}\r\n\r\n\t\tif (analysis.numberCount > 0) {\r\n\t\t\tpoints += scoringOptions.pointsForContainingNumber;\r\n\t\t}\r\n\r\n\t\tif (analysis.symbolCount > 0) {\r\n\t\t\tpoints += scoringOptions.pointsForContainingSymbol;\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\t}\r\n\r\n\tfunction isStrongPassword(str) {\r\n\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\r\n\t\tassertString(str);\r\n\t\tvar analysis = analyzePassword(str);\r\n\t\toptions = merge(options || {}, defaultOptions);\r\n\r\n\t\tif (options.returnScore) {\r\n\t\t\treturn scorePassword(analysis, options);\r\n\t\t}\r\n\r\n\t\treturn analysis.length >= options.minLength && analysis.lowercaseCount >= options.minLowercase && analysis.uppercaseCount >= options.minUppercase && analysis.numberCount >= options.minNumbers && analysis.symbolCount >= options.minSymbols;\r\n\t}\r\n\r\n\tvar vatMatchers = {\r\n\t\tGB: /^GB((\\d{3} \\d{4} ([0-8][0-9]|9[0-6]))|(\\d{9} \\d{3})|(((GD[0-4])|(HA[5-9]))[0-9]{2}))$/,\r\n\t\tIT: /^(IT)?[0-9]{11}$/\r\n\t};\r\n\tfunction isVAT(str, countryCode) {\r\n\t\tassertString(str);\r\n\t\tassertString(countryCode);\r\n\r\n\t\tif (countryCode in vatMatchers) {\r\n\t\t\treturn vatMatchers[countryCode].test(str);\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Invalid country code: '\".concat(countryCode, \"'\"));\r\n\t}\r\n\r\n\tvar version = '13.5.1';\r\n\tvar validator = {\r\n\t\tversion: version,\r\n\t\ttoDate: toDate,\r\n\t\ttoFloat: toFloat,\r\n\t\ttoInt: toInt,\r\n\t\ttoBoolean: toBoolean,\r\n\t\tequals: equals,\r\n\t\tcontains: contains,\r\n\t\tmatches: matches,\r\n\t\tisEmail: isEmail,\r\n\t\tisURL: isURL,\r\n\t\tisMACAddress: isMACAddress,\r\n\t\tisIP: isIP,\r\n\t\tisIPRange: isIPRange,\r\n\t\tisFQDN: isFQDN,\r\n\t\tisBoolean: isBoolean,\r\n\t\tisIBAN: isIBAN,\r\n\t\tisBIC: isBIC,\r\n\t\tisAlpha: isAlpha,\r\n\t\tisAlphaLocales: locales$1,\r\n\t\tisAlphanumeric: isAlphanumeric,\r\n\t\tisAlphanumericLocales: locales$2,\r\n\t\tisNumeric: isNumeric,\r\n\t\tisPassportNumber: isPassportNumber,\r\n\t\tisPort: isPort,\r\n\t\tisLowercase: isLowercase,\r\n\t\tisUppercase: isUppercase,\r\n\t\tisAscii: isAscii,\r\n\t\tisFullWidth: isFullWidth,\r\n\t\tisHalfWidth: isHalfWidth,\r\n\t\tisVariableWidth: isVariableWidth,\r\n\t\tisMultibyte: isMultibyte,\r\n\t\tisSemVer: isSemVer,\r\n\t\tisSurrogatePair: isSurrogatePair,\r\n\t\tisInt: isInt,\r\n\t\tisIMEI: isIMEI,\r\n\t\tisFloat: isFloat,\r\n\t\tisFloatLocales: locales,\r\n\t\tisDecimal: isDecimal,\r\n\t\tisHexadecimal: isHexadecimal,\r\n\t\tisOctal: isOctal,\r\n\t\tisDivisibleBy: isDivisibleBy,\r\n\t\tisHexColor: isHexColor,\r\n\t\tisRgbColor: isRgbColor,\r\n\t\tisHSL: isHSL,\r\n\t\tisISRC: isISRC,\r\n\t\tisMD5: isMD5,\r\n\t\tisHash: isHash,\r\n\t\tisJWT: isJWT,\r\n\t\tisJSON: isJSON,\r\n\t\tisEmpty: isEmpty,\r\n\t\tisEmptyString: isEmptyString,\r\n\t\tisEmptyObject: isEmptyObject,\r\n\t\tisNullOrUndefined: isNullOrUndefined,\r\n\t\tisLength: isLength,\r\n\t\tisLocale: isLocale,\r\n\t\tisByteLength: isByteLength,\r\n\t\tisUUID: isUUID,\r\n\t\tisMongoId: isMongoId,\r\n\t\tisAfter: isAfter,\r\n\t\tisBefore: isBefore,\r\n\t\tisIn: isIn,\r\n\t\tisCreditCard: isCreditCard,\r\n\t\tisIdentityCard: isIdentityCard,\r\n\t\tisEAN: isEAN,\r\n\t\tisISIN: isISIN,\r\n\t\tisISBN: isISBN,\r\n\t\tisISSN: isISSN,\r\n\t\tisMobilePhone: isMobilePhone,\r\n\t\tisMobilePhoneLocales: locales$3,\r\n\t\tisPostalCode: isPostalCode,\r\n\t\tisPostalCodeLocales: locales$4,\r\n\t\tisEthereumAddress: isEthereumAddress,\r\n\t\tisCurrency: isCurrency,\r\n\t\tisBtcAddress: isBtcAddress,\r\n\t\tisISO8601: isISO8601,\r\n\t\tisRFC3339: isRFC3339,\r\n\t\tisISO31661Alpha2: isISO31661Alpha2,\r\n\t\tisISO31661Alpha3: isISO31661Alpha3,\r\n\t\tisBase32: isBase32,\r\n\t\tisBase58: isBase58,\r\n\t\tisBase64: isBase64,\r\n\t\tisDataURI: isDataURI,\r\n\t\tisMagnetURI: isMagnetURI,\r\n\t\tisMimeType: isMimeType,\r\n\t\tisLatLong: isLatLong,\r\n\t\tltrim: ltrim,\r\n\t\trtrim: rtrim,\r\n\t\ttrim: trim,\r\n\t\tescape: escape,\r\n\t\tunescape: unescape,\r\n\t\tstripLow: stripLow,\r\n\t\twhitelist: whitelist,\r\n\t\tblacklist: blacklist$1,\r\n\t\tisWhitelisted: isWhitelisted,\r\n\t\tnormalizeEmail: normalizeEmail,\r\n\t\ttoString: toString,\r\n\t\tisSlug: isSlug,\r\n\t\tisStrongPassword: isStrongPassword,\r\n\t\tisTaxID: isTaxID,\r\n\t\tisDate: isDate,\r\n\t\tisVAT: isVAT,\r\n\t};\r\n\r\n\treturn validator;\r\n\r\n})));\r\n"],"names":["TokenBase","storageKey","Token","constructor","refreshToken","arguments","length","undefined","jwtToken","super","this","clear","set","saveToken","saveItem","saveStr","Buffer","from","JSON","stringify","toString","localStorage","setItem","loadToken","load","getItem","loadStr","loadItem","parse","BaseEndpoint","method","url","base_url","config","_createUrl","test","concat","process","REACT_APP_API_ENDPOINT","Endpoint","req","data","headers","params","axios","request","AuthEndpoint","token","Promise","res","rej","_createHeader","then","resp","catch","err","response","status","fallbackRequest","TokenEndpoint","Authorization","_createFallbackHeader","endpoint","header","UNIVERSAL_TOKEN","jwt","AdmetItemItem","_ref","id","isAccepted","Disposed","isRejected","mapToStyles","_jsxs","className","children","_jsx","FontAwesomeIcon","icon","faCheckCircle","faTimesCircle","faDotCircle","Parameter","AdmetItem","_ref2","name","Lister","array","render","props","_ref3","zoomable","noZoom","zoom","smile","isZoomed","setIsZoomed","React","toggleZoom","redirect","isEmptyString","window","open","console","error","content","MessageBox","state","onClick","admetData","title","module","exports","_typeof","obj","Symbol","iterator","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","Object","_arr","_n","_d","_e","_s","_i","next","done","push","value","o","minLen","n","call","slice","len","arr2","TypeError","_createForOfIteratorHelper","allowArrayLike","it","F","s","e","f","normalCompletion","didErr","step","return","assertString","input","String","invalidType","toDate","date","Date","isNaN","locale","alpha","ar","he","fa","alphanumeric","decimal","englishLocales","_locale","arabicLocales","_locale2","farsiLocales","_i2","dotDecimal","commaDecimal","_i3","_i4","isFloat","str","options","_float","RegExp","parseFloat","replace","hasOwnProperty","min","max","lt","gt","locales","keys","toFloat","NaN","toInt","radix","parseInt","toBoolean","strict","equals","comparison","toString$1","merge","defaults","key","defaulContainsOptions","ignoreCase","contains","elem","toLowerCase","indexOf","matches","pattern","modifiers","isByteLength","encodeURI","split","default_fqdn_options","require_tld","allow_underscores","allow_trailing_dot","allow_numeric_tld","isFQDN","substring","parts","tld","pop","part","ipv4Maybe","ipv6Block","isIP","version","sort","a","b","addressAndZone","includes","blocks","foundOmissionBlock","foundIPv4TransitionBlock","expectedNumberOfBlocks","substr","shift","default_email_options","allow_display_name","require_display_name","allow_utf8_local_part","blacklisted_chars","ignore_max_length","splitNameAddress","emailUserPart","gmailUserPart","quotedEmailUser","emailUserUtf8Part","quotedEmailUserUtf8","defaultMaxEmailLength","validateDisplayName","display_name","trim_quotes","match","display_name_without_quotes","trim","isEmail","display_email","_display_email","endsWith","domain","user","join","lower_domain","domain_specific_validation","username","_user_parts","allow_ip_domain","startsWith","noBracketdomain","user_parts","search","default_url_options","protocols","require_protocol","require_host","require_port","require_valid_protocol","allow_protocol_relative_urls","validate_length","wrapped_ipv6","isRegExp","checkHost","host","isURL","protocol","auth","hostname","port","port_str","ipv6","disallow_auth","ipv6_match","host_whitelist","host_blacklist","macAddress","macAddressNoColons","macAddressWithHyphen","macAddressWithSpaces","macAddressWithDots","isMACAddress","no_colons","subnetMaybe","isIPRange","default_date_options","format","delimiters","strictMode","isValidFormat","zip","zippedArr","Math","isDate","_step","formatDelimiter","find","delimiter","dateDelimiter","dateObj","_iterator","_step$value","dateWord","formatWord","charAt","m","d","y","getDate","isFinite","isBoolean","localeReg","isLocale","isAlpha","_str","ignore","Error","locales$1","isAlphanumeric","locales$2","numericNoSymbols","isNumeric","no_symbols","passportRegexByCountryCode","AM","AR","AT","AU","BE","BG","BY","CA","CH","CN","CY","CZ","DE","DK","DZ","EE","ES","FI","FR","GB","GR","HR","HU","IE","IN","IS","IT","JP","KR","LT","LU","LV","MT","NL","PO","PT","RO","RU","SE","SL","SK","TR","UA","US","isPassportNumber","countryCode","normalizedStr","toUpperCase","_int","intLeadingZeroes","isInt","regex","allow_leading_zeroes","minCheckPassed","maxCheckPassed","ltCheckPassed","gtCheckPassed","isPort","isLowercase","isUppercase","imeiRegexWithoutHypens","imeiRegexWithHypens","isIMEI","imeiRegex","allow_hyphens","sum","mul","l","digit","tp","ascii","isAscii","fullWidth","isFullWidth","halfWidth","isHalfWidth","isVariableWidth","multibyte","isMultibyte","multilineRegexp","flags","regexpAsStringLiteral","semanticVersioningRegex","isSemVer","surrogatePair","isSurrogatePair","val","some","arrVal","decimalRegExp","decimal_digits","force_decimal","default_decimal_options","blacklist","isDecimal","hexadecimal","isHexadecimal","octal","isOctal","isDivisibleBy","num","hexcolor","isHexColor","rgbColor","rgbaColor","rgbColorPercent","rgbaColorPercent","isRgbColor","includePercentValues","hslcomma","hslspace","isHSL","isrc","isISRC","ibanRegexThroughCountryCode","AD","AE","AL","AZ","BA","BH","BR","CR","DO","EG","FO","GE","GI","GL","GT","IL","IQ","IR","JO","KW","KZ","LB","LC","LI","MC","MD","ME","MK","MR","MU","NO","PK","PL","PS","QA","RS","SA","SC","SI","SM","SV","TL","TN","VA","VG","XK","hasValidIbanFormat","strippedStr","isoCountryCode","hasValidIbanChecksum","_char","charCodeAt","reduce","acc","Number","isIBAN","isBICReg","isBIC","md5","isMD5","lengths","md4","sha1","sha256","sha384","sha512","ripemd128","ripemd160","tiger128","tiger160","tiger192","crc32","crc32b","isHash","algorithm","notBase64","urlSafeBase64","defaultBase64Options","urlSafe","isBase64","firstPaddingChar","isJWT","dotSplit","currElem","default_json_options","allow_primitives","isJSON","primitives","default_is_empty_options","ignore_whitespace","isNullOrUndefined","variable","isEmpty","isEmptyObject","isLength","surrogatePairs","uuid","all","isUUID","isMongoId","isAfter","original","isBefore","isIn","creditCard","isCreditCard","sanitized","tmpNum","shouldDouble","validators","DNI","charsValue","X","Y","Z","controlDigits","number","p","c","map","reverse","forEach","k1","k2","incNum","idCardNo","provincesAndCities","powers","parityBit","checkAddressCode","addressCode","checkBirthDayCode","birDayCode","yyyy","mm","dd","xdata","getFullYear","getMonth","getParityBit","id17","power","checkParityBit","check15IdCardNo","check","check18IdCardNo","ALPHABET_CODES","A","B","C","D","E","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","index","code","floor","isIdentityCard","validator","LENGTH_EAN_8","validEanRegex","getPositionWeightThroughLengthAndIndex","calculateCheckDigit","ean","remainder","partialSum","isEAN","actualCheckDigit","isin","isISIN","checksumStr","character","isbn10Maybe","isbn13Maybe","factor","isISBN","checksum","issn","isISSN","testIssn","require_hyphen","case_sensitive","digits","iso7064Check","checkvalue","luhnCheck","second","product","reverseMultiplyAndSum","base","total","verhoeffCheck","d_table","p_table","str_copy","bgBgCheck","tin","century_year","month","multip_lookup","csCzCheck","full_year","checkdigit","deAtCheck","deDeCheck","occurences","j","filter","trip_locations","recurrent","dkDkCheck","year","weight","elCyCheck","fromCharCode","elGrCheck","pow","enIeCheck","enUsCampusPrefix","andover","atlanta","austin","brookhaven","cincinnati","fresno","internet","kansas","memphis","ogden","philadelphia","sba","enUsGetPrefixes","prefixes","location","apply","enUsCheck","esEsCheck","chars","lead_replace","splice","unshift","lookup","etEeCheck","fiFiCheck","frBeCheck","checkdigits","frFrCheck","frLuCheck","hrHrCheck","huHuCheck","itItNameCheck","vowelflag","xflag","itItCheck","number_replace","_number_locations","day","_i5","char_to_int","odd_convert","_i6","_char_to_int","multiplier","lvLvCheck","mtMtCheck","first_part","nlNlCheck","plPlCheck","_checksum","_i7","ptPtCheck","roRoCheck","multipliers","skSkCheck","slSiCheck","svSeCheck","tin_copy","current_year","current_century","taxIdFormat","taxIdCheck","allsymbols","sanitizeRegexes","isTaxID","strcopy","phones","isMobilePhone","locales$3","eth","isEthereumAddress","currencyRegex","digits_after_decimal","symbol","require_symbol","negative","whole_dollar_amount_without_sep","whole_dollar_amount_with_sep","thousands_separator","whole_dollar_amount","decimal_amount","decimal_separator","require_decimal","allow_decimal","allow_negatives","parens_for_negatives","negative_sign_after_digits","negative_sign_before_digits","allow_negative_sign_placeholder","allow_space_after_symbol","allow_space_after_digits","symbol_after_digits","default_currency_options","isCurrency","bech32","base58","isBtcAddress","log","iso8601","iso8601StrictSeparator","isValidDate","ordinalMatch","oYear","oDay","monthString","dayString","getUTCFullYear","getUTCMonth","getUTCDate","isISO8601","strictSeparator","dateFullYear","dateMonth","dateMDay","timeHour","timeMinute","timeSecond","timeSecFrac","timeNumOffset","source","timeOffset","partialTime","fullDate","fullTime","rfc3339","isRFC3339","validISO31661Alpha2CountriesCodes","isISO31661Alpha2","validISO31661Alpha3CountriesCodes","isISO31661Alpha3","base32","isBase32","base58Reg","isBase58","validMediaType","validAttribute","validData","isDataURI","attributes","schemeAndMediaType","mediaType","magnetURI","isMagnetURI","mimeTypeSimple","mimeTypeText","mimeTypeMultipart","isMimeType","lat","_long","latDMS","longDMS","defaultLatLongOptions","checkDMS","isLatLong","pair","fourDigit","fiveDigit","sixDigit","patterns","HT","ID","KE","MX","MY","NP","NZ","PR","SG","TH","TW","ZA","ZM","locales$4","isPostalCode","ltrim","rtrim","escape","unescape","blacklist$1","stripLow","keep_new_lines","whitelist","isWhitelisted","default_normalize_email_options","all_lowercase","gmail_lowercase","gmail_remove_dots","gmail_remove_subaddress","gmail_convert_googlemaildotcom","outlookdotcom_lowercase","outlookdotcom_remove_subaddress","yahoo_lowercase","yahoo_remove_subaddress","yandex_lowercase","icloud_lowercase","icloud_remove_subaddress","icloud_domains","outlookdotcom_domains","yahoo_domains","yandex_domains","dotsReplacer","normalizeEmail","email","raw_parts","components","charsetRegex","isSlug","upperCaseRegex","lowerCaseRegex","numberRegex","symbolRegex","defaultOptions","minLength","minLowercase","minUppercase","minNumbers","minSymbols","returnScore","pointsPerUnique","pointsPerRepeat","pointsForContainingLower","pointsForContainingUpper","pointsForContainingNumber","pointsForContainingSymbol","countChars","result","analyzePassword","password","charMap","analysis","uniqueChars","uppercaseCount","lowercaseCount","numberCount","symbolCount","_char2","scorePassword","scoringOptions","points","isStrongPassword","vatMatchers","isVAT","isAlphaLocales","isAlphanumericLocales","isFloatLocales","isMobilePhoneLocales","isPostalCodeLocales","factory"],"sourceRoot":""}